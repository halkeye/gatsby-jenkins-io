{"version":3,"file":"component---src-pages-awards-jsx-65ac1b4c476cfcef60b9.js","mappings":"uKAYA,SAASA,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,gBAAC,IAAD,CACEM,eAAgB,CACdR,KAAAA,GAEFE,MAAOA,EACPO,cAAeF,EAAY,QAAWA,EAAiB,KACvDN,KAAM,CACJ,CACES,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAAST,GAEX,CACEU,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAR,EAAKG,oBAAL,eAAmBO,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAAST,GAEX,CACEQ,KAAK,sBACLC,QAASN,IAEXS,OAAOb,KAKfH,EAAIiB,aAAe,CACjBf,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,8ECrFMiB,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUf,EAAb,EAAaA,MAAUgB,GAAvB,mBACvB,gBAAC,IAAD,iBAAYA,EAAZ,CAAmBhB,MAAOA,IACxB,uBAAKiB,UAAU,aACb,uBAAKA,UAAU,YACb,0BAAKjB,GACJe,MAMTD,EAAiBI,YAAc,mBAC/B,O,wECTMC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,gBAAC,IAAD,CAAkBpB,MAAM,SACtB,gBAAC,IAAD,CAAKA,MAAM,UACVoB,EAAKC,cAAcC,MAAMC,KAAI,sBAASC,EAAT,EAAGC,KAAH,OAC5B,uBAAKC,IAAKF,EAAMG,KACbH,MAAAA,GAAA,UAAAA,EAAOI,aAAP,eAAcC,kBAAmB,gBAAC,EAAAC,EAAD,CAAaF,OAAOG,EAAAA,EAAAA,GAASP,EAAMI,OAAQI,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAASC,IAAI,YACzHX,MAAAA,GAAD,UAACA,EAAOI,aAAR,OAAC,EAAcC,mBAAmBL,MAAAA,GAAlC,UAAkCA,EAAOI,aAAzC,aAAkC,EAAcQ,YAAa,uBAAKC,IAAKb,EAAMI,MAAMQ,UAAWJ,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAASC,IAAI,UAC7I,0BACGX,EAAMc,KAAO,qBAAGC,KAAMf,EAAMc,KAAMd,EAAMxB,QACvCwB,EAAMc,KAAOd,EAAMxB,OAEtBwB,EAAM3B,aAAe,yBAAI2B,EAAM3B,aAC/B2B,EAAMgB,OAAS,kCAAahB,EAAMgB,aAK3CrB,EAAUD,YAAc,YAExB,a,qBCzBe,SAASuB,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIhB,EAAKkB,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKN,GAG7B,IAAKE,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjClB,EAAMoB,EAAWF,GACbD,EAASO,QAAQxB,IAAQ,IAC7BmB,EAAOnB,GAAOgB,EAAOhB,IAGvB,OAAOmB,E","sources":["webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/layout/SimplePageLayout.js","webpack://gatsby-starter-default/./src/pages/awards.jsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from 'react';\nimport Layout from '../components/layout';\n\nconst SimplePageLayout = ({ children, title, ...props }) => (\n  <Layout {...props} title={title}>\n    <div className=\"container\">\n      <div className=\"row body\">\n        <h1>{title}</h1>\n        {children}\n      </div>\n    </div>\n  </Layout>\n);\n\nSimplePageLayout.displayName = 'SimplePageLayout';\nexport default SimplePageLayout;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport SimplePageLayout from '../layout/SimplePageLayout';\nimport Seo from '../components/seo';\n\nconst AwardPage = ({ data }) => (\n  <SimplePageLayout title=\"Award\">\n    <Seo title=\"Award\" />\n    {data.allAwardsYaml.edges.map(({ node: award }) => (\n      <div key={award.id}>\n        {award?.image?.childImageSharp && <GatsbyImage image={getImage(award.image)} style={{ float: 'right', margin: '5px' }} alt=\"Award\" /> }\n        {!award?.image?.childImageSharp && award?.image?.publicURL && <img src={award.image.publicURL} style={{ float: 'right', margin: '5px' }} alt=\"Award\" />}\n        <h2>\n          {award.url && <a href={award.url}>{award.title}</a>}\n          {!award.url && award.title}\n        </h2>\n        {award.description && <p>{award.description}</p>}\n        {award.quote && <blockquote>{award.quote}</blockquote>}\n      </div>\n    ))}\n  </SimplePageLayout>\n);\nAwardPage.displayName = 'AwardPage';\n\nexport default AwardPage;\nexport const pageQuery = graphql`\nquery AwardPageQuery {\n  allAwardsYaml(sort: {order: DESC, fields: year}) {\n    edges {\n      node {\n        image {\n          publicURL\n          childImageSharp {\n            gatsbyImageData(\n              height: 150\n              layout: CONSTRAINED\n            )\n          }\n        }\n        id\n        url\n        title\n        description\n        quote\n      }\n    }\n  }\n}`;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["Seo","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","SimplePageLayout","children","props","className","displayName","AwardPage","data","allAwardsYaml","edges","map","award","node","key","id","image","childImageSharp","G","getImage","style","float","margin","alt","publicURL","src","url","href","quote","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}