{"version":3,"file":"component---src-templates-blog-list-template-js-8edf1c9e10ddc345b443.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/TagList.jsx","webpack://gatsby-starter-default/./src/components/Pagination.jsx","webpack://gatsby-starter-default/./src/templates/blog-list-template.js","webpack://gatsby-starter-default/./src/utils.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nconst TagList = ({ tags }) => (\n  <ul className=\"list-inline tags\">\n    {tags.map((tag) => (\n      <li key={tag}>\n        <Link className=\"tag-link\" to={`/node/tags/jenkins/${tag}`}>\n          {tag}\n        </Link>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TagList;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nconst link = (prefix, page) => {\n  // The url changed depending on if we are on the first page or later pages.\n  // These must be relative links to handle pagination of tags.\n  // First page on blog or tags:\n  // https://jenkins.io/node/\n  // https://jenkins.io/node/tags/pipeline/\n  // Other pages on blog or tags:\n  // https://jenkins.io/node/page/4.html\n  // https://jenkins.io/node/tags/pipeline/page/4.html\n  if (page === 1) { return prefix; }\n  return `${prefix}/page/${page}`;\n};\n\nconst Pagination = ({\n  prefix, currentPage, numPages,\n}) => {\n  const linkedPages = Array.from(new Set([\n    1,\n    2,\n    3,\n    currentPage,\n    currentPage - 1,\n    currentPage - 2,\n    currentPage + 1,\n    currentPage + 2,\n    numPages - 2,\n    numPages - 1,\n    numPages,\n  ])).sort((a, b) => a - b).filter((page) => page > 0 && page <= numPages);\n  if (linkedPages.length === 0) { return null; }\n\n  return (\n    <div>\n      <nav>\n        <ul className=\"pagination\">\n          <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n            <Link className=\"page-link\" to={link(prefix, currentPage - 1)}>\n              &laquo;\n            </Link>\n          </li>\n          {linkedPages.map((page, idx) => {\n            const ret = [];\n            // if there's a gap, add a ...\n            if (idx !== 0 && linkedPages[idx - 1] !== page - 1) {\n              ret.push(<li key=\"...\" className=\"page item disabled\"><div className=\"page-link\">...</div></li>);\n            }\n            ret.push(<li key={page} className={`page-item ${currentPage === page ? 'active' : ''}`}><Link className=\"page-link\" to={link(prefix, page)}>{page}</Link></li>);\n            return ret;\n          })}\n          <li className={`page-item ${currentPage === numPages ? 'disabled' : ''}`}>\n            <Link className=\"page-link\" to={link(prefix, currentPage + 1)}>\n              &raquo;\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport TagList from '../components/TagList';\nimport Pagination from '../components/Pagination';\n\nimport { reactJoin, SHORT_MONTH_NAMES } from '../utils';\n\nconst Post = ({\n  slug, date, title, strippedHtml, authors, tags,\n}) => {\n  const dateObj = new Date(date);\n  return (\n    <li className=\"post\">\n      <Link to={slug} className=\"body\">\n        <div className=\"header\">\n          <div className=\"date\">\n            <div className=\"month\">\n              {SHORT_MONTH_NAMES[dateObj.getUTCMonth()].padStart(2)}\n            </div>\n            <div className=\"day\">\n              {dateObj.getUTCDate().toString().padStart(2)}\n            </div>\n          </div>\n          <h5 className=\"title\">\n            {title}\n          </h5>\n        </div>\n        <p className=\"teaser\">\n          {strippedHtml}\n          <span className=\"more\" />\n        </p>\n      </Link>\n      <div className=\"attrs\">\n        {reactJoin(authors.map((a) => <Link key={a.slug} to={a.slug}>{a.name}</Link>), ', ')}\n        <TagList tags={tags || []} />\n      </div>\n    </li>\n  );\n};\n\nconst BlogPage = ({ pageContext, data: { allBlog: { edges } } }) => {\n  if (!edges) {\n    return <Layout />;\n  }\n  return (\n    <Layout>\n      <div className=\"container\">\n        <div id=\"block-block-15\" className=\"block block-block even blog-posts\">\n          <h3 className=\"title\">Recent Blog Posts</h3>\n        </div>\n        <div className=\"content blog-posts\">\n          <div className=\"item-list\">\n            <ul className=\"ji-blog-list ji-item-list\">\n              {edges.map(({ node: post }) => <Post key={post.id} {...post} />)}\n            </ul>\n          </div>\n        </div>\n        <Pagination prefix=\"/blog\" currentPage={pageContext.currentPage} numPages={pageContext.numPages} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query blogPage($skip: Int!, $limit: Int!) {\n    allBlog(\n      sort: { fields: [date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          date\n          id\n          slug\n          strippedHtml\n          title\n          tags\n          authors {\n            ...AuthorFragment\n          }\n        }\n      }\n    }\n  }\n`;\n","export const reactJoin = (elements, joiner) => (elements.length ? elements.reduce((prev, curr) => [prev, joiner, curr]) : []);\nexport const SHORT_MONTH_NAMES = [\n  'Jan', 'Feb', 'March', 'April', 'May', 'Jun',\n  'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec',\n];\n"],"names":["tags","className","map","tag","key","Link","to","link","prefix","page","currentPage","numPages","linkedPages","Array","from","Set","sort","a","b","filter","length","idx","ret","push","Post","slug","date","title","strippedHtml","authors","dateObj","Date","SHORT_MONTH_NAMES","getUTCMonth","padStart","getUTCDate","toString","reactJoin","name","TagList","pageContext","edges","data","allBlog","id","post","node","elements","joiner","reduce","prev","curr"],"sourceRoot":""}