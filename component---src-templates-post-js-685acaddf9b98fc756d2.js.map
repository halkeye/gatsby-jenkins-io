{"version":3,"file":"component---src-templates-post-js-685acaddf9b98fc756d2.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Avatar.js","webpack://gatsby-starter-default/./src/components/SocialMediaButtons.jsx","webpack://gatsby-starter-default/./src/components/Author.js","webpack://gatsby-starter-default/./src/components/TagList.jsx","webpack://gatsby-starter-default/./src/components/TwitterShareButton.jsx","webpack://gatsby-starter-default/./src/components/Discourse.jsx","webpack://gatsby-starter-default/./src/templates/post.js","webpack://gatsby-starter-default/./src/utils.js"],"sourcesContent":["import React from 'react';\nimport { GatsbyImage, getImage, StaticImage } from 'gatsby-plugin-image';\n\nconst Avatar = ({ name, avatar }) => (\n  <div>\n    {avatar?.childImageSharp && <GatsbyImage image={getImage(avatar)} alt={name} />}\n    {!avatar?.childImageSharp && <StaticImage src=\"../../content/images/logos/transparent/transparent.svg\" alt={name} width={128} />}\n  </div>\n);\nAvatar.displayName = 'Avatar';\n\nexport default Avatar;\n","import React from 'react';\n\nconst SocialMediaButtons = ({\n  github, twitter, blog, linkedin,\n}) => (\n  <ul className=\"author social-media-buttons\">\n    {github && (<li className=\"author\"><a href={`https://github.com/${github}`} target=\"_blank\" rel=\"noreferrer noopener\">Github</a></li>)}\n    {twitter && (<li className=\"author\"><a href={`https://twitter.com/${twitter}`} target=\"_blank\" rel=\"noreferrer noopener\">Twitter</a></li>)}\n    {blog && (<li className=\"author\"><a href={blog} target=\"_blank\" rel=\"noreferrer noopener\">Blog</a></li>)}\n    {linkedin && (<li className=\"author\"><a href={`https://www.linkedin.com/in/${linkedin}`} target=\"_blank\" rel=\"noreferrer noopener\">LinkedIn</a></li>)}\n  </ul>\n);\nSocialMediaButtons.displayName = 'SocialMediaButtons';\n\nexport default SocialMediaButtons;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport Avatar from './Avatar';\nimport SocialMediaButtons from './SocialMediaButtons';\n\nconst AuthorBio = ({ html }) => {\n  if (!html) {\n    return (\n      <p>\n        {`This author has no biography defined.\n            See social media links referenced below.`}\n      </p>\n    );\n  }\n\n  return <div dangerouslySetInnerHTML={{ __html: html }} />;\n};\nAuthorBio.displayName = 'AuthorBio';\n\nconst Author = ({\n  name,\n  html,\n  blogroll,\n  slug,\n  avatar,\n  twitter,\n  github,\n  linkedin,\n  blog,\n}) => (\n  <div>\n    {!blogroll && (<h2>{name}</h2>)}\n    <table className=\"author box\">\n      <tbody>\n        <tr>\n          <td style={{ width: avatar?.childImageSharp?.gatsbyImageData?.width || 128 }}>\n            <Avatar avatar={avatar} name={name} />\n          </td>\n          <td>\n            {blogroll && (\n            <b className=\"author name\">\n              <Link to={slug}>\n                {name}\n              </Link>\n            </b>\n            )}\n            <AuthorBio html={html} />\n            <SocialMediaButtons twitter={twitter} github={github} linkedin={linkedin} blog={blog} />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n);\nAuthor.displayName = 'Author';\n\nexport default Author;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst TagList = ({ tags }) => (\n  <ul className=\"list-inline tags\">\n    {tags.map((tag) => (\n      <li key={tag}>\n        <Link className=\"tag-link\" to={`/node/tags/${tag}`}>\n          {tag}\n        </Link>\n      </li>\n    ))}\n  </ul>\n);\nTagList.displayName = 'TagList';\n\nexport default TagList;\n","import React from 'react';\nimport { withPrefix, graphql, useStaticQuery } from 'gatsby';\n\nconst TwitterShareButton = ({ title, path }) => {\n  const { site: { siteMetadata: { siteUrl } } } = useStaticQuery(graphql`query { site { siteMetadata { siteUrl } } }`);\n\n  const url = new URL(siteUrl);\n  url.pathname = withPrefix(path);\n  return (\n    <a\n      className=\"twitter-share-button\"\n      href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(url.toString())}`}\n      data-lang=\"en\"\n      rel=\"noreferrer nofollow\"\n      target=\"_blank\"\n    >\n      Tweet\n    </a>\n  );\n};\nTwitterShareButton.displayName = 'TwitterShareButton';\nexport default TwitterShareButton;\n","import * as React from 'react';\n\nconst Discourse = ({ topicId }) => {\n  React.useEffect(() => {\n    if (!topicId) { return; }\n    const embedOptions = { discourseUrl: 'https://community.jenkins.io/' };\n    if (topicId !== '*') {\n      // Support both topic IDs and full URLs\n      // TODO: Check number validity\n      embedOptions.topicId = topicId.replace(/\\/\\s*$/, '').replace(/.*\\//, '');\n    }\n\n    window.DiscourseEmbed = embedOptions;\n\n    const d = document.createElement('script');\n    d.type = 'text/javascript';\n    d.async = true;\n    d.src = `${window.DiscourseEmbed.discourseUrl}javascripts/embed.js`;\n    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(d);\n  }, [topicId]);\n\n  if (!topicId) { return <div />; }\n\n  return (\n    <div>\n      <b className=\"title\">Discuss</b>\n      <div id=\"discourse-comments\" />\n    </div>\n  );\n};\n\nexport default Discourse;\n","import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport TagList from '../components/TagList';\nimport TwitterShareButton from '../components/TwitterShareButton';\nimport Discourse from '../components/Discourse';\nimport Author from '../components/Author';\nimport { reactJoin } from '../utils';\n\nconst Authors = ({ authors, blogroll }) => (\n  <div id=\"about-the-author\">\n    <b className=\"author about-header\">\n      About the Author\n      {authors.length > 1 ? 's' : ''}\n    </b>\n    {authors.map((author) => <Author key={author.id} blogroll={blogroll} {...author} />)}\n  </div>\n);\nAuthors.displayName = 'Author';\n\nconst Post = ({ data, pageContext }) => {\n  const {\n    title, date, authors, html, tags, slug, links,\n  } = data.blog;\n  return (\n    <Layout>\n      <div className=\"container blog-post\">\n        <div className=\"row\">\n          <div className=\"col\"><Link to={pageContext.previous}>Prev</Link></div>\n          <div className=\"col text-right\"><Link to={pageContext.next}>Next</Link></div>\n        </div>\n        <div className=\"row body\">\n          <div id=\"content\" className=\"col-md-11 col-md-offset-1 main-content\">\n            <div className=\"content-top\">\n              <h1>\n                <Link to={slug} title={title}>{title}</Link>\n              </h1>\n              <div style={{ float: 'right', clear: 'all' }}>\n                <TwitterShareButton title={title} path={slug} />\n                <div className=\"post-attrs\">\n                  <span className=\"submitted\">\n                    Published on\n                    {' '}\n                    {new Date(date).toLocaleDateString()}\n                    {' '}\n                    by\n                    {' '}\n                    {reactJoin(authors.map((a) => <Link key={a.slug} to={a.slug}>{a.name}</Link>), ', ')}\n                  </span>\n                  <TagList tags={tags || []} />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: html }} />\n                <Authors authors={authors} blogroll />\n              </div>\n              <Discourse topicId={links.discourse} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\nPost.displayName = 'Post';\n\nexport default Post;\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    blog(id: { eq: $id }) {\n      html\n      id\n      title\n      date\n      slug\n      links {\n        discourse\n      }\n      authors {\n        ...AuthorFragment\n      }\n    }\n  }\n`;\n","export const reactJoin = (elements, joiner) => (elements.length ? elements.reduce((prev, curr) => [prev, joiner, curr]) : []);\nexport const SHORT_MONTH_NAMES = [\n  'Jan', 'Feb', 'March', 'April', 'May', 'Jun',\n  'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec',\n];\n"],"names":["Avatar","name","avatar","childImageSharp","G","image","getImage","alt","S","src","width","displayName","SocialMediaButtons","github","twitter","blog","linkedin","className","href","target","rel","AuthorBio","html","dangerouslySetInnerHTML","__html","Author","blogroll","slug","style","gatsbyImageData","Link","to","TagList","tags","map","tag","key","TwitterShareButton","title","path","siteUrl","useStaticQuery","site","siteMetadata","url","URL","pathname","withPrefix","encodeURIComponent","toString","topicId","React","embedOptions","discourseUrl","replace","window","DiscourseEmbed","d","document","createElement","type","async","getElementsByTagName","appendChild","id","Authors","authors","length","author","Post","data","pageContext","date","links","previous","next","float","clear","Date","toLocaleDateString","reactJoin","a","discourse","elements","joiner","reduce","prev","curr","SHORT_MONTH_NAMES"],"sourceRoot":""}