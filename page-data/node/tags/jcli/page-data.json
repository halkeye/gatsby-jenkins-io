{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/jcli",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2019-08-30T00:00:00.000Z","id":"ddc369d5-a5e4-57f5-8fb7-5ebe49126b06","slug":"/blog/2019/08/30/jenkins-cli/","strippedHtml":"As a developer, I usually use Jenkins like this:\n\nFind a job which is related with my current work\n\nTrigger that job\n\nCheck the output of the build log\n\nSometimes, I might need to check the update center. Maybe a new plugin is needed, or I need to update an existing plugin.\nOr, I want to upload a plugin from my computer. For all these cases, I just don’t need a UI or even a browser.\nI like to use a CLI to complete most of my tasks. For example, I use kubectl to manage my Kubernetes cluster,\nto create or modify the kubernetes resources. So, I start to think, 'Why not use a CLI to manage my Jenkins?'.\n\nWhy create a new one?\n\nFirst, I almost forgot about the existing Jenkins CLI, written in Java. Let me introduce how to use that one.\n\nVisit Jenkins page from http://localhost:8080/jenkins/cli/ . You’ll see a command like java -jar jenkins-cli.jar -s http://localhost:8080/jenkins/ help. So, a jar file needs to be download.\nWe can use this command to complete this task wget http://localhost:8080/jenkins/jnlpJars/jenkins-cli.jar .\n\nNow you can see that this is not a Linux-style CLI. Please consider some points below:\n\nThe users must have a JRE. This is not convenient for developers who don’t use Java.\n\nThe CLI is too wordy. We always need to type java -jar jenkins-cli.jar -s http://localhost:8080/jenkins/ as the initial command.\n\nCannot install it by some popular package manager, like brew or yum.\n\nOf course, the Java CLI client is more native with Jenkins. But I’d like to use this more easily.\nSo I decided to create a new CLI tool which would be written in Go and which would natively run on modern platforms.\n\nThat’s the story of creating jcli.\n\nFeatures\n\nEasy to maintain config file for jcli\n\nMultiple Jenkins support\n\nPlugins management (list, search, install, upload)\n\nJob management (search, build, log)\n\nOpen your Jenkins with a browser\n\nRestart your Jenkins\n\nConnection with proxy support\n\nHow to get it?\n\nYou can clone jcli from the jenkins-cli repo. For now, we support\nthese three most popular OS platforms: MacOS, Linux, and Windows.\n\nMacOS\n\nYou can use brew to install jcli.\n\nbrew tap jenkins-zh/jcli\nbrew install jcli\n\nLinux\n\nIt’s very simple to install jcli into your Linux OS. Just need to execute a command line at below:\n\ncurl -L https://github.com/jenkins-zh/jenkins-cli/releases/latest/download/jcli-linux-amd64.tar.gz|tar xzv\nsudo mv jcli /usr/local/bin/\n\nWindows\n\nYou can find the latest version by clicking here. Then download the tar file, cp the uncompressed jcli directory into your system path.\n\nHow to get started?\n\nIt’s very simple to use this. Once you get jcli on your computer, use this command to generate a sample configuration:\n\n$ jcli config generate\ncurrent: yourServer\njenkins_servers:\n- name: yourServer\n  url: http://localhost:8080/jenkins\n  username: admin\n  token: 111e3a2f0231198855dceaff96f20540a9\n  proxy: \"\"\n  proxyAuth: \"\"\n# Goto 'http://localhost:8080/jenkins/me/configure', then you can generate your token.\n\nIn most cases, you should modify three fields which are url, username and token. OK, I believe you’re ready. Please check whether you install the github plugin in your Jenkins:\n\njcli plugin list --filter name=github\n\nThat’s the end. It’s still in very early development stage. Any contribution is welcome.","title":"Managing Jenkins with jcli","tags":["general","jcli","cli","tools"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#989898","images":{"fallback":{"src":"/gatsby-jenkins-io/static/e862ae9393b3993a9bb02d848cf1c9ab/19e71/linuxsuren.jpg","srcSet":"/gatsby-jenkins-io/static/e862ae9393b3993a9bb02d848cf1c9ab/77b35/linuxsuren.jpg 32w,\n/gatsby-jenkins-io/static/e862ae9393b3993a9bb02d848cf1c9ab/d4a57/linuxsuren.jpg 64w,\n/gatsby-jenkins-io/static/e862ae9393b3993a9bb02d848cf1c9ab/19e71/linuxsuren.jpg 128w,\n/gatsby-jenkins-io/static/e862ae9393b3993a9bb02d848cf1c9ab/68974/linuxsuren.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/e862ae9393b3993a9bb02d848cf1c9ab/ef6ff/linuxsuren.webp 32w,\n/gatsby-jenkins-io/static/e862ae9393b3993a9bb02d848cf1c9ab/8257c/linuxsuren.webp 64w,\n/gatsby-jenkins-io/static/e862ae9393b3993a9bb02d848cf1c9ab/6766a/linuxsuren.webp 128w,\n/gatsby-jenkins-io/static/e862ae9393b3993a9bb02d848cf1c9ab/22bfc/linuxsuren.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"LinuxSuRen","html":"<div class=\"paragraph\">\n<p>Rick is a big fan of Jenkins, also as a contributor leading the Jenkins China community.</p>\n</div>","id":"linuxsuren","irc":null,"linkedin":"linuxsuren","name":"赵晓杰(Rick)","slug":"/blog/authors/linuxsuren","twitter":"LinuxSuRen"}]}}]}},"pageContext":{"tag":"jcli","limit":8,"skip":0,"numPages":1,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}