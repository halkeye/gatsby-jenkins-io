{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/developer",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2021-11-12T00:00:00.000Z","id":"a9735536-b2e4-5087-b945-8c2c9a395814","slug":"/blog/2021/11/12/interview-duchess-hacktoberfest/","strippedHtml":"This year, the Duchess community embraced a new challenge:\nworking on women‚Äôs presence in Open Source while participating in Jenkins during the Hacktoberfest, a yearly event.\n\nHuge congrats to all the contributors! ü•≥\n\nNote: This blog is a translation, the source blog post is located here https://www.duchess-france.org/duchess-hacktoberfest-2021/\n\nAnne-Laure Gaillard Interview\n\nHello Anne-Laure, can you introduce yourself?\n\nLinkedIn\n\nAfter a PhD in Computer Science and a few years in Software Development, I specialized in software quality assurance, and particularly in the testing domain.\nI‚Äôm a supporter of the doctrine: ‚ÄúQuality is everyone‚Äôs business‚Äù. Fond of agility, I‚Äôm part of the organization committee of the Agile Tour Bordeaux since 2020.\n\nI also like to engage in sporting challenges: I swam across the Garonne (a big river in the south of France) and finished 2 triathlons.\nKeeping the best for the end: I‚Äôm the mother of two kids who taught me it‚Äôs possible to speak about Pokemon with one, while drawing a unicorn with the other.\n\nWhat did you think about Open Source, and maybe Jenkins, before starting the hackathon?\n\nDuring my studies, I met quite a lot of ‚Äúnerds / geeks‚Äù contributing to Linux distributions (Gentoo & Debian).\nTheir technical skills seemed higher than mine and the Open Source universe looked inaccessible to me.\nConcerning Jenkins, I am a user (now contributor) of it, but not an administrator.\n\nWhat motivated you to participate in that hackathon?\n\nI dared to participate thanks to the Duchess (and mainly Ang√©lique, thanks to her).\nHaving the support and backing of the community was my motivation.\n\nWhat will you remember from this experience?\n\nFrom a professional point of view, I perfected my knowledge of Git, and I had a chance to overview part of the quality processes from Open Source projects.\nMy first Pull Request was approved by‚Ä¶ 9 people!\nThe fourth reviewer did find an issue.\nWho can tell me code review isn‚Äôt useful now?\n\nFrom a personal perspective, I remember two things.\nThe first one: Open Source communities are not elitist communities.\nEvery contribution matters, even small ones.\nThe people I met were positive and benevolent.\nThe second one could be illustrated by a quote from Grace Hopper: ‚ÄúIf it‚Äôs a good idea, go ahead and do it. It‚Äôs much easier to apologize than it is to get permission.‚Äù.\n\nDo you have anything more to say?\n\nAfter Jenkins, I also submitted Pull Requests to others Open Source projects.\nThe problem: with such a diversity of Open Source projects, how to organize your time?\n\nAnne-Laure Gaillard contributions during hacktoberfest\n\nhttps://github.com/jenkinsci/jenkins/pull/5779\n\nhttps://github.com/jenkinsci/jenkins/pull/5785\n\nhttps://github.com/jenkinsci/jenkins/pull/5804\n\nhttps://github.com/jenkinsci/jenkins/pull/5806\n\nhttps://github.com/jenkinsci/jenkins/pull/5807\n\nhttps://github.com/jenkinsci/jenkins/pull/5808\n\nhttps://github.com/jenkinsci/jenkins/pull/5822\n\nhttps://github.com/jenkinsci/jenkins/pull/5823\n\nhttps://github.com/mattermost/quality-assurance/pull/25\n\nhttps://github.com/mattermost/quality-assurance/pull/23\n\nhttps://github.com/sarequl/Netflix-Helper/pull/6\n\nBertha Torres Interview\n\nTwitter: @tatoberres\n\nLinkedIn\n\nHello Bertha, can you introduce yourself?\n\nComing from a literature training and as a language teacher for more than 15 years, it‚Äôs while moving to a high mountain area that a need to explore other skills set in.\n\nThus, a self-taught training followed by a validated file for financing diploma training followed one another and confirmed to me that life is too short to waste it on what does not make sense to us.\n\nWhat did you think about Open Source, and maybe Jenkins, before starting the hackathon?\n\nParticipating in Open Source appeared to me in that exploratory process like a learning opportunity‚Ä¶\nwhich I thought was inaccessible of course! I didn‚Äôt see myself writing code.\n\nBut thanks to the Duchess France community, I learned how to contribute at my level and to understand the contribution process.\nIt‚Äôll allow me as things progress to contribute in more domains.\n\nCan you tell us how the woman version of Jenkins was born?\n\nWell‚Ä¶ In the presentation video for Hacktoberfest, the artwork was mentioned ( https://www.jenkins.io/artwork/) and Ang√©lique also mentioned it during the first meeting‚Ä¶\nAnd one must admit that looking at it, you can see a lot of different things but women.\n\nSo I imagined a governess, very confident, efficient, very clever, scrupulously combed, nicely dressed, who might represent the personality of what Jenkins is made of.\n\nDo you have anything to add?\n\nThis time I was able to participate through Pull Requests related to translation and drawing. I‚Äôll probably do it again!\n\nBertha Torres contributions during hacktoberfest\n\nhttps://github.com/jenkins-infra/jenkins.io/pull/4627\n\nhttps://github.com/jenkinsci/jenkins/pull/5796\n\nhttps://github.com/jenkinsci/jenkins/pull/5797\n\nhttps://github.com/jenkinsci/workflow-job-plugin/pull/214\n\nhttps://github.com/jenkinsci/workflow-job-plugin/pull/215\n\nhttps://github.com/jenkinsci/ant-plugin/pull/78\n\nhttps://github.com/jenkinsci/ant-plugin/pull/77\n\nPauline Iogna‚Äôs Interview\n\nTwitter: @pauline_io\n\nHello Pauline, can you introduce yourself?\n\nI‚Äôm a backend developer in Java/Scala, and an active member of Duchess France.\n\nWhat did you think about Open Source, and maybe Jenkins, before starting the hackathon?\n\nI didn‚Äôt really have an opinion about Jenkins before doing the hackathon.\nLike many other people, I‚Äôm a Jenkins user but I didn‚Äôt know its source code.\n\nWhat motivated you to participate in this hackathon?\n\nActually participating in Hacktoberfest.\nJust bringing a contribution, even modest, on an open source project.\n\nWhat did you discover through that hackathon?\n\nTechnically, I discovered how to do MVC with Apache Jelly.\nI also rediscovered the contribution process of Open Source projects.\n\nThe Hacktoberfest mechanism is really well thought out for onboarding people wanting to start working on Open Source projects.\nWith Ang√©lique‚Äôs help on top of that to animate sessions on the Duchess France Slack channel, we had the best conditions to contribute to that important project.\n\nWhat will you remember from this experience?\n\nIt‚Äôs not that simple to contribute to a project you‚Äôre just discovering, it requires a bit of investment and patience.\nOn Jenkins, the contributors are really reactive and the Pull Requests are quickly reviewed.\nThe feedback is useful and benevolent.\nThere is one Jira project listing all the features and bugs to be worked on for the project.\nSome tickets are flagged as ‚Äúnewbie‚Äù allowing those who are beginners to pick easily and quickly doable tickets.\n\nPauline Iogna contributions\n\nhttps://github.com/jenkinsci/jenkins/pull/5835\n\nhttps://github.com/jenkinsci/jenkins/pull/5793\n\nA few words about the organization within Duchess France\n\nThe framework was intentionally simple and flexible. We started with an online kick start meeting for describing a bit of context, and more precisely the Jenkins universe.\n\nOnline kick start meeting for context\n\nThen, we mainly exchanged through the Duchess Slack channel in an asynchronous way on a dedicated channel, as well as a 30 minutes meeting each Friday during October.","title":"Interview of Duchess contributors for hacktoberfest 2021 on Jenkins","tags":["jenkins","hacktoberfest","developer","newcomer"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/991545e7fbe587409ec80b375ee7057f/19e71/ajard.jpg","srcSet":"/gatsby-jenkins-io/static/991545e7fbe587409ec80b375ee7057f/77b35/ajard.jpg 32w,\n/gatsby-jenkins-io/static/991545e7fbe587409ec80b375ee7057f/d4a57/ajard.jpg 64w,\n/gatsby-jenkins-io/static/991545e7fbe587409ec80b375ee7057f/19e71/ajard.jpg 128w,\n/gatsby-jenkins-io/static/991545e7fbe587409ec80b375ee7057f/68974/ajard.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/991545e7fbe587409ec80b375ee7057f/ef6ff/ajard.webp 32w,\n/gatsby-jenkins-io/static/991545e7fbe587409ec80b375ee7057f/8257c/ajard.webp 64w,\n/gatsby-jenkins-io/static/991545e7fbe587409ec80b375ee7057f/6766a/ajard.webp 128w,\n/gatsby-jenkins-io/static/991545e7fbe587409ec80b375ee7057f/22bfc/ajard.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"aHenryJard","html":"<div class=\"paragraph\">\n<p>Ang√©lique is a software developer since 2006, Jenkins user since ever and plugins developer since 2019. She is an active member of <a href=\"https://www.duchess-france.org\">Duchess France</a>, a women in tech association.\nCurrently, Ang√©lique works at <a href=\"https://www.cloudbees.com\">CloudBees</a> as a senior software engineer.</p>\n</div>","id":"ajard","irc":null,"linkedin":"angelique-henry","name":"Ang√©lique Jard (Henry)","slug":"/blog/authors/ajard","twitter":"aHenryJard"}]}},{"node":{"date":"2021-11-09T00:00:00.000Z","id":"869bbefa-21a4-5f34-973b-1e5dbb96aa14","slug":"/blog/2021/11/09/guava-upgrade/","strippedHtml":"Summary\n\nJenkins bundles Guava, a core Java library from Google.\nBeginning with Jenkins 2.320 (released on November 10, 2021), Jenkins has upgraded the Guava library from\n11.0.1 (released on January 9, 2012) to\n31.0.1 (released on September 27, 2021).\nPlugins have already been prepared to support the new version of Guava in JEP-233.\nUse the Plugin Manager to upgrade all plugins before and after upgrading to Jenkins 2.320.\n\nMotivation\n\nMany security-conscious organizations using, or planning to use, Jenkins run off-the-shelf security scanners to look for known vulnerabilities.\nThese commonly flag the obsolete Guava library as susceptible to a serialization-related vulnerability ( CVE-2018-10237) and recommend upgrading.\nWhile Jenkins uses JEP-200 to form an explicit list of allowed classes for deserialization,\nand the two Guava classes affected by CVE-2018-10237 are not and will never be added to the list,\nit is time-consuming for the security team to respond to purported security reports\nand for users to justify exemptions from policy to use Jenkins anyway.\n\nFurthermore, the decade-old version of Guava has long been a maintenance burden for Jenkins developers.\nIn a world where Dependabot offers upgrades to libraries released just hours before,\nit is unpleasant to be working with dependencies that are many years old.\n\nFor more information, see JEP-233.\n\nUpgrading\n\nThe vast majority of plugins have already been prepared to support the new version of Guava in JEP-233.\nJenkins users need only upgrade plugins to compatible versions as documented in the \"Released As\" field in Jira.\nIt is critical to use the Plugin Manager to upgrade all plugins before and after upgrading to Jenkins 2.320.\nFailure to upgrade plugins to compatible versions may result in ClassNotFoundException, NoClassDefFoundError, or other low-level Java errors.\n\nReporting issues\n\nIf you find a regression in a plugin, please file a bug report in Jira:\n\nOpen JEP-233 issues\n\nWhen reporting an issue, include the following information:\n\nUse the JEP-233 label.\n\nProvide the complete list of installed plugins as suggested in the bug reporting guidelines.\n\nProvide the complete stack trace, if relevant.\n\nProvide steps to reproduce the issue from scratch on a minimal Jenkins installation; the scenario should fail when the steps are followed on Jenkins 2.320 or later and pass when the steps are followed on Jenkins 2.319 or earlier.\n\nIf you maintain a Jenkins plugin with an open JEP-233 issue,\nthen please check if there is a pull request awaiting merge or release.\nIf you use an unmaintained Jenkins plugin with an open JEP-233 issue,\nconsider stepping up and adopting the plugin to release a compatible version.\n\nConclusion\n\nWe expect to see a bit of disruption from these changes\nbut hope that in the long run they will save time for core and plugin developers\nand lead to a more secure and stable tool.\nPlease reach out on the developers' list with any questions or suggestions.","title":"Guava library upgrade (breaking changes!)","tags":["jenkins","core","developer","announcement"],"authors":[{"avatar":null,"blog":null,"github":"basil","html":"<div class=\"paragraph\">\n<p>Basil is a long-time Jenkins user and contributor, a Jenkins core maintainer, and the maintainer of the <a href=\"https://plugins.jenkins.io/email-ext\">Email Extension</a>, <a href=\"https://plugins.jenkins.io/timestamper\">Timestamper</a>, and <a href=\"https://plugins.jenkins.io/swarm\">Swarm</a> plugins (among others).\nBasil enjoys working on open source software in his free time.</p>\n</div>","id":"basil","irc":null,"linkedin":"basilcrow","name":"Basil Crow","slug":"/blog/authors/basil","twitter":"bcrow"}]}},{"node":{"date":"2021-06-04T00:00:00.000Z","id":"ae4a71c1-cb70-5ef0-9944-ab05566b6516","slug":"/blog/2021/06/04/digester-removal/","strippedHtml":"Keeping up with our goal to clean up some of the technical debt inside Jenkins Core and reduce the maintenance overheads, we are happy to report we were able to remove a long-deprecated Apache Commons Digester library.\n\nJenkins Core does not depend anymore on Apache Commons Digester v.2.1, a version that has been released in 2010.\n\nSome plugins will require update to operate properly after the Jenkins core upgrade.\nSee JEP-231 for the full list of the affected plugins.\nBelow there is the list of plugins that did not have their fix released at the time of writing.\nThey will start to break with the weekly on the 7th of June, expected to be the 2.297.\n\nteamconcert\n\nvs-code-metrics\n\nBlameSubversion\n\njavatest-report\n\nvss\n\nsynergy\n\nconfig-rotator\n\nharvest\n\ncmvc\n\nIn addition to these still-served plugins, a few others will break.\nNote however that these were already suspended [ 1 ] for various reasons, so we do recommend to move away from using them or step up as maintainers.\nThe IDs for these plugins are: tfs, svn-release-mgr, cpptest, cflint, script-scm, rtc.\n\nIt is always a good idea to update all your plugins before upgrading Jenkins core.\n\nPlease reach out on the developers‚Äô list with any questions or suggestions.\n\nGetting fixes in the affected plugins\n\nFor all affected plugins we have submitted pull requests with compatibility patches.\nThese plugins seem to have no active maintainer, and hence we cannot commit on delivering those fixes.\nIn mean time you can build a custom patch locally to resolve the issue on your instances.\nIf you use any of those plugins, consider stepping up and adopting them so that the fixes could be released.\nWe will appreciate any contributions!\n\nResources\n\nPR-5320\n\nremoving commons-digester:2.1.\nThis also contains a complete list of impacted plugins and their PRs and statuses.\n\nJEP-231\n\ndescribing this change.\n\n1. this means these plugins are not served anymore by the Jenkins Project‚Äôs hosting service. Even if they were released, the releases would not show up until additional issues are fixed.","title":"Apache Commons Digester library removal (breaking changes!)","tags":["jenkins","core","developer","announcement"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8e8d8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/f1e03/batmat.jpg","srcSet":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/ede19/batmat.jpg 32w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/bc20c/batmat.jpg 64w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/f1e03/batmat.jpg 128w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/b691b/batmat.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/8ba60/batmat.webp 32w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/a9ea7/batmat.webp 64w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/51559/batmat.webp 128w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/28f98/batmat.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":130}}},"blog":"http://batmat.net","github":"batmat","html":"<div class=\"paragraph\">\n<p>Baptiste has been using and contributing to Jenkins since it was called differently, and is a huge proponent of the Agile, Devops &amp; Continuous Delivery movements.\nHe loves to discuss not only the technical aspects, but also the even more essential cultural aspects of this all, working together to improve the value provided to customers in a great inclusive and blameless environment.</p>\n</div>","id":"batmat","irc":null,"linkedin":null,"name":"Baptiste Mathus","slug":"/blog/authors/batmat","twitter":"bmathus"}]}},{"node":{"date":"2020-12-16T00:00:00.000Z","id":"c4aebfbd-d38b-5f0a-9232-aed83e29625f","slug":"/blog/2020/12/16/call-for-mentors/","strippedHtml":"Google Summer of Code (GSoC)\nis a program where students are paid a stipend by Google to work on a free open source project.\nStudents work on the project for three months (June to August).\nPrior to the coding phase, there is a month of community bonding, to welcome students to the Jenkins community and acquaint them with the projects processes for communication and collaboration.\nMentors are actively involved with students from March when students start to work on and submit their applications.\n(see the timeline)\n\nWe are looking for project ideas and mentors to participate in GSoC 2021.\nGSoC project ideas are coding projects that university or college students can accomplish in about three months.\nThe coding projects can be new features, plugins, test frameworks, infrastructure, etc.\nAnyone can submit a project idea, but of course we like it even better if you offer to mentor your project idea.\n\nWe accept new project ideas at any time,\nHowever, project ideas need to be finalised before February 19th, 2021 at 7pm UTC,\nwhich is the deadline for the Jenkins organization to apply to the GSoC program.\nPlease send us your project ideas before the beginning of February so they can get a proper review by the GSoC committee and by the community.\n\nHow to submit a project idea\n\nCreate a pull-request with your idea in a.adoc file\nin the project ideas.\nIt is not necessary to submit a Google Doc, but it will still work if you want to do that.\nSee the instructions on submitting ideas which include an.adoc template and some examples.\n\nCurrent list of ideas\n\nWe currently have a list of project ideas for students to browse.\nNote that this list is subject to change.\n\nWhat does mentoring involve?\n\nPotential mentors are invited to read the information for mentors.\nNote that being a GSoC mentor does not require expert knowledge of Jenkins.\nMentors do not work alone. We make sure that every project has at least two mentors.\nGSoC org admins will help to find technical advisers, so you can study together with your students.\n\nMentoring takes about 5 to 8 hours of work per week (more at the start, less at the end).\nMentors provide guidance, coaching, and sometimes a bit of cheerleading.\nThey review student proposals, pull-requests and the students presentations\nat the evaluation phase.\nThey fill in the Google provided evaluation report form at the end of coding periods.\n\nWhat do you get in exchange?\n\nIn return of mentoring, a student works on your project full time for three months.\nThink about the projects that you‚Äôve always wanted to do but never had the time‚Ä¶‚Äã\n\nMentoring is also an opportunity to improve your management and people skills, while giving back to the community.\n\nThere will be a Google Mentor Summit which takes place every year.\nIn 2020, the Mentor Summit was virtual, but in previous years the summit has taken place in person.\n\nSee this post\nabout the 2019 in person Mentor Summit.\n\nGSoC is a fantastic program and the Jenkins project is happy to participate in GSoC again in 2021!\n\nFor any question, you can find the GSoC Org Admins,\nmentors and participants on the GSoC SIG Gitter chat.","title":"Google Summer of Code 2021 call for Project Ideas and Mentors","tags":["gsoc","gsoc2021","community","events","developer"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#082848","images":{"fallback":{"src":"/gatsby-jenkins-io/static/213476fc401270f56aae13bbdf67658a/0e311/marckk.jpg","srcSet":"/gatsby-jenkins-io/static/213476fc401270f56aae13bbdf67658a/6105b/marckk.jpg 32w,\n/gatsby-jenkins-io/static/213476fc401270f56aae13bbdf67658a/11755/marckk.jpg 64w,\n/gatsby-jenkins-io/static/213476fc401270f56aae13bbdf67658a/0e311/marckk.jpg 128w,\n/gatsby-jenkins-io/static/213476fc401270f56aae13bbdf67658a/b2ade/marckk.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/213476fc401270f56aae13bbdf67658a/a4758/marckk.webp 32w,\n/gatsby-jenkins-io/static/213476fc401270f56aae13bbdf67658a/47694/marckk.webp 64w,\n/gatsby-jenkins-io/static/213476fc401270f56aae13bbdf67658a/bf0f6/marckk.webp 128w,\n/gatsby-jenkins-io/static/213476fc401270f56aae13bbdf67658a/445f6/marckk.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":116.99999999999999}}},"blog":null,"github":"MarckK","html":"<div class=\"paragraph\">\n<p>Ecosystem Advocate at the Continuous Delivery Foundation (CDF).\nCo-chair of the Continuous Delivery Foundation‚Äôs Interoperability SIG and a mentor and org admin for Outreachy and Google Summer of Code.\nPassionate about making technology accessible and building welcoming tech communities.\nBoard director of codebar.io.</p>\n</div>","id":"marckk","irc":null,"linkedin":"karadelamarck","name":"Kara de la Marck","slug":"/blog/authors/marckk","twitter":"KaraMarck"}]}},{"node":{"date":"2020-11-10T00:00:00.000Z","id":"4a81cf3c-4ca0-511f-9197-d77a776ede34","slug":"/blog/2020/11/10/spring-xstream/","strippedHtml":"Cleaning up technical debt is a perennial topic among Jenkins core developers,\nand one of the most visible issues is the use of obsolete and/or forked third-party libraries.\nIn a world where Dependabot is offering updates to libraries released just hours before,\nit is unpleasant to be working with dependencies that are many years old.\nSince large organizations in particular are unhappy to install software using obsolete or nonstandard versions,\nmy employer (CloudBees) gave its blessing for me to spend some time cleaning up some of the worst offenders.\n\nThe toughest nut to crack was the Acegi Security library used for authentication,\nwhich has long since been replaced by Spring Security\n(and Jenkins was also bundling a long-outdated version of some Spring Framework dependencies).\njep:227[] tracks the complicated task of updating to Spring Security\nwithout breaking the numerous plugins that interact with authentication,\nespecially those offering a Security Realm.\n\nAnother longstanding problem was the XStream library which Jenkins uses to read and write XML configuration files.\nThis had been forked long ago by what was then the Hudson project and a few fixes applied.\nUnfortunately, some of those fixes were rejected upstream as invalid (representing unsupported usage patterns),\nand the fork fell behind the upstream version.\njep:228[] describes the impact of switching to the upstream library in a more standard usage mode,\nincluding fixes to a smaller number of plugins which would otherwise be incompatible.\n\nNow that the Jenkins 2.266 weekly release includes both updates,\nit is important for both Jenkins administrators and plugin maintainers to check for actual or potential incompatibilities.\nThere are two tables listing the impact of these changes on plugins:\n\nSpring Security compatibility\n\nXStream compatibility\n\nIf you use Jenkins then it is a good idea before upgrading to take a look at these tables\nto see if you are running any plugins considered incompatible.\nIf so, try not to rely on that plugin, or find out if there is an active maintainer who could help.\nFor entries marked unknown, it would be appreciated if you could do a sanity check after upgrading\nand offer a pull request to the table page (click Edit this file) with a more informative status.\n\nIf you find a regression in a plugin, please file a bug report in Jira and link to it from the table.\nAlso please add a JEP-227 or JEP-228 label as appropriate, for ease of tracking:\n\nOpen JEP-227 issues\n\nOpen JEP-228 issues\n\nIt is a good idea to update all your plugins before upgrading Jenkins core.\nIn the case of the Spring Security update, some security realm plugins including LDAP and Active Directory must be updated in advance.\n(You can safely run the new plugin versions on Jenkins releases prior to this change.)\nOtherwise, you risk being unable to log in to Jenkins‚Äîand thus unable to update those plugins from the GUI!\nThe LDAP plugin additionally has a new version available only after the core upgrade, but there is no rush in switching to that.\n\nIf you maintain a Jenkins plugin then please check whether it is marked anything less than compatible.\nIn some cases, there are already pull requests awaiting merge.\nIn other cases, some minor aspects of the source code have been identified that could be edited to improve compatibility.\n\nWe expect to see a bit of disruption from these changes\nbut hope that in the long run they will save time for core and plugin developers\nand lead to a more secure and stable tool.\nPlease reach out on the developers‚Äô list with any questions or suggestions.","title":"Spring and XStream updates (breaking changes!)","tags":["jenkins","core","developer"],"authors":[{"avatar":null,"blog":null,"github":"jglick","html":"<div class=\"paragraph\">\n<p>Jesse has been developing Jenkins core and plugins for years.\nHe is the coauthor with Kohsuke of the core infrastructure of the Pipeline system.</p>\n</div>","id":"jglick","irc":null,"linkedin":null,"name":"Jesse Glick","slug":"/blog/authors/jglick","twitter":"tyvole"}]}},{"node":{"date":"2020-08-31T00:00:00.000Z","id":"6bac69c5-68d0-5291-8064-51a2296a084b","slug":"/blog/2020/08/31/github-checks-api-plugin-coding-phase-3/","strippedHtml":"This blog post is about our phase 3 progress on GitHub Checks API Project, you can find our previous blog posts for phase 1 and phase 2.\n\nAt the end of this summer, the GSoC journey for GitHub Checks API Project comes to an end as well.\nIn this blog post, I‚Äôll show you our works during the last month:\n\nPipeline Support\n\nRerun Request Support\n\nGit SCM Support\n\nDocumentation\n\nAll the above features will be available in our planned 1.0.0 version of Checks API Plugin and GitHub Checks Plugin.\n\nCoding Phase 3 Demo\n\nPipeline Support\n\nThe pipeline support allows users to directly publish checks in their pipeline script without depending on any other consumers.\n\nThe check in the above screenshot is published by script:\n\npublishChecks name: 'pipeline check', title: 'pipeline ', summary: '# A pipeline check example',\n        text: \"## This check is published through the pipeline script\",\n        detailsURL: 'https://ci.jenkins.io'\n\nIf you want to publish checks to GitHub, please install the GitHub implementation and refer to the GitHub API documentation for the requirements for each field. A default value (build link) for detailsURL will be provided automatically.\n\nThis feature can be useful when many stages exist in your pipeline script and each takes a long time: you can publish a check for each stage to keep track of the build.\n\nRerun Request Support\n\nThe rerun request allows GitHub users to rerun the failed builds. When a build failed (which leads to a failed check), a Re-run button will be added automatically by GitHub.\n\nBy clicking the Re-run button, Jenkins will reschedule a build for the last commit of this branch.\n\nSince all checks of a commit are produced by a single build, you don‚Äôt have to rerun all failed checks, just rerun any one of the failed check will refresh all checks.\n\nGit SCM Support\n\nThanks to Ullrich 's great help, the GitHub Checks Plugin now supports Git SCM.\nThis means now you can publish checks for your freestyle project or any other projects that use Git SCM.\n\nDocument\n\nConsumers Guide and Implementation Guide are now available.\nAs a Jenkins developer, you can now start consuming our API or even providing an implementation for other SCM platforms beside GitHub.\n\nAcknowledgment\n\nThe whole GitHub Checks API project is started as a Google Summer of Code project. Much appreciate my mentors ( Tim and Ullrich) for their great help during the whole summer. Also huge thanks to the Jenkins GSoC SIG and the whole community for the technique support and resources.\n\nResources\n\nChecks API Plugin\n\nGitHub Checks Plugin\n\nProject Page\n\nGitter Channel","title":"GitHub Checks API Plugin Project - Coding Phase 3","tags":["github","api","plugins","developer","gsoc","gsoc2020"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/19e71/XiongKezhi.jpg","srcSet":"/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/77b35/XiongKezhi.jpg 32w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/d4a57/XiongKezhi.jpg 64w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/19e71/XiongKezhi.jpg 128w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/68974/XiongKezhi.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/ef6ff/XiongKezhi.webp 32w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/8257c/XiongKezhi.webp 64w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/6766a/XiongKezhi.webp 128w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/22bfc/XiongKezhi.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"XiongKezhi","html":"<div class=\"paragraph\">\n<p>Jenkins Google Summer of Code 2020 Student. Kezhi is an open source enthusiast who enjoys sharing ideas with other developers. He started contributing to Jenkins in March 2020. Currently, he is working on <a href=\"https://github.com/XiongKezhi/checks-api-plugin\">GitHub Checks API Plugin</a>.</p>\n</div>","id":"XiongKezhi","irc":null,"linkedin":"kezhi-xiong-44234a188","name":"Kezhi Xiong","slug":"/blog/authors/xiongkezhi","twitter":"AugustX_"}]}},{"node":{"date":"2020-08-29T00:00:00.000Z","id":"a6cfa2b5-a75a-5920-892a-2548994c1318","slug":"/blog/2020/08/29/git-performance-improvement-phase3/","strippedHtml":"Since the beginning of the project, the core value which drove its progress was \"To enhance the user experience for running Jenkins jobs by reducing the overall execution time\".\n\nTo achieve this goal, we laid out a path:\n\nCompare the two existing git implementations i.e CliGitAPIImpl and JGitAPIImpl using performance benchmarking\n\nUse the results to create a feature which would improve the overall performance of git plugin\n\nAlso, fix existing user reported performance issues\n\nLet‚Äôs take a journey to understand how we‚Äôve built the new features. If you‚Äôd like to skip the journey part, you can directly go to the [major performance improvements] section and the [minor performance section] to see what we‚Äôve done!\n\nJourney to release\n\nThe project started with deciding to choose a git operation and then trying to compare the performance of that operation by using command line git and then with JGit.\n\nStage 1: Benchmark results with git fetch\n\nThe performance of git fetch (average execution time/op) is strongly correlated to the size of a repository\n\nThere exists an inflection point on the scale of repository size after which the nature of JGit performance changes (it starts to degrade)\n\nAfter running multiple benchmarks, it is safe to say that for a large sized repository command line git would be a better choice of implementation.\n\nWe can use this insight to implement a feature which avoids JGit with large repositories.\n\nStage 2: Comparing platforms\n\nThe project was also concerned that there might be important differences between operating systems.\nFor example, what if command line Git for Windows performed very differently than command line Git on Linux or FreeBSD?\nBenchmarks were run to compare fetch performance on several platforms.\n\nRunning git fetch operation for a 400 MiB sized repository on:\n\nAMD64 Microsoft Winders\n\nAMD64 FreeBSD\n\nIBM PowerPC 64 LE Ubuntu 18\n\nIBM System 390 Ubuntu 18\n\nThe result of running this experiment is given below:\n\nThe difference in performance between git and JGit remains constant across all platforms.\n\nBenchmark results on one platform are applicable to all platforms.\n\nStage 3: Performance of git fetch and repository structure\n\nThe area of the circle enclosing each parameter signifies the strength of the positive correlation between the performance of a git fetch operation and that parameter. From the diagram:\n\nSize of the aggregated objects is the dominant player in determining the execution time for a git fetch\n\nNumber of branches and Number of tags play a similar role but are strongly overshadowed by size of repository\n\nNumber of commits has a negligible effect on the performance of running git fetch\n\nAfter running these experiments from Stage-1 to Stage-3, we developed a solution called the GitToolChooser which is explained in the next stage\n\nStage 4: Faster checkout with Git tool chooser\n\nThis feature takes the responsibility of choosing the optimal implementation from the user and hands it to the plugin. It takes the decision of recommending an implementation on the basis of the size of the repository. Here is how it works.\n\nThe image above depicts the performance enhancements we have performed over the course of the GSoC project. These improvements have enabled the checkout step to be finished within half of what it used to take earlier in some cases.\n\nLet‚Äôs talk about performance improvements in two parts.\n\nMajor performance improvements\n\nBuilding Tensorflow (~800 MiB) using a Jenkins pipeline, there is over 50% reduction in overall time spent in completing a job!\nThe result is consistent multiple platforms.\n\nThe reason for such a decrease is the fact that JGit degrades in performance when we are talking about large sized repositories. Since the GitToolChooser is aware of this fact, it chooses to recommend command line git instead which saves the user some time.\n\nMinor performance improvements\n\nNote: Enable JGit before using the new performance features to let GitToolChooser work with more options ‚Üí Here‚Äôs how\n\nBuilding the git plugin (~ 20 MiB) using a Jenkins pipeline, there is a drop of a second across all platforms when performance enhancement is enabled. Also, eliminating a redundant fetch reduces unnecessary load on git servers.\n\nThe reason for this change is the fact that JGit performs better than command line git for small sized repositories (<50MiB) as an already warmed up JVM favors the native Java implementation.\n\nReleases\n\nGit Plugin 4.4.0\n\nAdd GitToolChooser\n\nRemove redundant fetch\n\nGit Client Plugin 3.4.0\n\nAdd support to communicate compatibility of JGit with certain additional SCM behaviors\n\nThe road ahead\n\nSupport from other branch source plugins\n\nPlugins like the GitHub Branch Source Plugin or GitLab Branch Source Plugin need to extend an extension point provided by the git plugin to facilitate the exchange of information related to size of a remote repository hosted by the particular git provider\n\nJENKINS-63519 : GitToolChooser predicts the wrong implementation\n\nAddition of this feature to GitSCMSource\n\nDetection of lock related delays accessing the cache directories present on the controller\n\nThis issue was reported by the plugin maintainer Mark Waite, there is a need to reproduce the issue first and then find a possible solution.\n\nReaching out\n\nFeel free to reach out to us for any questions or feedback on the project‚Äôs\nGitter Channel or the\nJenkins Developer Mailing list.\nReport an issue at Jenkins Jira.\n\nUseful Links\n\nPhase 1 Blog: https://www.jenkins.io/blog/2020/07/09/git-performance-improvement-phase1/\n\nPhase 2 Blog: https://www.jenkins.io/blog/2020/07/29/git-performance-improvement-phase2/\n\nProject Page: https://www.jenkins.io/projects/gsoc/2020/projects/git-plugin-performance/\n\nDemonstration","title":"Git Plugin Performance Improvement: Final Phase and Release","tags":["plugins","git","platform-sig","developer","performance","gsoc","gsoc2020"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#685848","images":{"fallback":{"src":"/gatsby-jenkins-io/static/32fa8462b37abd3e057f4b70f0558972/19e71/rishabhbudhouliya.jpg","srcSet":"/gatsby-jenkins-io/static/32fa8462b37abd3e057f4b70f0558972/77b35/rishabhbudhouliya.jpg 32w,\n/gatsby-jenkins-io/static/32fa8462b37abd3e057f4b70f0558972/d4a57/rishabhbudhouliya.jpg 64w,\n/gatsby-jenkins-io/static/32fa8462b37abd3e057f4b70f0558972/19e71/rishabhbudhouliya.jpg 128w,\n/gatsby-jenkins-io/static/32fa8462b37abd3e057f4b70f0558972/68974/rishabhbudhouliya.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/32fa8462b37abd3e057f4b70f0558972/ef6ff/rishabhbudhouliya.webp 32w,\n/gatsby-jenkins-io/static/32fa8462b37abd3e057f4b70f0558972/8257c/rishabhbudhouliya.webp 64w,\n/gatsby-jenkins-io/static/32fa8462b37abd3e057f4b70f0558972/6766a/rishabhbudhouliya.webp 128w,\n/gatsby-jenkins-io/static/32fa8462b37abd3e057f4b70f0558972/22bfc/rishabhbudhouliya.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"rishabhBudhouliya","html":"<div class=\"paragraph\">\n<p>GSoC 2020 student under the Jenkins project (Git Plugin Performance Improvements).\nAspiring to be better at Software Development and participate more in the open source\ncommunity.</p>\n</div>","id":"rishabhbudhouliya","irc":null,"linkedin":null,"name":"Rishabh Budhouliya","slug":"/blog/authors/rishabhbudhouliya","twitter":null}]}},{"node":{"date":"2020-08-25T00:00:00.000Z","id":"7a744457-8457-529e-9c68-1e00d5e790df","slug":"/blog/2020/08/25/external-fingerprint-storage-phase-3/","strippedHtml":"The final phase for the External Fingerprint Storage\nProject has come to an end and to finish off, we release one more fingerprint storage plugin:\nthe PostgreSQL Fingerprint Storage Plugin!\n\nThis post highlights the progress made during phase-3.\nTo understand what the project is about and the past progress, please refer to the\nphase-1 post and the\nphase-2 post.\n\nIntroducing the PostgreSQL Fingerprint Storage Plugin\n\nWhy PostgreSQL?\n\nThere were several reasons why it made sense to build another reference implementation, especially backed by PostgreSQL.\n\nRedis is a key-value storage, and hence stores the fingerprints as blobs.\nThe PostgreSQL plugin defines a relational structure for fingerprints.\nThis offers a more powerful way to query the database for fingerprint information.\nFingerprint facets can store extra information inside the fingerprints, which cannot be queried in Redis directly.\nPostgreSQL plugin allows powerful (indexing) and efficient querying strategies which can even query the facet metadata.\n\nAnother reason for building this plugin was to provide a basis for other relational database plugins to be built.\nIt also validates the flexibility and design of our external fingerprint storage API.\n\nSince PostgreSQL is a traditional disk storage database, it is more suitable for systems storing a massive number of\nfingerprints.\n\nAmong relational databases, PostgreSQL is quite popular, has extensive support, and is open-source.\nWe expect the new implementation to drive more adoption, and prove to be beneficial to the community.\n\nInstallation:\n\nThe plugin can be installed using the\nexperimental update center.\nFollow along the following steps after running Jenkins to download and install the plugin:\n\nSelect Manage Jenkins\n\nSelect Manage Plugins\n\nGo to Advanced tab\n\nConfigure the Update Site URL as: https://updates.jenkins.io/experimental/update-center.json\n\nClick on Submit, and then press the Check Now button.\n\nGo to Available tab.\n\nSearch for PostgreSQL Fingerprint Storage Plugin and check the box along it.\n\nClick on Install without restart\n\nThe plugin should now be installed on the system.\n\nUsage\n\nOnce the plugin has been installed, you can configure the PostgreSQL server details by following the steps below:\n\nSelect Manage Jenkins\n\nSelect Configure System\n\nScroll to the section Fingerprints and choose PostgreSQL Fingerprint Storage in the dropdown for\nFingerprint Storage Engine.\n\nConfigure the following parameters to connect to your PostgreSQL instance:\n\nHost - Enter hostname where PostgreSQL is running\n\nPort - Specify the port on which PostgreSQL is running\n\nSSL - Click if SSL is enabled\n\nDatabase Name - Specify the database name inside the PostgreSQL instance to be used. Please note that the database\nwill not be created by the plugin, the user has to create the database.\n\nConnection Timeout - Set the connection timeout duration in seconds.\n\nSocket Timeout - Set the socket timeout duration in seconds.\n\nCredentials - Configure authentication using username and password to the PostgreSQL instance.\n\nUse the Test PostgreSQL Connection button to verify that the details are correct and Jenkins is able to connect to\nthe PostgreSQL instance.\n\n[IMPORTANT] When configuring the plugin for the first time, it is highly important to press the Perform PostgreSQL\nSchema Initialization button. It will automatically perform schema initialization and create the necessary indexes.\nThe button can also be used in the case the database is wiped out and schema needs to be recreated.\n\nPress the Save button.\n\nNow, all the fingerprints produced by this Jenkins instance should be saved in the configured PostgreSQL instance!\n\nQuerying the Fingerprint Database\n\nDue to the relational structure defined by PostgreSQL, it allows users/developers to query the fingerprint data which\nwas not possible using the Redis fingerprint storage plugin.\n\nThe fingerprint storage can act as a consolidated storage for multiple Jenkins instances.\nFor example, to search for a fingerprint id across Jenkins instances using the file name, the following query could be\nused:\n\nSELECT fingerprint_id FROM fingerprint.fingerprint\nWHERE filename = 'random_file';\n\nA sample query is provided which can be tweaked depending on the parameters to be searched:\n\nSELECT * FROM fingerprint.fingerprint\nWHERE fingerprint_id = 'random_id'\n        AND instance_id = 'random_jenkins_instance_id'\n        AND filename = 'random_file'\n        AND original_job_name = 'random_job'\n        AND original_job_build_number = 'random_build_number'\n        AND timestamp BETWEEN '2019-12-01 23:59:59'::timestamp AND now()::timestamp\n\nThe facets are stored in the database as jsonb.\nPostgreSQL offers support to query jsonb.\nThis is especially useful for querying the information stored inside fingerprint facets.\nAs an example, the Docker Traceability Plugin stores information like the name of Docker images inside these\nfacets.\nThese can be queried across Jenkins instances like so:\n\n>'imageName' = 'random_container';\n\nAt the moment these queries require working knowledge of the database.\nIn future, these queries can be abstracted away by plugins and the features made available to users directly inside\nJenkins.\n\nDemo\n\nExternal Fingerprint Storage Demo\n\nSlide deck\n\nReleases üöÄ\n\nWe released the 0.1-alpha-1 version for the\nPostgreSQL Fingerprint Storage Plugin.\nPlease refer to the\n\nchangelog for more information.\n\nRedis Fingerprint Storage Plugin 1.0-rc-3 was also\nreleased.\nThe\n\nchangelog provides more details.\n\nA few API changes made in the Jenkins core were released in Jenkins-2.253.\nIt mainly includes exposing fingerprint range set serialization methods for plugins.\n\nFuture Directions\n\nThe relational structure of the plugin allows some performance improvements that can be made when implementing\ncleanup, as well as improving the performance of Fingerprint#add(String job, int buildNumber).\nThese designs were discussed and are a scope of future improvement.\n\nThe current external fingerprint storage API supports configuring multiple Jenkins instances to a single storage.\nThis opens up the possibility of developing traceability plugins which can track fingerprints across Jenkins instances.\n\nPlease consider reaching out to us if you feel any of the use cases would benefit you, or if you would like to share\nsome new use cases.\n\nAcknowledgements\n\nThe PostgreSQL Fingerprint Storage Plugin and the Redis Fingerprint Storage plugin are maintained by the\nGoogle Summer of Code (GSoC) Team for External\nFingerprint Storage for Jenkins.\nSpecial thanks to Oleg Nenashev,\nAndrey Falko, Mike Cirioli,\nTim Jacomb, and the entire Jenkins community for all the contribution to this project.\n\nAs we wrap up, we would like to point out that there are plenty of future directions and use cases for the externalized\nfingerprint storage, as mentioned in the previous section, and we welcome everybody to contribute.\n\nReaching Out\n\nFeel free to reach out to us for any questions, feedback, etc. on the project‚Äôs\nGitter Channel or the\nJenkins Developer Mailing list.\nWe use Jenkins Jira to track issues.\nFeel free to file issues under either the postgresql-fingerprint-storage-plugin or the\nredis-fingerprint-storage-plugin component depending on the plugin.\n\nOther Links\n\nPhase 1 Post\n\nPhase 2 Post\n\nPostgreSQL Fingerprint Storage Plugin\n\nRedis Fingerprint Storage Plugin\n\njep:226[]\n\nGitter Channel\n\nProject Page","title":"External Fingerprint Storage Phase-3 Update: Introducing the PostgreSQL Fingerprint Storage Plugin","tags":["plugins","fingerprint","cloud-native","external-storage","developer","PostgreSQL","gsoc","gsoc2020"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#281818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/57deb704d1eb39e35b9de4a8c22ea56e/19e71/stellargo.jpg","srcSet":"/gatsby-jenkins-io/static/57deb704d1eb39e35b9de4a8c22ea56e/77b35/stellargo.jpg 32w,\n/gatsby-jenkins-io/static/57deb704d1eb39e35b9de4a8c22ea56e/d4a57/stellargo.jpg 64w,\n/gatsby-jenkins-io/static/57deb704d1eb39e35b9de4a8c22ea56e/19e71/stellargo.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/57deb704d1eb39e35b9de4a8c22ea56e/ef6ff/stellargo.webp 32w,\n/gatsby-jenkins-io/static/57deb704d1eb39e35b9de4a8c22ea56e/8257c/stellargo.webp 64w,\n/gatsby-jenkins-io/static/57deb704d1eb39e35b9de4a8c22ea56e/6766a/stellargo.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://medium.com/@sumitsarinofficial","github":"stellargo","html":"<div class=\"paragraph\">\n<p>Jenkins Google Summer of Code 2020 student. Sumit is an engineering student (senior) at Netaji Subhas Institute of Technology, University of Delhi. He started his journey of contributing to Jenkins in December 2019. His tiny contribution revolved around the Jenkins Fingerprint engine. He is currently working on building <a href=\"https://www.jenkins.io/projects/gsoc/2020/projects/external-fingerprint-storage\">External Fingerprint Storage for Jenkins</a>.</p>\n</div>","id":"stellargo","irc":null,"linkedin":"sumit-sarin","name":"Sumit Sarin","slug":"/blog/authors/stellargo","twitter":null}]}}]}},"pageContext":{"tag":"developer","limit":8,"skip":0,"numPages":5,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}