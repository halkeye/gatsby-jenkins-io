{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/azure/page/2",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2016-05-12T00:00:00.000Z","id":"16aeac16-1357-5d74-85da-84ef71ddbaa2","slug":"/blog/2016/05/12/sf-jam-jenkins-and-azure/","strippedHtml":"A few weeks ago, my colleague Brian Dawson\nand I were invited to present on\nScaling Jenkins for\nContinuous Delivery with Microsoft Azure in Microsoft’s\nReactor space. Azure is Microsoft’s\npublic cloud offering and one of the many tools available to Jenkins users for\nadding elastic compute capacity, among other things, to their build/test/deploy\ninfrastructure. While our presentations are applicable to practically\nany cloud-based Jenkins environment, Thiago Almeida and Oguz Pastirmaci from\nMicrosoft were also on-hand and presented some interesting Azure-specific\nofferings like\nAzure\nContainer Service with Jenkins.\n\nWhile we do not have video from the meetup, Brian and I did record\na\nsession with Thiago and Oguz for Channel9\nwhich covers much of the same content:\n\nTo kick-off the meetup we asked attendees a few polling questions and\nreceived very telling responses:\n\nHow big is your Development/IT organization?\n\nWhat is your role?\n\nBy show of hands do you practice CI/CD/DevOps/etc?\n\nAt what scale (tooling and practice)?\n\nThe responses indicated that the majority of attendees were from small to medium\norganizations where they practiced Continuous Delivery across multiple teams. A\nnotable 25% or greater attendees considered themselves \"fullstack\" or\nparticipating in all of the roles of Developer, QA, and Operations. Interesting\nwhen paired with the high number (~80%) of those who practice CD.  This is\nlikely because modern teams, with mature CD practices, tend to blur the\ntraditional lines of Developer, QA and Operations. However, In my experience,\nwhile this is often the case for small to medium companies in large\norganizations team members tend to fall into the traditional roles, with CD\nproviding the practice and platform to unify teams across roles.\n\n— Brian Dawson\n\nAfter gauging the audience, Thiago and Brian reviewed Continuous Delivery (CD)\nand implementing it at scale. They highlighted the fact that CD is being rapidly\nadopted across teams and organizations, providing the ability: to deliver a demonstrably\nhigher quality product, shipping more rapidly than before, and to keep team members happier.\n\nHowever, when organizations fail to properly support CD as they scale, they run\ninto issues such as: developers acting as administrators at the cost of\nproductivity, potential lack of security and/or exposure of IP and difficulty in\nsharing best practices across teams.\n\nThiago then highlighted that properly scaling CD practices in the organization\nalong with the infrastructure itself can alleviate these issues, and discussed\nthe benefits of scaling CD to on cloud platforms to provide \"CD-as-a-Service.\"\n\nOverall I found the \"theory\" discussion to be on point, continuous delivery is\nnot just a technology nor a people problem. Successful organizations scale their\nprocesses and tooling together.\n\nThe slides from our respective presentations are linked below:\n\n(Brian) Scaling Jenkins for Continuous Delivery (.pdf)\n\n(Tyler) Scaling Jenkins with Azure (.pdf)\n\nI hope you join us at future\nSan Francisco\nJAM s!","title":"SF JAM Report: Scaling Jenkins for Continuous Delivery with Azure","tags":["jam","azure","meetup"],"authors":[]}}]}},"pageContext":{"tag":"azure","limit":8,"skip":8,"numPages":2,"currentPage":2}},
    "staticQueryHashes": ["3649515864"]}