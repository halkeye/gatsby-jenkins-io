{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/github-branch-source",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2020-04-16T00:00:00.000Z","id":"c9bdc8f4-e8bc-5080-883f-d67fbd7f7847","slug":"/blog/2020/04/16/github-app-authentication/","strippedHtml":"This blogpost was updated to reflect the general availability of the feature after the release of GitHub Branch Source 2.7.1 on April 26th, 2020.\n\nI’m excited to announce support for authenticating as a GitHub app in Jenkins.\nThis has been a long awaited feature by many users.\nIt has been released in GitHub Branch Source 2.7.1 which is now available in the Jenkins update centers.\n\nAuthenticating as a GitHub app brings many benefits:\n\nLarger rate limits - The rate limit for a GitHub app scales with your organization size,\nwhereas a user based token has a limit of 5000 regardless of how many repositories you have.\n\nUser-independent authentication - Each GitHub app has its own user-independent authentication. No more need for 'bot' users or figuring out who should be the owner of 2FA or OAuth tokens.\n\nImproved security and tighter permissions - GitHub Apps offer much finer-grained permissions compared to a service user and its personal access tokens. This lets the Jenkins GitHub app require a much smaller set of privileges to run properly.\n\nAccess to GitHub Checks API - GitHub Apps can access the the GitHub Checks API to create check runs and check suites from Jenkins jobs and provide detailed feedback on commits as well as code annotation\n\nGetting started\n\nInstall the GitHub Branch Source plugin,\nmake sure the version is 2.7.1 or above.\n\nConfiguring the GitHub Organization Folder\n\nFollow the GitHub App Authentication setup guide.  These instructions are also linked from the plugin’s README on GitHub.\n\nOnce you’ve finished setting it up, Jenkins will validate your credential and you should see your new rate limit.\nHere’s an example on a large org:\n\nHow do I get an API token in my pipeline?\n\nIn addition to usage of GitHub App authentication for Multi-Branch Pipeline, you can also use app authentication directly in your Pipelines.\nYou can access the Bearer token for the GitHub API by just loading a 'Username/Password' credential as usual,\nthe plugin will handle authenticating with GitHub in the background.\n\nThis could be used to call additional GitHub API endpoints from your pipeline, possibly the\ndeployments api or you may wish to implement your own\nchecks api integration until Jenkins supports this out of the box.\n\nNote: the API token you get will only be valid for one hour, don’t get it at the start of the pipeline and assume it will be valid all the way through\n\nExample: Let’s submit a check run to Jenkins from our Pipeline:\n\npipeline {\n  agent any\n\n  stages{\n    stage('Check run') {\n      steps {\n        withCredentials([usernamePassword(credentialsId: 'githubapp-jenkins',\n                                          usernameVariable: 'GITHUB_APP',\n                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {\n            sh '''\n            curl -H \"Content-Type: application/json\" \\\n                 -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n                 -H \"authorization: Bearer ${GITHUB_ACCESS_TOKEN}\" \\\n                 -d '{ \"name\": \"check_run\", \\\n                       \"head_sha\": \"'${GIT_COMMIT}'\", \\\n                       \"status\": \"in_progress\", \\\n                       \"external_id\": \"42\", \\\n                       \"started_at\": \"2020-03-05T11:14:52Z\", \\\n                       \"output\": { \"title\": \"Check run from Jenkins!\", \\\n                                   \"summary\": \"This is a check run which has been generated from Jenkins as GitHub App\", \\\n                                   \"text\": \"...and that is awesome\"}}' https://api.github.com/repos/ / /check-runs\n            '''\n        }\n      }\n    }\n  }\n}\n\nWhat’s next\n\nGitHub Apps authentication in Jenkins is a huge improvement.  Many teams have already started using it and have helped improve it by giving pre-release feedback. There are more improvements on the way.\n\nThere’s a proposed Google Summer of Code project: GitHub Checks API for Jenkins Plugins.\nIt will look at integrating with the Checks API,\nwith a focus on reporting issues found using the warnings-ng plugin\ndirectly onto the GitHub pull requests, along with test results summary on GitHub.\nHopefully it will make the Pipeline example below much simpler for Jenkins users :)\nIf you want to get involved with this, join the GSoC Gitter channel\nand ask how you can help.","title":"GitHub App authentication support released","tags":["github","github-branch-source","pipeline","announcement"],"authors":[{"avatar":null,"blog":null,"github":"timja","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer, along with slack, azure-keyvault and configuration-as-code plugins.\nTim started using Jenkins in 2013 and became an active contributor in 2018.\nTim enjoys working on open source software in his “free” time.</p>\n</div>","id":"timja","irc":null,"linkedin":"tim-jacomb-98043174","name":"Tim Jacomb","slug":"/blog/author/timja","twitter":"Tjaynz"}]}}]}},"pageContext":{"tag":"github-branch-source","limit":8,"skip":0,"numPages":1,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}