{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/event/page/6",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2016-09-29T00:00:00.000Z","id":"e21157bd-374b-5814-a345-a0163473ab62","slug":"/blog/2016/09/29/jenkins-world-2016-wrap-up-experts-demos/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nAs I mentioned in my\nprevious post,\nJenkins World brought together\nJenkins users from organizations of all sizes.  It also brought together Jenkins\nusers of all skill levels; from beginners to experts (including to JAM\norganizers, board members, and long time contributors).  A number\nof those experts also volunteered to staff the Open Source Hub’s\n\"Ask the Experts\" desk throughout the conference to answer Jenkins questions.\nThis included, but was not limited to:\nPaul Allen,\nR Tyler Croy,\nJames Dumay,\nJesse Glick,\nEddú Meléndez Gonzales,\nJon Hermansen,\nOwen Mehegan,\nOleg Nenashev,\nLiam Newman,\nChristopher Orr,\nCasey Vega,\nMark Waite,\nDean Yu,\nand\nKeith Zantow.\n\nI actually chose to spend the majority of my time at the booth. It was\nfantastic to hear all the different ways people are using\nJenkins and wanting use Jenkins to do even more. I answered dozens of questions\non both days of the conference, often learning new things in the process of answering them.\nAnd for questions that were beyond any one person’s knowledge, there was such a\nbreadth of expertise, very few questions were beyond our combined abilities.\n\nWhile \"Ask the Experts\" saw a lot traffic, the Open Source Hub’s lunch-time demos drew\nreally big crowds. They covered wide range of subjects in a quick succession and offered people\na chance to be introduced to new areas of in Jenkins without spending a whole session on them.\nSome demos were only presented at lunch while others were abbreviated versions of\nlonger talks presented at other times during the conference.  Here’s the full list with related links:\n\nKeith Zantow gave a live demo of\nBlue Ocean in Action on their\nlive Jenkins instance.\n\nChristopher Orr presented a lightning version of his talk\nPipelines for building and deploying Android apps\n( Slides)\n( video).\n\nOleg Nenashev showed a different way to\nmanage security with the\nOwnership plugin for Jenkins\n( Slides).\n\nAlex Somai presented his\nGoogle Summer of Code (GSoC) 2016 project, the\nExternal Workspace Manager plugin for Jenkins Pipeline ( GSOC Video).\n\nMark Waite discussed\nGit plugin - large repos, submodule authentication and more\n( Slides).\n\nLiam Newman gave a live demo of\nNotifications with Jenkins Pipeline\n(based on this blog post).\n\nJesse Glick talked about\nExtending Pipeline with Libraries using the\nPipeline Shared Groovy Libraries Plugin\n\nJon Hermansen demonstrated some cool ways to use\nMultibranch Pipelines + Git symbolic-ref to optimize build times.\n\nR Tyler Croy showed the power of\nDocker and Pipeline\n( Slides)\n\nR Tyler Croy also showed how easy it can be to migrate from\nFreestyle to Pipeline\n( Slides)\n\nCasey Vega gave a live demo,\npackage.json and Jenkins, on using package.json to control all aspects of Jenkins builds.\n\nAndrew Bayer presented at lightning version of his talk,\nA simpler way to define Jenkins Pipelines\n( Slides)\n( Video).\n\nThank you to everyone who staffed the booth and gave demos.\n\nAlso, thanks to everyone who attended the demos and came by to ask questions.\nIf you have more questions, you don’t have to wait until next year’s Jenkins World.\nJoin the\njenkinsci-users mailing list or the\n#jenkins IRC channel to\nget help from experts around the world.\n\nAnd finally, a special thanks to the Jenkins Events officer, Alyssa Tong,\nfor getting the entire booth designed, prepared, and keeping everything\non track before, during, and after the conference.","title":"Jenkins World 2016 Wrap-up - Ask the Experts & Demos","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-27T00:00:00.000Z","id":"e7da6d48-fbaf-5549-9581-1b1cb3ddf4f6","slug":"/blog/2016/09/27/jenkins-world-2016-wrap-up-scaling/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nOne of the great features of Jenkins is how far it\ncan scale, not only from a software perspective, but also from an\norganizational one.  From a single Jenkins controller with one or two agents to a\nmultiple controller with thousands of agents, from a team of only a few people\nto a whole company with multiple disparate departments and organizations,\nyou’ll find space where Jenkins is used.\n\nLike any software or organization,\nthere are common challenges for increasing scale with Jenkins and some common best practices, but\nthere are also some unique solutions.  A big conference like\nJenkins World brings users\nfrom all scales together to see how people in other organizations at similar or\ngreater scale are solving similar problems.\n\nHere’s a recap of the some of the sessions on scaling Jenkins,\nwith links to slides and videos shared by CloudBees :\n\nPaul Miles and\nGrant Dickie of\nNPR talked about\nJenkinsOps: An Initiative to Streamline and Automate Jenkins .\nThey shared ways their team has used Jenkins to automate many of the\nadministrative tasks related to managing feature code branches,\nhandling deployments, running tests, and properly configuring their environments.\nThey also showed code samples and talked about future challenges in their quest\nto achieve\ncontinuous deployment.\n\nDownload Presentation\n\nStream Presentation\n\nMaxfield F Stewart of\nRiot Games showed how they built an\nintegrated Docker solution using Jenkins in\nThinking Inside the Container: A Continuous Delivery Story\nHe showed how their system allows engineers around the company to\nsubmit Docker images as build environments.\nThis has let their containerized farm now create over 10,000 containers per week\nand handles nearly 1,000 jobs at a rate of about 100 jobs per hour.\nAnd they have done this using readily available, open\nsource Jenkins plugins. He also talked about how they settled on this design,\nlessons learned, best practices, and how to build and scale other similar system.\n\nDownload Presentation\n\nStream Presentation\n\nHow to Do Continuous Delivery with Jenkins Pipeline, Docker and Kubernetes ,\npresented by\nJames Strachan of\nRed Hat, showed how to use Jenkins Pipeline with\nDocker and Kubernetes to implement a complete end-to-end continuous delivery and\ncontinuous improvement system using open source software for both microservices\nand monolithic applications. He demonstrated how to\ncreate or import projects, and have them automatically build, run\nsystem and integration tests, stage, and finally deploy. He also showed to\nmanage and update those deployed applications using continuous\ndelivery practices.\n\nDownload Presentation\n\nWatch the Video Demo from the Presentation\n\nCarlos Sanchez of\nCloudBees discussed\nScaling Jenkins with Docker: Swarm, Kubernetes or Mesos?\nHe compared various Docker Swarm, Apache Mesos, and Kubernetes in terms of their\nability to dynamically scale in Jenkins by running jobs inside containers.\nHe also discussed the pros and cons, best practices, level of Jenkins support for each\nof these technologies.\n\nDownload Presentation\n\nStream Presentation\n\nStephen Connolly of\nCloudBees asked\n\" So, You Want to Build the World’s Biggest Jenkins Cluster? \"\nand explained how to do so.  He started with\nreal world results realized by Jenkins users who have built large clusters.\nNext, he showed experiments around scaling some individual sub-components of Jenkins in\nisolation to see what challenges have been faced when integrated. Finally,\nhe arrived at recipes for building Jenkins clusters with different scaling capabilities and\nmaking existing Jenkins clusters more efficient.\n\nDownload Presentation\n\nStream Presentation\n\nBill Houston and\nAli Raza of\nSplunk\ngave a talk in two parts,\nJenkins at Splunk and Splunking Jenkins\nIn the first part, Bill showed how Splunk uses Jenkins to implement their end-to-end CI system.\nThey discussed features and design goals, challenges they encountered, and how they addressed\nthese challenges.\nIn the second part, Ali showed how to use the Jenkins Splunk plugin.  Using plugin, he gathered\ntest results and Jenkins environment data, and delivered it to a Splunk indexer for analysis and presentation.\n\nDownload Presentation\n\nStream Presentation\n\nDavid Hoover of\nGoogle talked about\nJenkins inside Google .\nLast year, they\npresented\ntheir initial investigations and stress testing as they\nprepared to deploy a large-scale Jenkins installation at Google. Now, with a\nyear of real-world use under their belts, they returned to present on how their\nexpectations held up, what new issues they encountered, how they have addressed those issues, and\nthe challenges and opportunities they see ahead.\n\nDownload Presentation\n\nStream Presentation","title":"Jenkins World 2016 Wrap-up - Scaling","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-24T00:00:00.000Z","id":"1f3da69f-0fed-5d62-bb32-d769047f8abb","slug":"/blog/2016/09/24/jenkins-world-2016-wrap-up-pipeline/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nAs someone who has managed Jenkins for years and manually managed jobs, I think\npipeline is fantastic. I spent much of the conference manning the\nAsk the Experts desk of the\n\"Open Source Hub\" and was glad to find I was not alone in that sentiment.\nThe questions were not \"Why should I use Pipeline?\", but \"How do I do this in Pipeline?\"\n\nEveryone was interested in showing what they have been able to accomplish,\nlearning about best practices, and seeing what new features were on the horizon.\nThe sessions and demos on Pipeline that\nI saw were all well attended, but no one could have seen all of them.\n\nHere’s a recap of the some of the sessions on Jenkins Pipeline,\nwith links to slides and videos shared by CloudBees :\n\nJesse Glick discussed the past, present, and future of Jenkins Pipeline in\nDirections for Pipeline .\nHe reviewed a broad range of improvements made to Pipeline over the last year, including\nsyntax, documentation, plugin support, and stability.  He reviewed the changes\ncurrently underway.  He also pointed out that many of the improvements have been\ndriven by user feedback and invited everyone to continue to participate in making\npipeline even better.\n\nDownload Presentation\n\nStream Presentation\n\nIn\nPipelining DevOps with Jenkins and AWS ,\nJimmy Ray\nof\nnextSource showed how Pipeline can be used to automate CI/CD build processes,\nand how to integrate Jenkins and Pipeline with AWS.\nHe also discussed some admin-level considerations,\nsuch as how to install Jenkins on EC2\nand the merits of \"LTS\" and \"latest build\".\n\nDownload Presentation\n\nStream Presentation\n\nChristopher Orr examined how to create\n\" Continuous Build and Delivery Pipelines for Android \"\napplications.\nHe showed how to set up Android-capable build agents, ensure traceable application releases,\nreporting warnings, run various types of tests, and deploy and app to Google Play.\nThis included live demonstrations and discussion of best practices.\n\nDownload Presentation\n\nStream Presentation\n\nAndrew Bayer presented\nA New Way to Define Jenkins Pipelines .\nHe showed the next evolution for Pipeline, based on a simpler declarative model.\nThis declarative syntax for Pipeline still supports the creation of complex pipelines,\nincluding complete build environments, post-build actions, and notifications, while\nalso being easier to understand. This declarative syntax also makes in it easier to\nimplement other interesting scenarios such as early validation of pipelines and\na visual pipeline editor.\n\nDownload Presentation\n\nStream Presentation\n\nIn\nPerfecting Your Development Tools: Updates to the Helix Plugin for Jenkins ,\nPaul Allen of\nPerforce walked through using Perforce’s \"Monorepo\" model with Jenkins Pipeline.\nHe explained in detail how to work with the Perforce\"P4\" plugin in Jenkins,\nincluding credential passing and workspace management.\nOf particular interest was his side-by-side comparison the various actions done with the Jenkins UI vs Pipeline.\n\nDownload Presentation\n\nSam Van Oort\ndemonstrated strategies for faster pipelines in\nThe Need For Speed: Building Pipelines To Be Faster .\nHe discussed various elements that contribute to making pipelines faster or slower,\nsuch a number of resources and latency.  He then showed several best practices\nfor constructing pipelines that have lower turnaround times and reduced resource use.\nHe also reviewed plugins and tools that can help analyze and visualize pipeline\nperformance, including the Pipeline Stage View plugin and Blue Ocean.\n\nDownload Presentation\n\nStream Presentation\n\nBobby Sandell and\nJames T. Nord talked about what not to do with Pipeline in\nNo, You Shouldn’t Do That! Lessons from Using Pipeline .\nThey told the story of their own experiences as early adopters of\nJenkins Pipeline at CloudBees. They described a number of key scenarios they attempted\nto address, detailed various mistakes and false starts, and finally share what\nthey learned in each case.\n\nDownload Presentation\n\nStream Presentation\n\nAlexandru Somai gave a\nlightning talk on his\nGoogle Summer of Code (GSoC) 2016 project,\n\" External Workspace Manager Plugin for Jenkins Pipeline\".\nThe build workspace for Jenkins projects may become very large.\nAlex showed how the External Workspace Manager plugin addresses this issue,\nadding support for managing and reusing the same workspace between multiple pipeline builds.\n\nA recording of his presentation for GSOC is available\nhere.\n\nHow to Do Continuous Delivery with Jenkins Pipeline, Docker and Kubernetes ,\npresented by\nJames Strachan of\nRed Hat, showed how to use Jenkins Pipeline with\nDocker and Kubernetes to implement a complete end-to-end continuous delivery and\ncontinuous improvement system using open source software for both microservices\nand monolithic applications. He demonstrated how to\ncreate or import projects, and have them automatically build, run\nsystem and integration tests, stage, and finally deploy. He also showed to\nmanage and update those deployed applications using continuous\ndelivery practices.\n\nDownload Presentation\n\nStream Demo Video","title":"Jenkins World 2016 Wrap-up - Pipeline","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-21T00:00:00.000Z","id":"00f2fadc-e637-58e5-9db3-eb9874add2cf","slug":"/blog/2016/09/21/jenkins-world-2016-wrap-up/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nThat’s a Wrap!\n\nAny way you look at it, last week’s Jenkins World Conference 2016 was a huge success.\n\nIn 2011, a few hundred users gathered in San Francisco for the first \"Jenkins User Conference\".\nOver successive years, this grew into several yearly regional Jenkins user conferences.\nThis year, over 1,300 people came from around the world to \"Jenkins World 2016\",\nthe first global event for the Jenkins community.\n\nThis year’s Jenkins World conference included:\n\nKeynote presentation by Jenkins creator, Kohsuke Kawaguchi, announcing a number of great new Jenkins project features, such as \"Blue Ocean\".\n\nMore than 50 sessions on everything from the new \"Blue Ocean\" UI, to \"Continuous Security\" to \"Dockerizing Jenkins\".\n\nJenkins Open-source Hub, with \"Ask the Experts\" and demos by 20+ Jenkins contributors.\n\nBooths from 30+ sponsors.\n\nStickers!\n\nOver the next week, I’ll be posting highlights from the event,\nincluding slides, videos, and links to other useful resources.  Stay tuned!","title":"Jenkins World 2016 Wrap-up - Introduction","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-20T00:00:00.000Z","id":"2af55d7f-59c7-5a3f-b9bb-07c4e85c5df6","slug":"/blog/2016/09/20/jom-plugin-development/","strippedHtml":"On September 6th we had a Jenkins Online Meetup.\nThis meetup was the second event in the series of Plugin Development meet ups.\nAt this meetup we were talking about Jenkins Web UI development.\n\nTalks\n\n1) Classic Jenkins UI framework -\nDaniel Beck\n\nIn the first part of his talk, Daniel presented how Stapler, the web framework used in Jenkins, works, and how you can add to the set of URLs handled by Jenkins.\nIn the second part he was talking about creating new views using Jelly and Groovy, and how to add new content to existing views.\n\nKeywords:\nStapler,\nJelly,\nGroovy-defined UIs\n\n2) Developing modern Jenkins UIs with Javascript -\nTom Fennelly\n\nFeel that Jenkins UI is a bit old? You are not alone.\nIn addition to the old stack Jenkins offers a framework for writing UI components in Javascript with help of Node.js.\nTom presented this new engine, which is being used in new Jenkins Web UI components like Jenkins installation wizard.\nHe also provided several examples from the BlueOcean project he is working on.\n\nKeywords:\nNode.js,\nReactJS,\nJenkins JS Builder,\nJenkins Design Language,\nBlue Ocean\n\nLinks\n\nMeetup page\n\nEvent page: Plugin Development. Web UI\n\nWebinar recording\n\nWant to conduct a meetup?\n\nWe are looking for speakers, who would be interested to share their experience about Jenkins best-practices, war stories and plugin development.\n\nIf you are interested to conduct a presentation,\nplease contact meetup organizers using meetup.com “contact organizers” feature\nor via the events@lists.jenkins-ci.org mailing list.","title":"Jenkins Online Meetup report. Plugin Development - WebUI","tags":["meetup","event"],"authors":[{"avatar":{"childImageSharp":null},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/author/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2016-09-08T00:00:00.000Z","id":"51fd82b2-e6d8-562f-a3a7-329013385e5a","slug":"/blog/2016/09/08/continuous-delivery-of-infra/","strippedHtml":"This is a guest post by Jenkins World speaker\nR Tyler Croy, infrastructure maintainer for the\nJenkins project.\n\nI don’t think I have ever met a tools, infrastructure, or operations team that\ndid not have a ton of work to do. The Jenkins project’s\ninfrastructure\"team\" is no different; too much work, not enough time. In lieu of hiring more\npeople, which isn’t always an option, I have found heavy automation and\ncontinuous delivery pipelines to be two solutions within reach of the\nover-worked infrastructure team.\n\nAs a big believer in the concept of \"Infrastructure as Code\", I have been,\nslowly but surely, moving the project’s infrastructure from manual tasks to\ncode, whether implemented in our\nPuppet code-base,\nDocker containers,\nor even as\nmachine specifications\nwith\nPacker.\nThe more of our infrastructure that is code, the more we can apply continuous\ndelivery practices to consistently and reliably build, test and deliver our\ninfrastructure.\n\nThis approach integrates nicely with\nJenkins Pipeline,\nallowing us to also define our continuous delivery pipelines themselves as\ncode. For example, by sanity-checking our BIND zone files:\n\nJenkinsfile\n\nnode('docker') {\n    def dockerImage = 'rtyler/jenkins-infra-builder'\n\n    checkout scm\n    docker.image(dockerImage).inside {\n        sh \"/usr/sbin/named-checkzone jenkins-ci.org dist/profile/files/bind/jenkins-ci.org.zone\"\n        sh \"/usr/sbin/named-checkzone jenkins.io dist/profile/files/bind/jenkins.io.zone\"\n    }\n}\n\nOr delivering our Docker containers automatically to\nDocker Hub, with a Jenkinsfile such as:\n\nJenkinsfile\n\nnode('docker') {\n    checkout scm\n\n    /* Get our abbreviated SHA-1 to uniquely identify this build */\n    def shortCommit = sh(script: 'git rev-parse HEAD', returnStdout: true).take(6)\n\n    stage 'Build ircbot' {\n        withEnv([\"JAVA_HOME=${tool 'jdk8'}\", \"PATH+MVN=${tool 'mvn'}/bin\"]) }\n            sh 'make bot'\n        }\n    }\n\n    def whale\n    stage 'Build container' {\n        whale = docker.build(\"jenkinsciinfra/ircbot:build${shortCommit}\")\n    }\n\n    stage 'Deploy container' {\n        /* Push to Docker Hub */\n        whale.push()\n    }\n}\n\nIn\nmy talk at Jenkins World\n(September 14th, 3:00 - 3:45pm in Exhibit Hall A-1) I will discuss these\nJenkinsfiles along with some of the strategies, patterns and code used with the\nJenkins project’s\nopen source\ninfrastructure to get the most out of the team’s limited time.\n\nR Tyler will be\npresenting\nmore about continous delivery of infrastructure at\nJenkins World\nin September.  Register with the code JWFOSS for 20% off your full conference\npass.","title":"Continuous Delivery of Infrastructure with Jenkins","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2016-09-07T00:00:00.000Z","id":"a11e3798-132b-51c1-b4f2-5be067a487f4","slug":"/blog/2016/09/07/pipeline-at-jenkins-world/","strippedHtml":"This is a guest post by R. Tyler Croy, who is a\nlong-time contributor to Jenkins and the primary contact for Jenkins project\ninfrastructure. He is also a Jenkins Evangelist at\nCloudBees, Inc.\n\nI have been heavily using Jenkins Pipeline for just about\nevery Jenkins-related project I have contributed to over the past year. Whether I am\nbuilding and publishing Docker\ncontainers, testing\ninfrastructure code or\npublishing this very web\nsite, I have been adding a Jenkinsfile to nearly every Git repository I\ntouch.\n\nImplementing Pipeline has been rewarding, but has not been without its own\nchallenges. That’s why I’m excited to see lots of different Jenkins Pipeline\nrelated content in the agenda at\nJenkins World.\n\nI don’t think it’s possible for a single person to attend all of the Pipeline\ntalks, or the Pipeline-related demos\nin the \"Open Source Hub\", but fortunately CloudBees\nwill be recording the sessions. If you have Pipeline-related questions unanswered by\nall these presentations, feel free to join us at the \"Open Source Hub\" in the\nexpo hall and Ask the\nExperts.\n\nOn the first day of Jenkins World (September 13th), Isaac Cohen is hosting a\nworkshop titled\nLet’s\nBuild a Jenkins Pipeline which may be interesting to you if you haven’t yet\nworked with Pipeline.\n\nPipelining\nDevOps with Jenkins and AWS\n\nSeptember 14th 2:00 PM - 2:45 PM, Exhibit Hall A-1\n\nAutomated workflow is a proven method for removing process variability. DevOps\npipelines are the next step in the evolution of CI/CD/DevOps. This talk covers\nJenkins pipelines, both with and without AWS integration, and explains how\nJenkins can be used to create, execute and manage pipelines.\n\n— Jimmy Ray of nextSource\n\nPerfecting\nYour Development Tools: Updates to the Helix Plugin for Jenkins\n\nSeptember 14th 5:00 PM - 6:00 PM, Exhibit Hall C\n\nConsidering a mono repo that can manage all your source code, binary and other\nassets? Join us at the Perforce Birds of a Feather Session for updates and\ndiscussions around the Helix Plugin for Jenkins (or ‘P4 plugin’).\n\nThis session will look at the latest DSL PipeLine support in the ‘P4 plugin’\nfor Jenkins and will include a live demo. We will show you how to map your\nBranches and Streams into a Jenkins Workspace, publish assets back into\nHelix, and more. You may even get a sneak preview at the latest ‘P4 plugin’\nfor Jenkins that allows you the freedom to query and run commands from\nwithin Jenkins directly against your Helix connection.\n\n— Paul Allen of Perforce\n\nContinuously\nDeploying Containers with Jenkins Pipeline to Docker Swarm Cluster\n\nSeptember 14th 3:00 PM - 3:45 PM, Exhibit Hall A-3\n\nMany of us have already experimented with Docker - for example, by running one\nof the pre-built images from Docker Hub. It is possible that your team might\nhave recognized the benefits that Docker provides in building microservices and\nthe advantages the technology could bring to development, testing, integration\nand, ultimately, production. However, you must create a comprehensive build\npipeline before deploying any containers into a live environment. Integrating\ncontainers into a CD pipeline is far from easy. Along with the benefits Docker\nbrings, there are challenges both technically and process-related. This\npresentation attempts to outline the steps you need to take for a\nfully-automated Jenkins pipeline that continuously builds, tests and deploys\nmicroservices into a Docker Swarm cluster.\n\n— Viktor Farcic\n\nNo,\nYou Shouldn’t Do That! Lessons from Using Pipeline\n\nSeptember 15th 10:30 AM - 11:15 AM, Exhibit Hall A-1\n\nPipeline is as powerful as a loaded gun, but with skill can be as delicate as a\nsurgeon’s knife. This talk will give an overview of health and safety so that\nyou can avoid shooting yourself in the head and walk the path to medical\nschool. It will cover not only what not to do, but also why, and share some\nsolutions so you are not left high and dry. Both James and Bobby have bullet\nwounds from “Champagning” pipeline to automate the test and release of several\nof the CloudBees products and can occasionally still be seen walking with a\nlimp from shooting for the moon and hitting their feet.\n\n— Bobby Sandell and James T. Nord of CloudBees\n\nDocker\nImage Lifecycle Implemented with Jenkins Pipeline\n\nSeptember 15th 11:30 AM - 12:15 PM, Exhibit Hall A-2\n\nWhile Docker has enabled an unprecedented velocity of software production, it\nis all too easy to spin out of control. A promotion-based model is required to\ncontrol and track the flow of Docker images as much as it is required for a\ntraditional software development lifecycle. We will demonstrate how to go from\ndevelopment to containerization to distribution utilizing binary management\npromotion in a framework implemented on Jenkins, using the Pipeline\nfunctionality.\n\n— Mark Galpin\n\nDirections for Pipeline\n\nSeptember 15th 11:30 AM - 12:15 PM, Exhibit Hall A-1\n\nThe Pipeline feature has matured and is now included in Jenkins 2.0. During the\ntime since its release, copious user feedback has been received about missing\nfeatures and pain points. Come hear about some things we know should be worked\non - or are already in progress - and bring your suggestions.\n\n— Jesse Glick of CloudBees\n\nHow\nto Do Continuous Delivery with Jenkins Pipeline, Docker and Kubernetes\n\nSeptember 15th 2:30 PM - 3:15 PM, Great America J\n\nIn this talk, we’ll show how to use Jenkins Pipeline together with Docker and\nKubernetes to implement a complete end-to-end continuous delivery and\ncontinuous improvement system for microservices and monolithic applications\nusing open source software. We’ll demonstrate how to easily create new\nmicroservices projects or import existing projects, have them automatically\nbuilt, system and integration tested, staged and then deployed. Once deployed,\nwe will also see how to manage and update applications using continuous\ndelivery practices along with integrated ChatOps - all completely automated!\n\n— James Strachan of Red Hat\n\nIntroducing\na New Way to Define Jenkins Pipelines\n\nSeptember 15th 3:45 PM - 4:30 PM, Great America J\n\nPipeline is quickly establishing itself as the direction that Jenkins jobs are\ngoing, enabling the definition of a complete CD pipeline in a single job;\nPipeline as Code via the “Jenkinsfile”; job durability across controller restarts;\nand more. I’ll be talking here about the next evolution for Pipeline: a simple,\ndeclarative model to define your Pipelines with no need to write scripts. This\nconfiguration syntax for Pipeline allows you to automatically configure all\nstages of your pipeline, the complete build environment, post-build actions,\nnotifications and more. All while providing syntactic and semantic validation\nbefore the build actually gets going.\n\n— Andrew Bayer of CloudBees\n\nThe\nNeed For Speed: Building Pipelines To Be Faster\n\nSeptember 15th 4:45 PM - 5:30 PM, Exhibit Hall A-1\n\nResponse time is paramount for a CI/CD system. In this session, you will see\nhow a few best practices in constructing pipelines can yield faster turnaround\ntimes and reduced resource use. We’ll also run through plugins and tools to\nanalyze and visualize performance, including the Pipeline Stage View plugin. If\ntime permits, we may briefly discuss some of the computer science theory behind\ndifferent aspects of performance.\n\n— Sam Van Oort of CloudBees\n\nContinuously Delivering\nContinuous Delivery Pipelines\n\nSeptember 15th 4:45 PM - 5:30 PM, Exhibit Hall J\n\nOur 600-person IT organization has committed to implementing continuous\ndelivery practices enterprise-wide. This isn’t a single momentous event put in\nplace overnight. Rather, it’s a strategic journey towards a common goal, and\nthrough which each application will take its own unique path. A seminal\ncomponent of our CD journey is the Pipeline plugin and it has become our\nstandard for CD pipeline orchestration. We will discuss a few of the diverse\npaths taken by the application teams at our company and show how the use of the\nPipeline plugin has uniquely enabled continuous delivery for us in a way that\nno competing tool can.\n\n— Neil Hunt of Aquilent\n\nCD Pipelines as Code with\nGithub and Bitbucket\n\nSeptember 15th 4:45 PM - 5:30 PM, Exhibit Hall J\n\nPipeline Multibranch projects come as a natural evolution of pipeline as code:\ndefine your CD pipeline in your source code repository and Jenkins will create\nisolated branch and pull requests jobs for it. This talk is about the\nintegration of the Pipeline Multibranch plugin with Github and Bitbucket as\nbranch sources.\n\n— Antonio Muñiz of CloudBees\n\nRegister for Jenkins World in\nSeptember with the code JWFOSS for a 20% discount off your pass.","title":"Pipeline at Jenkins World 2016","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2016-09-06T00:00:00.000Z","id":"8ad9f6bc-3bc6-5882-82e5-d2a281d96faa","slug":"/blog/2016/09/06/jenkins-world-speaker-blog-pipeline-model-definition/","strippedHtml":"This is a guest post by Jenkins World speaker Andrew Bayer, Jenkins\ndeveloper at CloudBees.\n\nOver the last couple years, Pipeline as code has very much become the future of\nJenkins - in fact, at this point, I’d say it’s pretty well established as the\npresent of Jenkins. But that doesn’t mean it’s done, let alone that it’s\nperfect. While many developers enjoy the power and control that they get from\nwriting Pipelines using scripting, not everyone feels the same way. A lot of\ndevelopers want to specify their build as configuration and get on with building\nsoftware.\n\nPipeline scripts haven’t been a good way to do that…​until now.\n\nWith new changes to Jenkins Pipeline, you are now able to define your Pipeline\nfrom configuration in your Jenkinsfile by installing the new\nPipeline Model Definition\nplugin. It’s available today for you to try via the update center.\nBe sure to check the documentation for examples on how to get started for a\nvariety of languages and platforms.\n\nHere’s a quick example based on the plugin’s own Jenkinsfile :\n\npipeline {\n    // Make sure that the tools we need are installed and on the path.\n    tools {\n        maven \"Maven 3.3.9\"\n        jdk \"Oracle JDK 8u40\"\n    }\n\n    // Run on any executor.\n    agent label:\"\"\n\n    // The order that sections are specified doesn't matter - this will still be run\n    // after the stages, even though it's specified before the stages.\n    postBuild {\n        // No matter what the build status is, run these steps. There are other conditions\n        // available as well, such as \"success\", \"failed\", \"unstable\", and \"changed\".\n        always {\n            archive \"target/**/*\"\n            junit 'target/surefire-reports/*.xml'\n        }\n    }\n\n    stages {\n        // While there's only one stage here, you can specify as many stages as you like!\n        stage(\"build\") {\n            sh 'mvn clean install -Dmaven.test.failure.ignore=true'\n        }\n    }\n\n}\n\nIt’s still early days for this feature, with a lot of further functionality\nplanned to make it easier and more intuitive to define your Pipelines. All of\nthat functionality lives on top of Pipeline scripting, so we’ll also keep\nimproving Pipeline steps and syntax outside of the model! And perhaps most\nexciting, the Pipeline model will be used by an in-the-works visual editor\nthat will be part of the Blue Ocean project - while the editor isn’t ready yet,\nthe Pipeline Model Definition plugin will be bundled with the Blue Ocean beta\nfor you to try out.\n\nI’ll be going into all of this and more at my talk on Thursday, September 15th, at\n3:45pm at Jenkins World, and showing off the same day at the lunchtime demo\ntheater. I can’t wait to see you all there and hear what you think of all this!\n\nAndrew will be\npresenting\nmore of this concept at\nJenkins World in September.\nRegister with the code JWFOSS for 20% off your full conference pass.","title":"Introducing a New Way to Define Jenkins Pipelines","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":null,"blog":null,"github":"abayer","html":"<div class=\"paragraph\">\n<p>Andrew was a core committer to Hudson and the author of numerous plugins.</p>\n</div>","id":"abayer","irc":null,"linkedin":null,"name":"Andrew Bayer","slug":"/blog/author/abayer","twitter":"abayer"}]}}]}},"pageContext":{"tag":"event","limit":8,"skip":40,"numPages":8,"currentPage":6}},
    "staticQueryHashes": ["3649515864"]}