{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/lifx",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2017-01-10T00:00:00.000Z","id":"ce9069d6-e9c4-5b3e-b147-2b3d3ac2f09d","slug":"/blog/2017/01/10/jenkins-lifx-notifier-plugin/","strippedHtml":"This is a\ncross\npost by Veaceslav Gaidarji, open source\ndeveloper and contributor to the Jenkins and Bitrise projects.\n\nSome time ago I encountered a LIFX smart bulbs.\nThese are the bulbs with a chip inside - 50% bulb, 50% chip. There are mobile\napplications for easy configuration and remote control of the bulb. Nothing\nspecial here, it simply works and is very convenient to have such bulbs in\ndormitory.\n\nBrilliant idea time\n\n99% of ideas which come to our minds either were already implemented by someone\nelse or they are useless.\n\n— Veaceslav Gaidarji\n\nAnd as it always happens, the developer inside me generated an idea which, as\nit always happens, was implemented by someone else already.\n\nThe idea was: to connect a LIFX bulb to Jenkins server and update the color\naccording to a job’s state.\n\nBefore starting to work on such Jenkins plugin, I searched for similar projects\non Google and the first links pointed me to existing\nLIFX notifier plugin\nand a\nblog post\nfrom\nMichael Neale\nwho created the plugin. Michael’s post describes exactly what I had in mind.\n\nAt this point I had 2 options:\n\nforget about building something new and just use the plugin\n\nimprove existing plugin\n\nFirst option is always easy and effortless, but second one is more challenging.\n\nImproving an existing plugin\n\nThe existing LIFX notifier plugin\ndid its job really well and I was able to connect my bulb to Jenkins and test\nit. But it wasn’t complete and had no configurable at all, therefore no\npossibility to change the colors.\n\nFirst, I read Jenkins contribution guidelines, which\nencourage\ndevelopers to improve existing plugins (if any) and not create other versions\nof plugins with similar functionality. Then I contacted the plugin author, Michael Neale,\nvia email and kindly asked for the contributor access in GitHub\nfor the existing plugin version. After a short discussion about my plans on this\nplugin, Michael added me as a contributor to GitHub\nrepo and wished me\ngood luck. Thanks Michael!\n\nI wanted to improve the LIFX notifier plugin to add the ability\ncustomize the colors ( in progress, build success and build failure). This\nis not a hard task actually.\nA 1000+ plugins were\ndeveloped for Jenkins by the hackers like me, which means that I should have no\nproblem to do it as well.\nFortunately for me, I have used some plugins already which had a UI similar to\nthat I had planned to add to the LIFX notifier, such as:\n\nHockeyApp plugin\n\nFabric Beta publisher plugin\n\nDifferent Build notifiers plugins\n\nReviewing the code for these plugins, plus Jenkins\nplugin\ndevelopment documentation, and of course looking over\nJelly components helped\nme to:\n\nBetter understand the Jenkins architecture.\n\nLearn how Jenkins plugins work in general.\n\nLearn how to create the UI components for a plugin.\n\nLearn how to subscribe to Jenkins job state changes using appropriate\nextension points.\n\nIn a few weeks I’ve finished my plugin modifications and added unit tests for\nits major parts.  As a result, the plugin now has a UI configuration section in\nPost-build Actions which is self descriptive:\n\nThe last step was to prepare new plugin version and publish it to the world!\nThe Jenkins\"Hosting\nplugins\" document describes step by step process of how to publish a plugin.\n\nThis includes many steps which should be respected very carefully.\n\nDemo\n\nWhat I’ve learned\n\nIt was my first experience in Jenkins plugins development. I should say that\nsteep learning curve is high enough, and sometimes is really hard to find\nanswers on appearing questions. But in general it’s all about Java, XML,\nMaven and it’s a lot of fun developing Jenkins plugins.\n\nCheck out the LIFX notifier page\nfor more information about the latest releases!\n\nBonus : bitrise.io users, I’ve developed step LIFX notifier for bitrise as well.","title":"Learning plugin development by improving the LIFX notifier plugin","tags":["plugins","lifx"],"authors":[]}}]}},"pageContext":{"tag":"lifx","limit":8,"skip":0,"numPages":1,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}