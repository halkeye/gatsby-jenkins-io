{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/meta/page/3",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2010-09-04T00:00:00.000Z","id":"db2d22a5-3d44-5396-a2f6-4cfdbed3cd6b","slug":"/blog/2010/09/04/hudson-events-calendar/","strippedHtml":"Just wanted to let everybody know that I’ve gone ahead and added a Calendar for all the upcoming Hudson-related events.\n\nHopefully we’ll be able to add more and more events for the rest of the year including seminars, more meetups and potentially a few drink-ups!\n\nWorth mentioning that I’ve not yet tested the iCal feed so if you have troubles with it, let me know (via the comments).","title":"Hudson Events Calendar","tags":["general","meta"],"authors":[]}},{"node":{"date":"2010-08-17T00:00:00.000Z","id":"6b7df70f-bfc3-514d-be8c-58d039483ca5","slug":"/blog/2010/08/17/hudson-anonymous-usage-data/","strippedHtml":"In late 2008, the Hudson team released version 1.264 which added an anonymous reporting feature (you can opt-out in the \"Manage Hudson\" screen). The reporting feature has been sending information back to the Hudson team to help us understand how Hudson is used in aggregate; the info being reported includes the number of jobs configured, agent configurations, what plugins (and what versions of those plugins) are installed, and more. This data has not been available publicly until now! The raw data needed to be decrypted and scrubbed of any potentially identifying information, such as non-public plugin names or usernames in snapshot versions. We’ve finally scrubbed the data and are making it available!\n\nThe data is currently in monthly JSON bundles, organized by unique install key. We’ve filtered out reports of installations without any jobs configured, as well as any installations with only one report in a given month.\n\nIf you’d like access to the data, please send an email to dev@hudson.dev.java.net or jump onto the IRC channel and ask - we’ll send you the URL and a private username/password which you’ll need to access the info. We’re also planning to do more analysis of the data ourselves, for now feast your eyes on this spreadsheet, which shows the total number of unique installations seen per month and the number of unique installations of each publicly available plugin per month.","title":"Hudson Anonymous Usage Data","tags":["general","core","just for fun","meta","news","plugins","jenkinsci"],"authors":[]}},{"node":{"date":"2010-08-02T00:00:00.000Z","id":"39857c82-9e13-5cee-bbe3-208d7d4e51d5","slug":"/blog/2010/08/02/dogfooding-hudson-were-looking-for-slaves/","strippedHtml":"As you may have noticed, thanks to the link on this and the other pages here at hudson-labs.org, the Hudson development community has recently introduced ci.hudson-labs.org, the official Hudson-on-Hudson instance. We’re currently building Hudson proper, the Hudson core RC branch, individual builds for the various Hudson plugins and Gerrit, as well as various libraries and infrastructure jobs Hudson depends on.\n\nWe’re currently running all those builds on a dedicated Linux agent, generously provided to the Hudson project by Digg, my employer. This has been great - except for the day when I’d just added all the individual plugin jobs for the first time, we haven’t had real problems with capacity. But we are limited in the environments we can run our tests on as a result of only having a Linux agent. We’re currently playing with a temporary Windows agent, but we’d really like to have at least one more permanent Windows agent, and a Mac agent as well, so that we can run Hudson’s core integration tests on those platforms as well. Since this is Hudson we’re talking about, we don’t need the agent to be in any given physical location - we just need it to be running the agent process and talking to our server. If you’re interested in helping us out with this, please contact me at andrew dot bayer at gmail dot com. Thanks!","title":"Dogfooding Hudson - We're Looking for Agents!","tags":["infrastructure","core","meta","jenkinsci"],"authors":[]}},{"node":{"date":"2010-07-28T00:00:00.000Z","id":"a07fba72-78a8-535c-9379-13f2b06ac4db","slug":"/blog/2010/07/28/hosting-your-hudson-plugin-at-github/","strippedHtml":"For as long as Hudson’s had a plugin model and development community, we’ve provided source code and binary hosting through our Subversion repo at java.net. But what if you’re a plugin developer and you don’t want to use Subversion? Well, we have an alternative for your source code: host it with Hudson on GitHub.\n\nTo get this in place, send an email to dev@hudson.dev.java.net (or ask in the IRC channel) asking to get a repository created for your plugin at Github. Make sure to include the name of the plugin and your Github username (and the Github usernames of any other developers who’ll be pushing to your plugin’s repo). If your plugin is already in Github, include the URL for the existing repo so that we can fork it. One of the Hudson admins will create the repository (forking if appropriate) and add the user(s) to the list of users with push access to the Hudson-hosted repositories at Github. Once you hear back from them, you’ll be able to push code to the new repository.\n\nYou will need to make a few changes to your plugin’s POM, as compared to what works for a plugin POM in the java.net Subversion tree.\n\nFirst, add the following to the ++ section:\n\norg.apache.maven.plugins\nmaven-release-plugin\n2.0\n\norg.apache.maven.scm\nmaven-scm-provider-gitexe\n1.3\n\nThis is needed to make sure we’re overriding the parent POM’s SCM provider settings. Next, add the following to the ++ section:\n\norg.jvnet.wagon-svn\nwagon-svn\n1.9\n\nThis is needed because we’re still going to be using wagon-svn to deploy the artifacts in the release process. Lastly, add an ` section, within the ` section of the POM, like the following:\n\nscm:git:git://github.com/hudson/your-plugin-repo.git\nscm:git:git@github.com:hudson/your-plugin-repo.git\nhttps://github.com/hudson/your-plugin-repo\n\nAs with the first section, this is needed to override the default SCM settings in the parent POM. Make sure to change \"your-plugin-repo\" to your actual plugin repository name, of course! It’d also be a good idea to put a link to your Github repo on your plugin’s wiki page at the Hudson wiki, since the default source link will go to Subversion.\n\nNow, with these changes in place, committed and pushed to the master branch in your plugin’s repository, you should be able to run \"mvn release:prepare release:perform\" just as you would if the plugin were hosted in Subversion, with your plugin showing up in the Update Center within a few hours. Be sure that you’ve configured the login information for the java.net Maven repository, as detailed here - this is still needed for plugins hosted at and released from Github, since Hudson’s Maven repository still lives at java.net. If you run into any issues releasing your plugin from Github, first be sure to review the wiki page on plugin hosting, which addresses many of the issues you may encounter when running the Maven release plugin.\n\nIf you’re still stumped, feel free to email the Hudson developer list or ask in the IRC channel for help.","title":"Hosting your Hudson plugin at Github","tags":["development","meta","plugins","tutorial","jenkinsci"],"authors":[]}},{"node":{"date":"2010-06-23T00:00:00.000Z","id":"72813937-fa54-594b-8d0b-fbe3188cc1c8","slug":"/blog/2010/06/23/stickers-starting-to-arrive/","strippedHtml":"Way back in March, I asked you all: Want some Hudson stickers?\n\nTurns out, a lot of you do! Thanks to a huge amuont of help by my future wife, the first shipment of Hudson stickers went into the mail last week. This first shipment was only to United States addresses! If you live outside of the U.S., or if you requested more than 50-ish stickers, I’ve not yet been able to send you stickers. I expect to start sending out international shipments later this week and early next week.\nTo those of you that have received your stickers, I’d like to remind you of the terms of our agreement:\n\nConferences : The only condition being that you tell me all about the event and how Hudson was received after the fact (this may involve an interview).\n\nCompanies : I always appreciate stickers, pens, branded bouncy balls, etc (see: swag) in return!\n\nNice People : If you’re just a fan of Hudson, stickers, or both, I’ll still gladly mail you a few stickers with the condition that you take pictures of where the stickers end up (and maybe of your Hudson install) and either email me some cool pictures or post them to  Flickr (tagged: \"hudsonstickers\")\n\nTo be honest, I really just want to see some pictures of Hudson stickers slapped all over cool stuff: laptops, bosses, servers, desks, stop signs, coworkers, cats, you name it.\n\nIf you did not request stickers, but want some now: please refer to the original post for directions. I do still have stickers left, but there are some \"bulk requests\" I’ve not yet filled. I will do my best to send out as many stickers as I can.","title":"Stickers starting to arrive","tags":["general","just for fun","meta"],"authors":[]}},{"node":{"date":"2010-06-09T00:00:00.000Z","id":"ba641f0e-00e7-583a-ae6c-7b96cc13d8f6","slug":"/blog/2010/06/09/welcome-to-hudson-labs/","strippedHtml":"Hello again! It’s been a long time since I’ve written for the Hudson community, but now I’m back and ready to tackle some of the latest developments in the Hudson community.\n\nWhat is Hudson Labs?\n\nAs you may have read in April, Kohsuke left Oracle to found InfraDNA, a company specializing around Hudson. The departure meant the Hudson community would no longer have access to some of the hardware and services that Kohsuke had accumulated over the years working on Hudson at Sun Microsystems. While we are still happily part of the Java.net community, we’ve recognized the need for some community-owned resources and Hudson Labs was born.\n\nOver the past couple months, a group within the Hudson community, \"infra\" (short for \"infrastructure\"), has been working to get machines set up and build the foundation for a more open Hudson project infrastructure.\n\nWhat does Hudson Labs provide?\nBuilds\n\nOne of the first tasks we set upon when building out Hudson Labs was to start improving the build and release process of Hudson by moving as much of it into a public Hudson instance. Building Hudson itself, plugins and dependencies of the Hudson project, the Hudson Labs instance will help improve the reliability of the Hudson ecosystem across the board, and should serve as a useful tool for core and plugin developers.\n\nMirroring\n\nThanks to the great team over at the Oregon State University Open Source Lab ( OSUOSL), we’ve been able to build out mirroring infrastructure for Hudson to provide fast access to native packages and wars alike. Currently the OSUOSL only has mirrors inside the continental United States, so we’re reaching out to friends in Asia and Europe to extend the mirroring system.\n\nInformation\n\nI’m currently working on re-working some of the blog posts you may have read over four months as more structured tutorials. I hope to provide an easily accessible knowledge-base for developing Hudson along with configuring Hudson for various platforms and development environments; this is a more difficult task so all the pieces aren’t entirely in place for this just yet.\n\nTo be honest, I’m very enthusiastic about Hudson’s future. Now that InfraDNA is up and running, Kohsuke’s renewed focus combined with the foundation of Hudson Labs and the uncommonly hospitable Hudson developer and user communities, the future is looking bright!","title":"Welcome to Hudson Labs!","tags":["general","meta","news"],"authors":[]}},{"node":{"date":"2010-04-01T00:00:00.000Z","id":"afcf7466-bb4d-5533-812d-d3a41c056c17","slug":"/blog/2010/04/01/announcing-the-hudson-2-0-roadmap/","strippedHtml":"/https://agentdero.cachefly.net/continuousblog/java-evil-edition.png\" alt=\"java evil edition\"> There have been numerous discussions on the mailing lists over the past couple months regarding memory issues, speed regressions and a number of other issues regarding performance of Hudson, particularly under high load. In an effort to address these concerns, the Hudson core team has https://web.archive.org/web/ /https://agentdero.cachefly.net/continuousblog/just-kidding.jpg[announced] a roadmap for Hudson 2.0.\n\nIn a message to the dev@ mailing list, Kohsuke said of Hudson 2.0:\n\nAs it stands now Hudson 1.0 is a good proof of concept, it’s time to take the lessons learned and build a truly solid enterprise-ready continuous integration server\nSome notable points from Kohsuke’s announcement with regards to the Hudson 2.0 roadmap, which is expected to ship late Q4 2011, are:\n\nImplementation of core in portable C for greater speed and code readability\n\nSelection of a better license, namely the WTFPL\n\nRevamped storage architecture around the Oracle 11g Database to provide more optimal synergy over flat XML files.\n\nEmbedding the Mono, Python, V8 and Lua engines allowing plugins to be written in C#, Python, JavaScript or Lua.\n\nAdoption of the Hudson Eagle as a mascot instead of the butler\n\n\"Social\" support will be merged into core, integrating Hudson directly with Facebook so you can share test failures with your friends.\n\nHudson 2.0 is expected to follow in the intrepid footsteps of other major revamps such as Netscape 5 and Perl 6 in its ambitiousness and innovation.","title":"Announcing the Hudson 2.0 Roadmap","tags":["just for fun","meta"],"authors":[]}},{"node":{"date":"2010-04-01T00:00:00.000Z","id":"2ff076c3-c4bd-58bd-b9aa-1af55391e227","slug":"/blog/2010/04/01/regarding-the-start-of-april/","strippedHtml":"I had briefly contemplating what sort of silly posts I could write to celebrate April Fool’s Day, when I sat down to write out some of them, I got a few sentences in and decided that they just weren’t funny enough. Either I have very high standards, or I’m terribly unfunny.\n\nThe web is awash with April Fool’s articles, comics, headlines and everything else, so instead I’m going to just give you a few useful links.\n\nA couple of Twitter links\n\nBesides the @hudsonci account, you can also follow a couple of Hudson’s more notable (or was it notorious?) hackers, such as our benevolent dictator, Kohsuke Kawaguchi. Ben Shine from Yahoo! who’s been working pretty hard on making Hudson prettier. Then there’s John Ferguson Smart who’s been working on a Hudson book. Of course I’ve tried to collect as many Hudson contributors as possible in the @contributors Twitter list.\n\nHacking Hudson\n\nWhen starting to hack Hudson, it’s useful to start by understanding how to build Hudson. If hacking Hudson’s core isn’t your cup of tea, you can always start with the plugin tutorial and try your hand at writing another awesome Hudson plugin. If you find yourself struggling to find out what methods do what while you’re hacking, you can always visit the regularly updated, online Javadocs for Hudson\n\nCommunicate\nThe two primary mediums for communicating with the Hudson community are through the mailing lists and the IRC channel. During \"regular business hours\" for the pacific standard time zone, you can usually get some decent real-time help or answers to most of your queries.\n\nI’d list more, but I’m too busy reading about Google’s nuclear weapons program. ;)","title":"Regarding the start of April","tags":["meta"],"authors":[]}}]}},"pageContext":{"tag":"meta","limit":8,"skip":16,"numPages":4,"currentPage":3}},
    "staticQueryHashes": ["3649515864"]}