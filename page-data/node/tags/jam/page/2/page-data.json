{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/jam/page/2",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2016-05-12T00:00:00.000Z","id":"16aeac16-1357-5d74-85da-84ef71ddbaa2","slug":"/blog/2016/05/12/sf-jam-jenkins-and-azure/","strippedHtml":"A few weeks ago, my colleague Brian Dawson\nand I were invited to present on\nScaling Jenkins for\nContinuous Delivery with Microsoft Azure in Microsoft’s\nReactor space. Azure is Microsoft’s\npublic cloud offering and one of the many tools available to Jenkins users for\nadding elastic compute capacity, among other things, to their build/test/deploy\ninfrastructure. While our presentations are applicable to practically\nany cloud-based Jenkins environment, Thiago Almeida and Oguz Pastirmaci from\nMicrosoft were also on-hand and presented some interesting Azure-specific\nofferings like\nAzure\nContainer Service with Jenkins.\n\nWhile we do not have video from the meetup, Brian and I did record\na\nsession with Thiago and Oguz for Channel9\nwhich covers much of the same content:\n\nTo kick-off the meetup we asked attendees a few polling questions and\nreceived very telling responses:\n\nHow big is your Development/IT organization?\n\nWhat is your role?\n\nBy show of hands do you practice CI/CD/DevOps/etc?\n\nAt what scale (tooling and practice)?\n\nThe responses indicated that the majority of attendees were from small to medium\norganizations where they practiced Continuous Delivery across multiple teams. A\nnotable 25% or greater attendees considered themselves \"fullstack\" or\nparticipating in all of the roles of Developer, QA, and Operations. Interesting\nwhen paired with the high number (~80%) of those who practice CD.  This is\nlikely because modern teams, with mature CD practices, tend to blur the\ntraditional lines of Developer, QA and Operations. However, In my experience,\nwhile this is often the case for small to medium companies in large\norganizations team members tend to fall into the traditional roles, with CD\nproviding the practice and platform to unify teams across roles.\n\n— Brian Dawson\n\nAfter gauging the audience, Thiago and Brian reviewed Continuous Delivery (CD)\nand implementing it at scale. They highlighted the fact that CD is being rapidly\nadopted across teams and organizations, providing the ability: to deliver a demonstrably\nhigher quality product, shipping more rapidly than before, and to keep team members happier.\n\nHowever, when organizations fail to properly support CD as they scale, they run\ninto issues such as: developers acting as administrators at the cost of\nproductivity, potential lack of security and/or exposure of IP and difficulty in\nsharing best practices across teams.\n\nThiago then highlighted that properly scaling CD practices in the organization\nalong with the infrastructure itself can alleviate these issues, and discussed\nthe benefits of scaling CD to on cloud platforms to provide \"CD-as-a-Service.\"\n\nOverall I found the \"theory\" discussion to be on point, continuous delivery is\nnot just a technology nor a people problem. Successful organizations scale their\nprocesses and tooling together.\n\nThe slides from our respective presentations are linked below:\n\n(Brian) Scaling Jenkins for Continuous Delivery (.pdf)\n\n(Tyler) Scaling Jenkins with Azure (.pdf)\n\nI hope you join us at future\nSan Francisco\nJAM s!","title":"SF JAM Report: Scaling Jenkins for Continuous Delivery with Azure","tags":["jam","azure","meetup"],"authors":[]}},{"node":{"date":"2016-05-10T00:00:00.000Z","id":"e79a5ee4-9a52-50ad-875a-d0e23f888bab","slug":"/blog/2016/05/10/jenkins-20-vjam/","strippedHtml":"Last week we hosted our first ever\nOnline JAM with the debut\ntopic of: Jenkins 2.0. Alyssa, our\nEvents officer, and I pulled together a\nseries of\nsessions focusing on some of the most notable aspects of Jenkins 2 with:\n\nA Jenkins 2.0 keynote from project founder\nKohsuke Kawaguchi\n\nAn overview of \"Pipeline as Code\" from Patrick\nWolf\n\nA deep-dive into Pipeline and related plugins like Multibranch, etc from\nJesse Glick and\nKishore Bhatia\n\nAn overview of new user experience changes in 2.0 from\nKeith Zantow\n\nA quick lightning talk about documentation by yours truly\n\nWrapping up the sessions, was Kohsuke again, talking about the road beyond\nJenkins 2.0 and what big projects he sees on the horizon.\n\nThe event was really interesting for me, and I hope informative for those who\nparticipated in the live stream and Q&A session. I look forward to hosting more\nVirtual JAM events in the future, and I hope you will\njoin us!\n\nQuestions and Answers\n\nBelow are a collection of questions and answers, that were posed during the\nVirtual JAM. Many of these were answered during the course of the sessions, but\nfor posterity all are included below.\n\nPipeline\n\nWhat kind of DSL is used behind pipeline as code? Groovy or allow freely use\ndifferent languages as a user prefer?\n\nPipeline uses a Groovy-based domain specific language.\n\nHow do you test your very own pipeline DSL?\n\nReplay helps in testing/debugging while creating pipelines and at the branch\nlevel. There are some ideas which Jesse Glick\nhas proposed for testing Jenkinsfile and Pipeline libraries captured in\nJENKINS-33925.\n\nIsn’t \"Survive Jenkins restart\" exclusive to [CloudBees] Jenkins Enterprise?\n\nNo, this feature does not need\nCloudBees\nJenkins Enterprise. All features shown\nduring the virtual JAM are free and open source. CloudBees' Jenkins Enterprise\nproduct does support restarting from a specified stage however, and that is not\nopen source.\n\nHow well is jenkins 2.0 integrate with github for tracking job definitions?\n\nUsing the\nGitHub\nOrganization Folder plugin, Jenkins can automatically detect a Jenkinsfile in\nsource repositories to create Pipeline projects.\n\nPlease make the ability for re-run failed stages Open Source too :)\n\nThis has been passed on to our friends at CloudBees for consideration :)\n\nIf Jenkinsfile is in the repo, co-located with code, does this mean Jenkins can\nauto-detect new jobs for different branches?\n\nThis is possible using the\nPipeline Multibranch plugin.\n\nWhat documentation sources are there for Pipeline?\n\nOur documentation section contains a number of pagesaround Pipeline.\nThere is also additional documentation and examples in the plugin’s\ngit repository and the\njenkinsci/pipeline-examples\nrepository. (contributions welcome!)\n\nWhere we can find the DSL method documentation?\n\nThere is generated documentation on jenkins.io which\nincldues steps from all public plugins. Inside of a running Jenkins instance,\nyou can also navigate to\nJENKINS_URL/workflow-cps-snippetizer/dslReference\nto see the documentation for the plugins which are installed in that instance.\n\nIf Pipeline is not support some plugins (there is a lot actually), I needed\nSonarQube Runner but unfortunately it’s not supported yet, in Job DSL plugin i\ncan use \"Configure Block\" and cover any plugin via XML, how i can achieve the\nsame with a Pipeline?\n\nNot at this time\n\nIs there a possibility to create custom tooltips i.e. with a quick reference or\na link to internal project documentation? Might be useful i.e. for junior team\nmembers who need to refer to external docs.\n\nNot generally. Though in the case of Pipeline global libraries, you can create\ndescriptions of vars/functions like standardBuild in the demo, and these will\nappear in Snippet Generator under Global Variables.\n\nOh pipeline supports joining jobs? It’s really good, but I cannot find document\nat https://jenkins.io/doc/ could you tell me where is it?\n\nThere is a build step, but the Pipeline system is optimized for single-job\npipelines\n\nWe have multiple projects that we would like to follow the same pipeline.  How\nwould I write a common pipeline that can be shared across multiple projects.\n\nYou may want to look at implementing some additional steps using the\nPipeline Global\nLibrary feature. This would allow you to define\norganization-specific extensions to the Pipeline DSL to abstract away common\npatterns between projects.\n\nHow much flexibility is there with creating context / setting environment\nvariables or changing / modifying build tool options when calling a web hook /\napi to parameterize pipelines for example to target deployments to different env\nusing same pipeline\n\nVarious environment variables are exposed under the env variable in the Groovy\nDSL which would allow you to construct logic as simple or as complex as\nnecessary to achieve your goal.\n\nWhen you set up the job for the first time, does it build every branch in git,\nor is there a way to stop it from building old branches?\n\nNot at this time, the best way to prevent older branches from being built is to\nremove the Jenkinsfile in those branches. Alternatively, you could use the\n\"include\" or \"exclude\" patterns when setting up the SCM configuration of your\nmultibranch Pipeline. See also\nJENKINS-32396.\n\nSimilar to GitHub organizations, will BitBucket \"projects\" (ways of organizing\ncollections of repos) be supported?\n\nYes, these are supported via the\nBitbucket\nBranch Source plugin.\n\nHow do you handle build secrets with the pipeline plugin? Using unique\ncredentials stored in the credentials plugin per project and/or branch?\n\nThis can be accomplished by using the\nCredentials\nBinding plugin.\n\nSimilar to GitHub Orgs, are Gitlab projects supported in the same way?\n\nGitLab projects are not explicitly supported at this time, but the extension\npoints which the GitHub Organization Folder plugin uses could be extended in a\nsimilar manner for GitLab. See also JENKINS-34396\n\nIs Perforce scm supported by the Pipeline plugin?\n\nAs a SCM source for discovering a Jenkinsfile, not at this time. The\nP4\nplugin does provide some p4 steps which can be used in a Pipeline script\nhowever, see here for documentation.\n\nIs Mercurial supported with multibranch?\n\nYes, it is.\n\nCan Jenkinsfile detect when it’s running against a pull request vs an approved commit, so that it can perform a different type of build?\n\nYes, via the env variables provided in the DSL scope. Using an if statement,\none could guard specific behaviors with:\n\nif (env.CHANGE_ID != null) {\n    /* do things! */\n}\n\nLet’s say I’m building RPMs with Jenkins and use build number as an RPM\nversion/release number. Is there a way to maintain build numbers and leverage\nversioning of Jenkinsfile?\n\nThrough the env variable, it’s possible to utilize env.BUILD_NUMBER or the\nSCM commit ID, etc.\n\nLove the snippet generator! Any chance of separating it out from the pipeline\ninto a separate page on its own, available in the left nav?\n\nYes, this is tracked in\nJENKINS-31831\n\nAny tips on pre-creating the admin user credential and selecting plugins to\nautomate the Jenkins install?\n\nThere are various configuration\nmanagement modules which provide parts of this functionality.\n\nI’m looking at the pipeline syntax (in Jenkins 2.0) how do I detect a\nstep([…​]) has failed and create a notification inside the Jenkinsfile?\n\nThis can be done by wrapping a step invocation with a Groovy try/catch block.\nSee also JENKINS-28119\n\nUser Interface/Experience\n\nIs the user experience same as before when we replace the Jenkins.war(1.x to\n2.x) in an existing (with security in place) installation?\n\nYou will get the new UI features like redesigned configuration forms, but the\ninitial setup wizard will be skipped. In its stead, Jenkins will offer to\ninstall Pipeline-related functionality.\n\nIs it possible to use custom defined syntax highlighting ?\n\nWithin the Pipeline script editor itself, no. It is using the\nACE editor system,\nso it may be possible for a plugin to change the color scheme used.\n\nCan you elaborate on what the Blue Ocean UI is? Is there a link or more\ninformation on it?\n\nBlue Ocean is the name of user experience an design project, unfortunately at\nthis point in time there is not more information available on it.\n\nGeneral\n\nHow well this integrate with cloud environment?\n\nThe Jenkins controller and agents can run easily in any public cloud environment\nthat supports running Java applications. Through the\nEC2,\nJClouds,\nAzure, or\nany other plugins which extend the cloud\nextension\npoint, it is possible to dynamically provision new build agents on a configured\ncloud provider.\n\nAre help texts and other labels and messages updated for other localizations /\nlanguages as well?\n\nPractically every string in Jenkins core is localizable. The extent to which those\nstrings have been translated depends on contributors by speakers of those\nlanguages to the project. If you want to contribute translations, this\nwiki\npage should get you started.\n\nAny additional WinRM/Windows remoting functionality in 2.0?\n\nNo\n\nIs there a CLI to find all the jobs created by a specific user?\n\nNo, out-of-the-box Jenkins does not keep track of which user created which jobs.\nThe functionality provided by the\nOwnership\nplugin may be of interest though.\n\nPlease consider replacing terms like \"master\" and \"slave\" with \"primary\" and\n\"secondary\".\n\n\"slave\" has been replaced with \"agent\" in Jenkins 2.0.\n\nUpdated 2020-09-18 : The term \"master\" is being replaced with \"controller\".\n\nWe’ve been making tutorial videos on Jenkins for awhile (mostly geared toward\npassing the upcoming CCJPE). Because of that we’re using 1.625.2 (since that is\nwhat is listed on the exam), but should we instead base the videos on 2.0?\n\nAs of right now all of the\nJenkins Certification work done by CloudBees is\nfocused around the Jenkins LTS 1.625.x.","title":"Jenkins 2.0 Online JAM Wrap-up","tags":["jenkins2","jam","meetup"],"authors":[]}},{"node":{"date":"2016-04-01T00:00:00.000Z","id":"b8091c97-4904-5c1c-adbb-76e6349003ab","slug":"/blog/2016/04/01/march-2016-jam-st-petersburg/","strippedHtml":"On March 10th we have conducted the second Jenkins meetup in Saint Petersburg,\nRussia.  The meetup topic was\"Jenkins and Continuous Delivery\".  We had 3\ntalks addressing various aspects of Jenkins usage in this area.\n\nTalks\n\nIntroduction slides [ru]\n\nJenkins 2.0 and Pipeline-as-Code\n\nSpeaker: Oleg Nenashev, CloudBees\n\nPresentation (en)\n\nPresentation (ru)\n\nContinuous Delivery for Documentation\n\nSpeaker: Stanislav Ovchar, Motorola Solutions\n\nPresentation (ru)\n\nContinuous Delivery with Jenkins at ZeroTurnaround\n\nSpeaker: Sergei Egorov, ZeroTurnaround\n\nPresentation (en)\n\nWe also had a long Jenkins afterparty. Starting from the next meetup we hope to\nmake this part more official.\n\nLinks\n\nSt. Petersburg Meetup page (follow the events here)\n\nEvent page on the Yandex.Events portal\n\nSt. Petersburg Meetup Twitter\n\nJenkins RU Twitter\n\nJenkins RU Gitter Chat\n\nAcknowledgments\n\nThe event has been organized with the help from\nYandex and\nCloudBees.\n\nMore Jenkins meetups\n\nIf you want to organize a Jenkins meetup in St. Petersburg or to be a speaker\nthere, please contact us via the\nMeetup\ndiscussions page\n\nRegarding other areas, check out where\nJenkins Area Meetups (JAMs) are\nlocated in the world.\n\nDon’t see a JAM in your area?  Why not start your own,\nfind out\nhow.","title":"March 2016 St. Petersburg Jenkins Meetup Report","tags":["jam","jenkins_ru","jenkins2"],"authors":[]}},{"node":{"date":"2016-03-21T00:00:00.000Z","id":"6ddd387e-8f0e-561b-ac0d-a975fc5eb865","slug":"/blog/2016/03/21/vjam/","strippedHtml":"Over the past few months, I’m happy to say, the number of\nJenkins Area Meetups (JAMs) has grown\ntremendously! The excitement around JAMs has gotten us thinking about something\nlarger, something more globally focused. That led us to create\nvJAM, an online Jenkins Area\nMeetup, where we can share what we’re learning together. The effort will be\nspear-headed by long time Jenkins contributor, R. Tyler Croy.\n\nThe key goals for the Virtual Jenkins Area Meetup are:\n\nConnect the global Jenkins user and developer community.\n\nHelp spread the latest and greatest best practices.\n\nSupport other JAMs by offering\nanother, broader, audience for speakers and organizers\n\nvJAM, originally inspired by Virtual JUG, will\nsupplement local JAMs but nothing virtual can replace the value of talking with\nother Jenkins users over pizza and drinks.\n\nWe’re currently working on the agenda for the first vJAM, which will be posted\nto this Meetup group, so be\nsure to sign up if you’re interested in participating!\n\nIf you’re interested in creating your own local Jenkins Area Meetup, read\nthis page\nfor more details.","title":"vJAM: Virtual Jenkins Area Meetup","tags":["jam"],"authors":[]}},{"node":{"date":"2016-03-02T00:00:00.000Z","id":"a3eac79d-1e79-52f6-a5b7-64e85e16043b","slug":"/blog/2016/03/02/toulousejam-hackergarten/","strippedHtml":"Vous êtes développeuse ou développeur, vous avez envie de découvrir le projet\nJenkins de l’intérieur, en bricolant sur un sujet qui vous intéresse, lisez\nla suite !\n\nMercredi 9 mars, le Toulouse Jenkins Area Meetup\norganise à Toulouse un Hackergarten Jenkins, occasion idéale pour faire ses\npremiers pas dans la communauté assisté(e) d’un contributeur au projet.\n\nHackergart quoi ?\n\nHackergarten est un mot qui provient de la contraction des mots Hacker et\nKindergarten, ce dernier étant le mot allemand qui désigne en gros l’école\nmaternelle.\n\nComment ça va se passer ?\n\nEn partenariat avec le Toulouse Java User Group\n(c’est sur ce lien qu’il faut s’inscrire), nous nous donnons rendez-vous à\npartir de 18h30 dans les locaux de l’Epitech Toulouse, chacun avec son\nordinateur (non fourni), et on commence à jouer.\n\nEt c’est bien sûr gratuit et ouvert à tous.\n\nUn tableau trello a été initialisé\npour tenter de s’organiser un peu. La liste des choses à faire n’est pas du\ntout figée, et les idées sont les bienvenues.\n\nLes commentaires sont ouverts à tous, et l’accès sera donné à quiconque en fait\nla demande (façon communauté Jenkins :-)).\n\nGoodies !\n\nGrâce à l’aide de CloudBees, on a pas mal de goodies à offrir : stickers,\nbadges, t-shirts et bobble-heads !\n\nLes Bobble Heads Jenkins\n\nNous en avons 2 ! Et ceux-ci\nseront offerts au deux premiers participants à voir leur pull-request\nenvoyée pendant la soirée mergée .\n\nQue faire pour (se) préparer ?\n\nSi vous n’en avez pas, créez-vous un compte pour les services suivants :\n\nJenkins\n\nGitHub\n\nTrello\n\nAu niveau machine, idéalement, vous avez :\n\nGit et Maven bien installés\n\nDocker installé (natif sous Linux), ou via\nDocker Toolbox pour\nles autres OS\n\nDes informations plus précises seront normalement données très bientôt aux\ninscrits via meetup quant à la préparation des machines.\n\nQuel(s) langage(s) faut-il connaître ?\n\nIdéalement, puisque Jenkins est écrit en Java, il serait souhaitable que vous\n connaissiez au moins les bases.\n\nToutefois, même si par exemple vos compétences sont plutôt côté Web, il y aura\naussi des choses à faire, que ce soit jouer avec le\nnouveau site en préparation,\nou ajouter une page web câblée\nsur certains fichiers json des statistiques.\n\nConnaître au moins les bases de Git sera un gain de temps, mais ce n’est pas\nindispensable.\n\nRécapitulatif\n\nlocale=fr-FR\">Pour s’inscrire (indiquez Jenkins à la question posée au _RSVP)\n\nle tableau Trello dédié aux activités de la soirée (demandez l’accès !)\n\nCf. ci-dessus pour les choses à installer sur votre machine\n\nN’hésitez pas : l’ambiance est accueillante, et on offre les pizzas !","title":"Jenkins Hackergarten : mercredi 9 mars 2016 à Toulouse","tags":["hackergarten","jam","meetup"],"authors":[]}},{"node":{"date":"2016-01-04T00:00:00.000Z","id":"384f4bba-69ff-5581-81d1-4fe0ea905976","slug":"/blog/2016/01/04/jenkins-at-scale14x/","strippedHtml":"For the past few years, a couple members of the Jenkins project have made the\ntrip to Los Angeles for the\nSouthern California Linux Expo.\nDespite the name it’s a fairly broad open source technology conference and\nsince it is hosted prior to FOSDEM, it’s also a good\nconference to get us in the open source mood after the holiday break.\n\nUnlike previous years, when SCaLE was hosted at the LAX Hilton, this year it has\ngrown and moved to the\nPasadena Convention\nCenter. There, as with previous years, we’ll have a table in the expo hall with plenty of\nstickers and perhaps some other forms of swag available for devotees to\ncollect.\n\nThe expo hall will be open January 23rd and January 24th, and a few Jenkins\ncontributors will be there to ask questions to, talk about CI/CD and hand out\nstickers.\n\nAdditionally, I have a presentation on\nSaturday, January 23rd titled\n\" Continuous\nDelivery of Infrastructure with Jenkins\"\n\nTalk abstract \"\"\nIn this talk we will review continuous delivery concepts and put them into\npractice by building a continuous delivery pipeline with Jenkins to test, stage\nand deploy to infrastructure code to production. Reducing the effort, error\nrate and time it takes to deploy a configuration to change to production means\nless time fighting fires and more time doing what you want.\n\"\"\n\nDuring the talk I’ll be highlighting some of the positive, and negative,\npatterns used by the Jenkins\ninfrastructure team to manage, test and deliver the Jenkins project’s own\ninfrastructure. Sort of a followup from my\n2014 PuppetConf talk about\nmigrating Jenkins infrastructure from controllerless\nPuppet to a\nPuppet Enterprise oriented\ninstallation.\n\nIf you’re in the LA area, we hope to see you for SCaLE 14X in Pasadena!","title":"Jenkins at SCaLE 14x","tags":["meetup","jam"],"authors":[]}}]}},"pageContext":{"tag":"jam","limit":8,"skip":8,"numPages":2,"currentPage":2}},
    "staticQueryHashes": ["3649515864"]}