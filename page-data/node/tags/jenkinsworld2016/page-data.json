{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/jenkinsworld2016",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2016-10-18T00:00:00.000Z","id":"225fd884-7b63-5638-9d0e-c7a57c82002b","slug":"/blog/2016/10/18/jenkins-world-2016-videos/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nThe videos of the sessions from\nJenkins World 2016 are up!\n\nI’ve updated the wrap-up posts with links to each of the sessions mentioned:\n\nJenkins Pipeline\n\nScaling Jenkins\n\nAsk the Experts & Demos\n\nYou can also find video from all the sessions\nhere.  Enjoy!","title":"Jenkins World 2016 Session Videos","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-30T00:00:00.000Z","id":"868e7958-3c45-5b27-8d18-435c005e0771","slug":"/blog/2016/09/30/jenkins-world-2016-wrap-up-complete/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nThis year’s Jenkins World conference\nwas a huge milestone for the Jenkins project - the first global event for the Jenkins community.\nIt brought users and contributors together to exchange ideas on the current state\nof the project, celebrate accomplishments of the past year, and look ahead at all the exiting enhancements\ncoming down the pipe(line).\n\nContributor Summit\n\nTo kick off Jenkins World, we had a full day \"Contributor Summit\".\nJenkins is a distributed project with contributors from all over the globe.\nConferences like this are perfect time to get contributors together face-to-face,\nto talk through current issues and upcoming plans for the the project.\nSome key topics discussed during this summit were:\n\nInfrastructure - In the past year, the Jenkins project has moved new domain name,\na statically generated website, and has entered a\npartnership with Microsoft\nto host to host infrastructure on Azure.\n\nEvents - A year ago, there were five\nJenkins Area Meetups, today there are 37 around the\nworld, with ~7000 members.\n\nSecurity - Daniel Beck has done a great job a \"Security Officer\" for the project over the last year.\nJenkins 2 includes tighter security out of the box, 9 security alerts have been addressed, and the\nSecurity Team is continuing to evaluate threats as they are reported.\n\nPipeline - Pipeline has been a success and there many improvements on the way, including better\nPipeline Library support, a UI-based Pipeline Editor, and Declarative Pipeline syntax.\n\nBlue Ocean - Blue Ocean announced their \"1.0 Beta\" release and discussed their roadmap.\n\nStorage Pluggability - One of the big upcoming goals is reducing Jenkins'\ndependence on local file system storage on the server system\n(job configuration, build logs, etc.).  There was extensive\ndiscussion of how to accomplish this goal.\n\nKeynote: The State of Jenkins 2016\n\nThe next day,\nKohsuke gave a great\nkeynote,\nshowing how far the project as come this year and where it is headed.\nYou can get the slides\nhere\nor see the full video below.\n\nWhat’s Next?\n\nOverall, Jenkins World was a very enjoyable event. I’m sure everyone came away having\nlearned a lot and made many new connections.  I know I’m excited to see\nwhat the coming year brings for Jenkins and the Jenkins community.\n\nDon’t forget that there are many ways to continue\nto build connections to the rest of the Jenkins community throughout the year, such as the\nJenkins Online Meetup which\nhosts online events year-round.  Or, see if there is a\nJenkins Area Meetup (JAM) near you.  If\nthere isn’t, take a look at the\nJenkins Area Meetup page to see about starting one.\n\nThanks, and I hope to see you all and Jenkins World 2017!","title":"Jenkins World 2016, That's a Wrap!","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-29T00:00:00.000Z","id":"e21157bd-374b-5814-a345-a0163473ab62","slug":"/blog/2016/09/29/jenkins-world-2016-wrap-up-experts-demos/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nAs I mentioned in my\nprevious post,\nJenkins World brought together\nJenkins users from organizations of all sizes.  It also brought together Jenkins\nusers of all skill levels; from beginners to experts (including to JAM\norganizers, board members, and long time contributors).  A number\nof those experts also volunteered to staff the Open Source Hub’s\n\"Ask the Experts\" desk throughout the conference to answer Jenkins questions.\nThis included, but was not limited to:\nPaul Allen,\nR Tyler Croy,\nJames Dumay,\nJesse Glick,\nEddú Meléndez Gonzales,\nJon Hermansen,\nOwen Mehegan,\nOleg Nenashev,\nLiam Newman,\nChristopher Orr,\nCasey Vega,\nMark Waite,\nDean Yu,\nand\nKeith Zantow.\n\nI actually chose to spend the majority of my time at the booth. It was\nfantastic to hear all the different ways people are using\nJenkins and wanting use Jenkins to do even more. I answered dozens of questions\non both days of the conference, often learning new things in the process of answering them.\nAnd for questions that were beyond any one person’s knowledge, there was such a\nbreadth of expertise, very few questions were beyond our combined abilities.\n\nWhile \"Ask the Experts\" saw a lot traffic, the Open Source Hub’s lunch-time demos drew\nreally big crowds. They covered wide range of subjects in a quick succession and offered people\na chance to be introduced to new areas of in Jenkins without spending a whole session on them.\nSome demos were only presented at lunch while others were abbreviated versions of\nlonger talks presented at other times during the conference.  Here’s the full list with related links:\n\nKeith Zantow gave a live demo of\nBlue Ocean in Action on their\nlive Jenkins instance.\n\nChristopher Orr presented a lightning version of his talk\nPipelines for building and deploying Android apps\n( Slides)\n( video).\n\nOleg Nenashev showed a different way to\nmanage security with the\nOwnership plugin for Jenkins\n( Slides).\n\nAlex Somai presented his\nGoogle Summer of Code (GSoC) 2016 project, the\nExternal Workspace Manager plugin for Jenkins Pipeline ( GSOC Video).\n\nMark Waite discussed\nGit plugin - large repos, submodule authentication and more\n( Slides).\n\nLiam Newman gave a live demo of\nNotifications with Jenkins Pipeline\n(based on this blog post).\n\nJesse Glick talked about\nExtending Pipeline with Libraries using the\nPipeline Shared Groovy Libraries Plugin\n\nJon Hermansen demonstrated some cool ways to use\nMultibranch Pipelines + Git symbolic-ref to optimize build times.\n\nR Tyler Croy showed the power of\nDocker and Pipeline\n( Slides)\n\nR Tyler Croy also showed how easy it can be to migrate from\nFreestyle to Pipeline\n( Slides)\n\nCasey Vega gave a live demo,\npackage.json and Jenkins, on using package.json to control all aspects of Jenkins builds.\n\nAndrew Bayer presented at lightning version of his talk,\nA simpler way to define Jenkins Pipelines\n( Slides)\n( Video).\n\nThank you to everyone who staffed the booth and gave demos.\n\nAlso, thanks to everyone who attended the demos and came by to ask questions.\nIf you have more questions, you don’t have to wait until next year’s Jenkins World.\nJoin the\njenkinsci-users mailing list or the\n#jenkins IRC channel to\nget help from experts around the world.\n\nAnd finally, a special thanks to the Jenkins Events officer, Alyssa Tong,\nfor getting the entire booth designed, prepared, and keeping everything\non track before, during, and after the conference.","title":"Jenkins World 2016 Wrap-up - Ask the Experts & Demos","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-27T00:00:00.000Z","id":"e7da6d48-fbaf-5549-9581-1b1cb3ddf4f6","slug":"/blog/2016/09/27/jenkins-world-2016-wrap-up-scaling/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nOne of the great features of Jenkins is how far it\ncan scale, not only from a software perspective, but also from an\norganizational one.  From a single Jenkins controller with one or two agents to a\nmultiple controller with thousands of agents, from a team of only a few people\nto a whole company with multiple disparate departments and organizations,\nyou’ll find space where Jenkins is used.\n\nLike any software or organization,\nthere are common challenges for increasing scale with Jenkins and some common best practices, but\nthere are also some unique solutions.  A big conference like\nJenkins World brings users\nfrom all scales together to see how people in other organizations at similar or\ngreater scale are solving similar problems.\n\nHere’s a recap of the some of the sessions on scaling Jenkins,\nwith links to slides and videos shared by CloudBees :\n\nPaul Miles and\nGrant Dickie of\nNPR talked about\nJenkinsOps: An Initiative to Streamline and Automate Jenkins .\nThey shared ways their team has used Jenkins to automate many of the\nadministrative tasks related to managing feature code branches,\nhandling deployments, running tests, and properly configuring their environments.\nThey also showed code samples and talked about future challenges in their quest\nto achieve\ncontinuous deployment.\n\nDownload Presentation\n\nStream Presentation\n\nMaxfield F Stewart of\nRiot Games showed how they built an\nintegrated Docker solution using Jenkins in\nThinking Inside the Container: A Continuous Delivery Story\nHe showed how their system allows engineers around the company to\nsubmit Docker images as build environments.\nThis has let their containerized farm now create over 10,000 containers per week\nand handles nearly 1,000 jobs at a rate of about 100 jobs per hour.\nAnd they have done this using readily available, open\nsource Jenkins plugins. He also talked about how they settled on this design,\nlessons learned, best practices, and how to build and scale other similar system.\n\nDownload Presentation\n\nStream Presentation\n\nHow to Do Continuous Delivery with Jenkins Pipeline, Docker and Kubernetes ,\npresented by\nJames Strachan of\nRed Hat, showed how to use Jenkins Pipeline with\nDocker and Kubernetes to implement a complete end-to-end continuous delivery and\ncontinuous improvement system using open source software for both microservices\nand monolithic applications. He demonstrated how to\ncreate or import projects, and have them automatically build, run\nsystem and integration tests, stage, and finally deploy. He also showed to\nmanage and update those deployed applications using continuous\ndelivery practices.\n\nDownload Presentation\n\nWatch the Video Demo from the Presentation\n\nCarlos Sanchez of\nCloudBees discussed\nScaling Jenkins with Docker: Swarm, Kubernetes or Mesos?\nHe compared various Docker Swarm, Apache Mesos, and Kubernetes in terms of their\nability to dynamically scale in Jenkins by running jobs inside containers.\nHe also discussed the pros and cons, best practices, level of Jenkins support for each\nof these technologies.\n\nDownload Presentation\n\nStream Presentation\n\nStephen Connolly of\nCloudBees asked\n\" So, You Want to Build the World’s Biggest Jenkins Cluster? \"\nand explained how to do so.  He started with\nreal world results realized by Jenkins users who have built large clusters.\nNext, he showed experiments around scaling some individual sub-components of Jenkins in\nisolation to see what challenges have been faced when integrated. Finally,\nhe arrived at recipes for building Jenkins clusters with different scaling capabilities and\nmaking existing Jenkins clusters more efficient.\n\nDownload Presentation\n\nStream Presentation\n\nBill Houston and\nAli Raza of\nSplunk\ngave a talk in two parts,\nJenkins at Splunk and Splunking Jenkins\nIn the first part, Bill showed how Splunk uses Jenkins to implement their end-to-end CI system.\nThey discussed features and design goals, challenges they encountered, and how they addressed\nthese challenges.\nIn the second part, Ali showed how to use the Jenkins Splunk plugin.  Using plugin, he gathered\ntest results and Jenkins environment data, and delivered it to a Splunk indexer for analysis and presentation.\n\nDownload Presentation\n\nStream Presentation\n\nDavid Hoover of\nGoogle talked about\nJenkins inside Google .\nLast year, they\npresented\ntheir initial investigations and stress testing as they\nprepared to deploy a large-scale Jenkins installation at Google. Now, with a\nyear of real-world use under their belts, they returned to present on how their\nexpectations held up, what new issues they encountered, how they have addressed those issues, and\nthe challenges and opportunities they see ahead.\n\nDownload Presentation\n\nStream Presentation","title":"Jenkins World 2016 Wrap-up - Scaling","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-24T00:00:00.000Z","id":"1f3da69f-0fed-5d62-bb32-d769047f8abb","slug":"/blog/2016/09/24/jenkins-world-2016-wrap-up-pipeline/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nAs someone who has managed Jenkins for years and manually managed jobs, I think\npipeline is fantastic. I spent much of the conference manning the\nAsk the Experts desk of the\n\"Open Source Hub\" and was glad to find I was not alone in that sentiment.\nThe questions were not \"Why should I use Pipeline?\", but \"How do I do this in Pipeline?\"\n\nEveryone was interested in showing what they have been able to accomplish,\nlearning about best practices, and seeing what new features were on the horizon.\nThe sessions and demos on Pipeline that\nI saw were all well attended, but no one could have seen all of them.\n\nHere’s a recap of the some of the sessions on Jenkins Pipeline,\nwith links to slides and videos shared by CloudBees :\n\nJesse Glick discussed the past, present, and future of Jenkins Pipeline in\nDirections for Pipeline .\nHe reviewed a broad range of improvements made to Pipeline over the last year, including\nsyntax, documentation, plugin support, and stability.  He reviewed the changes\ncurrently underway.  He also pointed out that many of the improvements have been\ndriven by user feedback and invited everyone to continue to participate in making\npipeline even better.\n\nDownload Presentation\n\nStream Presentation\n\nIn\nPipelining DevOps with Jenkins and AWS ,\nJimmy Ray\nof\nnextSource showed how Pipeline can be used to automate CI/CD build processes,\nand how to integrate Jenkins and Pipeline with AWS.\nHe also discussed some admin-level considerations,\nsuch as how to install Jenkins on EC2\nand the merits of \"LTS\" and \"latest build\".\n\nDownload Presentation\n\nStream Presentation\n\nChristopher Orr examined how to create\n\" Continuous Build and Delivery Pipelines for Android \"\napplications.\nHe showed how to set up Android-capable build agents, ensure traceable application releases,\nreporting warnings, run various types of tests, and deploy and app to Google Play.\nThis included live demonstrations and discussion of best practices.\n\nDownload Presentation\n\nStream Presentation\n\nAndrew Bayer presented\nA New Way to Define Jenkins Pipelines .\nHe showed the next evolution for Pipeline, based on a simpler declarative model.\nThis declarative syntax for Pipeline still supports the creation of complex pipelines,\nincluding complete build environments, post-build actions, and notifications, while\nalso being easier to understand. This declarative syntax also makes in it easier to\nimplement other interesting scenarios such as early validation of pipelines and\na visual pipeline editor.\n\nDownload Presentation\n\nStream Presentation\n\nIn\nPerfecting Your Development Tools: Updates to the Helix Plugin for Jenkins ,\nPaul Allen of\nPerforce walked through using Perforce’s \"Monorepo\" model with Jenkins Pipeline.\nHe explained in detail how to work with the Perforce\"P4\" plugin in Jenkins,\nincluding credential passing and workspace management.\nOf particular interest was his side-by-side comparison the various actions done with the Jenkins UI vs Pipeline.\n\nDownload Presentation\n\nSam Van Oort\ndemonstrated strategies for faster pipelines in\nThe Need For Speed: Building Pipelines To Be Faster .\nHe discussed various elements that contribute to making pipelines faster or slower,\nsuch a number of resources and latency.  He then showed several best practices\nfor constructing pipelines that have lower turnaround times and reduced resource use.\nHe also reviewed plugins and tools that can help analyze and visualize pipeline\nperformance, including the Pipeline Stage View plugin and Blue Ocean.\n\nDownload Presentation\n\nStream Presentation\n\nBobby Sandell and\nJames T. Nord talked about what not to do with Pipeline in\nNo, You Shouldn’t Do That! Lessons from Using Pipeline .\nThey told the story of their own experiences as early adopters of\nJenkins Pipeline at CloudBees. They described a number of key scenarios they attempted\nto address, detailed various mistakes and false starts, and finally share what\nthey learned in each case.\n\nDownload Presentation\n\nStream Presentation\n\nAlexandru Somai gave a\nlightning talk on his\nGoogle Summer of Code (GSoC) 2016 project,\n\" External Workspace Manager Plugin for Jenkins Pipeline\".\nThe build workspace for Jenkins projects may become very large.\nAlex showed how the External Workspace Manager plugin addresses this issue,\nadding support for managing and reusing the same workspace between multiple pipeline builds.\n\nA recording of his presentation for GSOC is available\nhere.\n\nHow to Do Continuous Delivery with Jenkins Pipeline, Docker and Kubernetes ,\npresented by\nJames Strachan of\nRed Hat, showed how to use Jenkins Pipeline with\nDocker and Kubernetes to implement a complete end-to-end continuous delivery and\ncontinuous improvement system using open source software for both microservices\nand monolithic applications. He demonstrated how to\ncreate or import projects, and have them automatically build, run\nsystem and integration tests, stage, and finally deploy. He also showed to\nmanage and update those deployed applications using continuous\ndelivery practices.\n\nDownload Presentation\n\nStream Demo Video","title":"Jenkins World 2016 Wrap-up - Pipeline","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-21T00:00:00.000Z","id":"00f2fadc-e637-58e5-9db3-eb9874add2cf","slug":"/blog/2016/09/21/jenkins-world-2016-wrap-up/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nThat’s a Wrap!\n\nAny way you look at it, last week’s Jenkins World Conference 2016 was a huge success.\n\nIn 2011, a few hundred users gathered in San Francisco for the first \"Jenkins User Conference\".\nOver successive years, this grew into several yearly regional Jenkins user conferences.\nThis year, over 1,300 people came from around the world to \"Jenkins World 2016\",\nthe first global event for the Jenkins community.\n\nThis year’s Jenkins World conference included:\n\nKeynote presentation by Jenkins creator, Kohsuke Kawaguchi, announcing a number of great new Jenkins project features, such as \"Blue Ocean\".\n\nMore than 50 sessions on everything from the new \"Blue Ocean\" UI, to \"Continuous Security\" to \"Dockerizing Jenkins\".\n\nJenkins Open-source Hub, with \"Ask the Experts\" and demos by 20+ Jenkins contributors.\n\nBooths from 30+ sponsors.\n\nStickers!\n\nOver the next week, I’ll be posting highlights from the event,\nincluding slides, videos, and links to other useful resources.  Stay tuned!","title":"Jenkins World 2016 Wrap-up - Introduction","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/author/lnewman","twitter":"bitwiseman"}]}},{"node":{"date":"2016-09-19T00:00:00.000Z","id":"9f1352d7-4bb9-5af7-a7b7-3dab3d29a690","slug":"/blog/2016/09/19/blueocean-beta-declarative-pipeline-pipeline-editor/","strippedHtml":"At Jenkins World on Wednesday 14th of September, the Jenkins project was happy to\nintroduce the beta release of Blue Ocean. Blue Ocean is the new user experience\nfor Jenkins, built from the ground up to take advantage of Jenkins Pipeline.\nIt is an entire rethink of the the way that modern developers will use Jenkins.\n\nBlue Ocean is available today via the Jenkins Update Center for Jenkins users\nrunning 2.7.1 and above.\n\nGet the beta\n\nJust search for BlueOcean beta in the Update Center, install it,\nbrowse to the dashboard, and then click the Try BlueOcean UI button on the dashboard.\n\nWhats included?\n\nBack in April we open sourced Blue Ocean\nand shared our vision with the community. We’re very happy that all the things we showed you then have\nshipped in the beta (software projects run on time?!).\n\nFor a refresher on Blue Ocean, watch this short video:\n\nDeclarative Pipeline\n\nWe have heard from the community about the usability of Jenkins\nPipeline. Much of the feedback we received was to a desire to\nconfigure Pipelines rather than script them, and to make it easy for beginners\nto get started with their first Pipeline.\n\nThis is how Declarative Pipeline was born. We’ve introduced a new method whereby\nyou declare how you want your Pipeline to look rather than using Pipeline Script\n - it’s configuration rather than code.\n\nHere’s a small example of a Declarative Pipeline for nodejs that runs the whole\nPipeline inside a Docker container:\n\n// Declarative //\npipeline {\n  agent docker:'node:6.3'\n  stages {\n    stage('build') {\n      sh 'npm --version'\n      sh 'npm install'\n    }\n    stage ('test') {\n      sh 'npm test'\n    }\n  }\n}\n\n// Script //\nnode('docker') {\n  docker.image('node:6.3').inside {\n    stage('build') {\n      sh 'npm --version'\n      sh 'npm install'\n    }\n\n    stage('test') {\n      sh 'npm test'\n    }\n  }\n}\n\nDocker support in Declarative Pipeline allows you to version your application code,\nJenkins Pipeline configuration, and the environment where your pipeline will run,\nall in a single repository. It’s a crazy powerful combination.\n\nDeclarative Pipeline introduces the postBuild section that makes it\neasy to run things conditionally at the end of your Pipeline without the\ncomplexity of the try…​ catch of Pipeline script.\n\n// Declarative //\npostBuild {\n  always {\n    sh 'echo \"This will always run\"'\n  }\n  success {\n    sh 'echo \"This will run only if successful\"'\n  }\n  failure {\n    sh 'echo \"This will run only if failed\"'\n  }\n  unstable {\n    sh 'echo \"This will run only if the run was marked as unstable\"'\n  }\n  changed {\n    sh 'echo \"This will run only if the state of the Pipeline has changed\"'\n    sh 'echo \"For example, the Pipeline was previously failing but is now successful\"'\n    sh 'echo \"... or the other way around :)\"'\n  }\n}\n\n\n// Script //\nnode('docker') {\n  try {\n    stage('build') {\n      /* .. snip .. */\n    }\n    stage('test') {\n      /* .. snip .. */\n    }\n\n    sh 'echo \"This will run only if successful\"'\n  }\n  catch (exc) {\n    if (currentBuild.result == 'UNSTABLE') {\n      sh 'echo \"This will run only if the run was marked as unstable\"'\n    }\n    if (currentBuild.result == 'FAILURE') {\n      sh 'echo \"This will run only if failed\"'\n    }\n  }\n  finally {\n    sh 'echo \"This will always run\"'\n  }\n}\n\nAnd there is so much more!\n\nIf you have the Blue Ocean beta installed you already have Declarative Pipeline.\nWhile Declarative Pipeline is still alpha at the moment, we do encourage you to\nfollow our getting started guide,\n give us feedback on the Jenkins Users mailing list\nor file bugs against the 'pipeline-model-definition' component in JIRA.\n\nIntroducing the Pipeline Editor\n\nThe Pipeline Editor is a graphical user interface that gives Jenkins users the\nsimplest way yet to get started with creating Pipelines in Jenkins. It will also\nsave a lot of time for intermediate and advanced Jenkins users as a way to author\nPipelines.\n\nWhen you build your Pipeline in the Editor and click the save button, the editor\nwill commit a new Jenkinsfile back to your repository in the form of the new\nDeclarative Pipeline. When you want to edit again, Jenkins will read it from\nyour repository exactly how you saw it previously.\n\nThe Pipeline Editor is a work in progress and should arrive in a beta release soon.\n\nThank you\n\nThanks for reading our news from Jenkins World and be sure to check the blog\nfor regular updates!\n\nI’d also like to thank our amazing community for their feedback and support\nas we change the way software teams around the world use Jenkins. We couldn’t\ndo this without you.","title":"Announcing the Blue Ocean beta, Declarative Pipeline and Pipeline Editor","tags":["blueocean","ux","pipeline","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":null,"blog":null,"github":"i386","html":"","id":"i386","irc":null,"linkedin":null,"name":"James Dumay","slug":"/blog/author/i386","twitter":"i386"}]}},{"node":{"date":"2016-09-08T00:00:00.000Z","id":"51fd82b2-e6d8-562f-a3a7-329013385e5a","slug":"/blog/2016/09/08/continuous-delivery-of-infra/","strippedHtml":"This is a guest post by Jenkins World speaker\nR Tyler Croy, infrastructure maintainer for the\nJenkins project.\n\nI don’t think I have ever met a tools, infrastructure, or operations team that\ndid not have a ton of work to do. The Jenkins project’s\ninfrastructure\"team\" is no different; too much work, not enough time. In lieu of hiring more\npeople, which isn’t always an option, I have found heavy automation and\ncontinuous delivery pipelines to be two solutions within reach of the\nover-worked infrastructure team.\n\nAs a big believer in the concept of \"Infrastructure as Code\", I have been,\nslowly but surely, moving the project’s infrastructure from manual tasks to\ncode, whether implemented in our\nPuppet code-base,\nDocker containers,\nor even as\nmachine specifications\nwith\nPacker.\nThe more of our infrastructure that is code, the more we can apply continuous\ndelivery practices to consistently and reliably build, test and deliver our\ninfrastructure.\n\nThis approach integrates nicely with\nJenkins Pipeline,\nallowing us to also define our continuous delivery pipelines themselves as\ncode. For example, by sanity-checking our BIND zone files:\n\nJenkinsfile\n\nnode('docker') {\n    def dockerImage = 'rtyler/jenkins-infra-builder'\n\n    checkout scm\n    docker.image(dockerImage).inside {\n        sh \"/usr/sbin/named-checkzone jenkins-ci.org dist/profile/files/bind/jenkins-ci.org.zone\"\n        sh \"/usr/sbin/named-checkzone jenkins.io dist/profile/files/bind/jenkins.io.zone\"\n    }\n}\n\nOr delivering our Docker containers automatically to\nDocker Hub, with a Jenkinsfile such as:\n\nJenkinsfile\n\nnode('docker') {\n    checkout scm\n\n    /* Get our abbreviated SHA-1 to uniquely identify this build */\n    def shortCommit = sh(script: 'git rev-parse HEAD', returnStdout: true).take(6)\n\n    stage 'Build ircbot' {\n        withEnv([\"JAVA_HOME=${tool 'jdk8'}\", \"PATH+MVN=${tool 'mvn'}/bin\"]) }\n            sh 'make bot'\n        }\n    }\n\n    def whale\n    stage 'Build container' {\n        whale = docker.build(\"jenkinsciinfra/ircbot:build${shortCommit}\")\n    }\n\n    stage 'Deploy container' {\n        /* Push to Docker Hub */\n        whale.push()\n    }\n}\n\nIn\nmy talk at Jenkins World\n(September 14th, 3:00 - 3:45pm in Exhibit Hall A-1) I will discuss these\nJenkinsfiles along with some of the strategies, patterns and code used with the\nJenkins project’s\nopen source\ninfrastructure to get the most out of the team’s limited time.\n\nR Tyler will be\npresenting\nmore about continous delivery of infrastructure at\nJenkins World\nin September.  Register with the code JWFOSS for 20% off your full conference\npass.","title":"Continuous Delivery of Infrastructure with Jenkins","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}}]}},"pageContext":{"tag":"jenkinsworld2016","limit":8,"skip":0,"numPages":3,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}