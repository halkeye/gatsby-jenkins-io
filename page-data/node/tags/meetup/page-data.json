{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/meetup",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2017-03-21T00:00:00.000Z","id":"5bf5cbad-49a8-533f-b9db-60dff41a2193","slug":"/blog/2017/03/21/toulousejam-pipeline-workshop/","strippedHtml":"Earlier this month, a full-day event about Jenkins Pipeline was organized in Toulouse, France with the Toulouse JAM.\n\nAfter a warm-up on the previous Tuesday where Michaël Pailloncy had given a talk at the local Toulouse Devops user group about Jenkins Pipeline ecosystem, we were ready for more digging :-).\n\nThe agenda\n\nWe had planned the day in two parts:\n\nMorning would be a more driven workshop with slides & exercises to be completed\n\nPizzas & beverages to split the day :-)\n\nAfternoon would be somehow like an Unconference, where people basically decide by themselves what they want to work on.\n\nWe planned to have 30 attendees. We ended up having 25.\nWe considered having more people, but finally decided that for a first time it would be better to start not too big.\n\nInfrastructure\n\nInfrastructure was sponsored by DigitalOcean.\n\nFor each attendee, we provisioned :\n\nOne Controller, preconfigured to be able to dynamically provision agents.\n\nOne staging environment\n\nOne production environment\n[ 1 ]\n\nOne SonarQube instance\n\nWorkshop content & infrastructure\n\nAfter an initial quick presentation to settle context and remind some general things about Continuous Delivery and Jenkins, we started the workshop per se.\n\nIt is composed of 3 parts, which are readable here [ 2 ], but very few people were able to start the part 3.\n\nHackergarten / Unconference\n\nSo we let people decide what they wanted to work on during the afternoon.\n\nWe decided to use post-its: each attendee would write down what they wanted to work on, one idea per post-it (max 2 per person).\nThen, we dropped those onto a white-board and tried grouping those by theme.\n\nIn the end, overall, the following themes went out:\n\nHack on Jenkins development & Contribute to Jenkins\n\nComplete the workshops\n\nWork on use-case oriented things\n\nWork on Docker & Pipeline join usages\n\nHackergarten\n\nMany Jenkins accounts were created, and many JIRA and pull requests were filed.\nIt was nice to see people asking questions like: \"so, should I create a JIRA issue for this?\" or \"how do I interact with people\".\nPretty generic \"how do I work on open source software\" questions sometimes, but important because you felt like people were genuinely interested and needed not much to start contributing.\n\nHere are the pull requests filed during this afternoon:\n\nblueocean-pipeline-editor-plugin#30\n\njenkins#2785\n\njenkins#2786\n\njenkins#2787\n\njenkins#2788\n\nYou can see that though most of the PRs were typo-related, the one that got merged first was the one about code :-).\n\nSo, Jeremie Violas wins the Bobble Head as promised!\n\nWhy so many typo-related PRs?\n\nSimply because people were somehow encouraged to find some to get used to the\nround trip of: fixing an issue and filing the associated pull request, rinse &\nrepeat.\n\nI do think this is also a pretty nice and simple first step to understand how\nto build Jenkins and start interacting with the community.\n\nThe result\n\nPeople seemed pretty happy and we got some nice comments like \"now I have a clearer vision of what this Pipeline thing is about\".\nSome attendees also dropped nice comments on the meetup page.\nSo it’s cool because when you’re doing such things on your free time, it’s the main reward you can get.\n\nIf you’re an attendee to such events, don’t forget to thank people organizing\nthose, and more importantly to provide constructive feedback.  We are generally\neager to know what could be done better for next time.\n\nConclusion\n\nOverall we are very happy with the energy of that day, and we definitely plan to set up a new session in the next few months, probably with a bit more people.\n\nSome thoughts:\n\nInfrastructure: when you plan to have many VM per attendee, double-check the limits your Cloud Provider may have by default. I had bumped it to 250 the day before the workshop, and asked for another one to 500 during the workshop (though in the end, 250 was probably enough, but this’ll give room for the next time with more people :-)).\n\nLogistics: warning, secret ahead: this is very time consuming.\nNot necessarily the amount of work itself, more that it implies very big latency.\nFor instance, give it 2 to 3 weeks minimum to have answers about sponsoring in general. Pinging again in case of no answer after 2 days would probably be seen as rude, and possibly lead to make things worse for obvious reasons, so plan ahead.\n\nThank you\n\nDigitalOcean for sponsoring the Infrastructure\n\nWe got way more than 100 VMs running at the same time during the day thanks to their help!\n\nHarryCow Coworking for hosting the event\n\nTo CloudBees for sponsoring the food for all the participants\n\nAlso for providing a bunch of goodies: stickers and T-Shirts for everybody\n\nGitHub for providing stickers\n\n1. For the sake of the simplicity of the workshop, those environments were actually a single VM: the goal was here to illustrate what we could do using Jenkins Pipeline, discussing scalability or more involved deployment techniques was obviously out of scope.\n\n2. in French only for now, but translating it into English to make it possibly shared and reusable among JAMs is being discussed","title":"Pipeline Workshop & Hackergarten @ ToulouseJAM Feedback","tags":["hackergarten","jam","meetup","feedback"],"authors":[]}},{"node":{"date":"2016-12-10T00:00:00.000Z","id":"f232c003-357c-5a76-9845-ebc3bcb77896","slug":"/blog/2016/12/10/monthly-jam-recap-november/","strippedHtml":"As we near the end of the year, the number of November JAMs show that the\nJenkins community isn’t slowing down for holiday season. We had a number of\nexcellent events hosted around the world this November with plenty of great\nstories and presentations shared by the various members of the world-wide\nJenkins community.\n\nMelbourne, Australia JAM\n\nMelbourne JAM leaders,\nRaisa\nand\nBhuva\nhosted Blue Ocean for the inaugural meeting. Attendees learned the values of\nBlue Ocean, a project that rethinks the user experience of Jenkins, modeling\nand presenting the process of software delivery by surfacing information that\nis important to development teams with as few clicks as possible, while still\nstaying true to the extensibility that Jenkins always has had as a core value.\nThank you James Dumay for stopping by to take part in\nthe inauguration.\n\nSingapore, Singapore JAM\n\nOne of the members  who had several years of experience using Jenkins (since\nHudson days in fact) to present some basics on Continuous Integration with\nGitHub. It was targeted at new members who are starting out with Jenkins. We\nunderstand that we cannot always serve advanced topics to cater to the\nexperienced users and neglect the newbies so this session was targeted to help\ngive new users an introduction to Jenkins. It went well with about 15-20\nattendees and we hope to run some hands-on workshops in 2017. Some members were\nlooking forward to freebies like stickers and T-shirts too!\n\nMoscow, Russia JAM\n\nMoscow JAM leaders,\nKirill Tolkachev\nand\nOleg Nenashev\nled the inaugural meeting with\na packed full agenda. Oleg began the meeting with an update on Jenkins 2 what improvements users can expect and what\nenhancements are in the works within the Jenkins project. Following Oleg, Kirill shared\nhow his team in Alfa Laboratory used Jenkins to improve CD/DevOps in their\nprojects (with Jenkins Pipeline, Job DSL and\nBlue Ocean), the problems they experienced and how they fixed them. Then Oleg talked\nabout Jenkins Pipeline internals, main features and recent changes in the\necosystem. It was followed up by a discussion of large-scale Jenkins instances\nat the after-party.\n\nThe recording of the event can be found\non YouTube.\n\nMilan, Italy JAM\n\nThe first meetup was a great opportunity to meet local Jenkins fans to learn\nand share Jenkins experiences at a local cafe.\n\nSan Francisco, California JAM\n\nR. Tyler Croy\nperformed a 30 minutes live Pipeline coding demo to a relatively novice\naudience (though all had used Jenkins). A good amount of questions from the\naudience  which conveyed an appetite for the content being presented.\nRyan Wallner,\npresenter from ClusterHQ, also gave a demo based around Pipeline talking about\nClusterHQ’s \"Fli\" integration with a delivery pipeline.\n\nWashington, DC JAM\n\nThere was a fantastic 90% showup rate at this month’s meetup - 58 RSVPs and 52\nin attendance was pretty impressive. All this may be due to Fannie Mae’s story\n- the success of how they used Jenkins for CI/CD as part of their DevOps\nadoption. Afterwards, there was a lot of interests and further discussions\ntaking place. Next month’s host will be Freddie Mac.\n\nSeattle, Washington JAM\n\nLong time Jenkins community member and Seattle JAM leader,\nKhai Do showed how OpenStack uses \"Jenkins Job\nBuilder\" to manage and run thousands of Jenkins jobs per day in their\nmulti-controller CI/CD system.  He also compared\nJenkins Job Builder\nwith other Jenkins \"Infrastructure-as-code\" technologies - Jenkins Pipeline and\nJenkins JobDSL. It was followed by an in-depth Q&A and discussion session.\n\nDallas/Forth Worth, Texas (DFW) JAM\n\nThe November DFW JAM was the most strongly attended of the year! DFW JAM leader,\nEric Smalling discussed the benefits of\ndynamic build agents and demonstrated various ways to implement them such as\nthe EC2 and Docker plugins. There was a lot of interest and discussion,\nespecially around Docker and the ability it provides to have ephemeral agents\nwith very little provisioning time.\n\nThe recording can be downloaded from\nGooel Drive.\n\nLinks\n\nStart a JAM in your city if there isn’t one already.\n\nBecome a JAM member.\n\nBecome an online JAM member\n\nBe a JAM speaker or sponsor. Let us know jenkinsci-jam@googlegroups.com\n\nBecome a Jenkins project contributor","title":"Monthly JAM Recap - November 2016","tags":["event","jam","meetup"],"authors":[]}},{"node":{"date":"2016-11-11T00:00:00.000Z","id":"d2259d49-39ab-5a56-8c40-0a3cf8acbdc4","slug":"/blog/2016/11/11/monthly-jam-recap-october/","strippedHtml":"October has proven to be a busy month within the Jenkins Area Meetup groups.\nBelow is a recap of topics discussed at various JAMS in the month of October.\n\nDallas Forth Worth, Texas (DFW) JAM\n\nJames Dumay\ntook time out of his vacation to present Blue Ocean, a project that rethinks\nthe user experience of Jenkins, modeling and presenting the process of software\ndelivery by surfacing information that is important to development teams with\nas few clicks as possible, while still staying true to the extensibility that\nJenkins always has had as a core value.\n\nSee recording HERE.\n\nSan Francisco, CA JAM\n\nAndrey Falko from Salesforce shared how he and his Diagnostics team used\nJenkins to deliver software securely and reliably to production within\nSalesforce.\n\nSee videos HERE and\nHERE.\n\nBoulder, CO JAM\n\nThis was a meetup with CA Technologies and included\nMark Waite, maintainer of the Jenkins git plugin\nand a director at CA Technologies in Fort Collins.\nTyler did a great presentation about Jenkins\nPipeline and Blue Ocean and showed off how the community is using Blue Ocean to\nbuild Jenkins.\n\nBarcelona, Spain JAM\n\nAt this meetup, there were plenty of engaging discussions surrounding the\nJenkins Certification and DevOps 2.1 Toolkit: Continuous Deployment with\nJenkins and Docker Swarm.  Guillem Sola shared his Jenkins certification\nexperience HERE while Viktor\nFarcic presented his thoughts on the aspects of building, testing, deploying,\nand monitoring services inside Docker Swarm clusters and Jenkins\nhttps://www.youtube.com/watch?v=fs1ED_y5mUc.\n\nLima, Peru JAM\n\nOctober’s meetup was a joint effort with collaboration from Perú JUG, and\nDocker Lima. The first talk was an Introduction to\nDocker Ecosystem, second was\nBuilding and Testing Apps with Docker and\nArquillian Cube\nand the last one was\nCI/CD using Docker and Jenkins Pipelines.\n\nWe had a full house at the meetup. Now, everyone in the room has a Mr. Jenkins\nbranded on their laptop :)\n\nSpecial thanks to Mario Inga and\nHéctor Paz for their collaborations during the\nlast meetups.\n\nLinks\n\nStart a JAM in your city if there isn’t one already.\n\nBecome a JAM member.\n\nBecome an online JAM member\n\nBe a JAM speaker or sponsor. Let us know jenkinsci-jam@googlegroups.com\n\nBecome a Jenkins project contributor","title":"Monthly JAM Recap - October 2016","tags":["event","JAM","meetup"],"authors":[]}},{"node":{"date":"2016-09-20T00:00:00.000Z","id":"2af55d7f-59c7-5a3f-b9bb-07c4e85c5df6","slug":"/blog/2016/09/20/jom-plugin-development/","strippedHtml":"On September 6th we had a Jenkins Online Meetup.\nThis meetup was the second event in the series of Plugin Development meet ups.\nAt this meetup we were talking about Jenkins Web UI development.\n\nTalks\n\n1) Classic Jenkins UI framework -\nDaniel Beck\n\nIn the first part of his talk, Daniel presented how Stapler, the web framework used in Jenkins, works, and how you can add to the set of URLs handled by Jenkins.\nIn the second part he was talking about creating new views using Jelly and Groovy, and how to add new content to existing views.\n\nKeywords:\nStapler,\nJelly,\nGroovy-defined UIs\n\n2) Developing modern Jenkins UIs with Javascript -\nTom Fennelly\n\nFeel that Jenkins UI is a bit old? You are not alone.\nIn addition to the old stack Jenkins offers a framework for writing UI components in Javascript with help of Node.js.\nTom presented this new engine, which is being used in new Jenkins Web UI components like Jenkins installation wizard.\nHe also provided several examples from the BlueOcean project he is working on.\n\nKeywords:\nNode.js,\nReactJS,\nJenkins JS Builder,\nJenkins Design Language,\nBlue Ocean\n\nLinks\n\nMeetup page\n\nEvent page: Plugin Development. Web UI\n\nWebinar recording\n\nWant to conduct a meetup?\n\nWe are looking for speakers, who would be interested to share their experience about Jenkins best-practices, war stories and plugin development.\n\nIf you are interested to conduct a presentation,\nplease contact meetup organizers using meetup.com “contact organizers” feature\nor via the events@lists.jenkins-ci.org mailing list.","title":"Jenkins Online Meetup report. Plugin Development - WebUI","tags":["meetup","event"],"authors":[]}},{"node":{"date":"2016-05-17T00:00:00.000Z","id":"f5d8714c-54dc-5d02-9311-d7a814cce01e","slug":"/blog/2016/05/17/state-of-jam/","strippedHtml":"Recently, the Jenkins project announced the release of\nJenkins 2.0, a first major release\nafter 10 years and 655 weekly releases. This has been a major milestone for\nJenkins and its growing community of developers, testers, designers and other\nusers in the software delivery process.\n\nWith its rising popularity and wide adoption, the Jenkins community continues to\ngrow and evolve into the millions. Jenkins community meetup activity has risen\nto an all time high since the first Jenkins meetup which was established on\nAugust 23 2010, in San Francisco.\n\nOver the last six months the number of\nJenkins Area Meetup (JAM) Groups has\ngrown from 5 to 30, with coverage in Asia, North America, South America and\nEurope.  That’s an average growth of 4 new JAMs per month.\n\nAs of today, there are over 4,100 Jenkins fans within the Jenkins meetup\ncommunity.  This is the result of contributions from community JAM leaders who\nhave volunteered their time to provide a platform for learning, sharing and\nnetworking all things Jenkins within their local communities.\n\nFor anyone who has not organized a meetup before, there are many moving parts\nthat have to come together at a specific location, date and time. This process\ntakes significant effort to methodically plan out. From planning the food and\nbeverages to securing speaker(s), a venue, audio/visual setup, technical\nlogistics and of course promoting the meetup. It does takes a level of passion\nand effort to make it all happen.\n\nMany THANKS to the 55 JAM leaders, who share this passion - they have\nsuccessfully organized over 41 meetups within the past six months in North\nAmerica, South America and Europe. That’s about 6 meetups a month!\n\nThere are still plenty of opportunities to be a JAM organizer. If there is not a\nJAM near you, we’d love to hear from\nyou! Here’s\nhow you can get\nstarted.","title":"The State of Jenkins Area Meetups (JAM)","tags":["meetup","JAM","event"],"authors":[]}},{"node":{"date":"2016-05-12T00:00:00.000Z","id":"16aeac16-1357-5d74-85da-84ef71ddbaa2","slug":"/blog/2016/05/12/sf-jam-jenkins-and-azure/","strippedHtml":"A few weeks ago, my colleague Brian Dawson\nand I were invited to present on\nScaling Jenkins for\nContinuous Delivery with Microsoft Azure in Microsoft’s\nReactor space. Azure is Microsoft’s\npublic cloud offering and one of the many tools available to Jenkins users for\nadding elastic compute capacity, among other things, to their build/test/deploy\ninfrastructure. While our presentations are applicable to practically\nany cloud-based Jenkins environment, Thiago Almeida and Oguz Pastirmaci from\nMicrosoft were also on-hand and presented some interesting Azure-specific\nofferings like\nAzure\nContainer Service with Jenkins.\n\nWhile we do not have video from the meetup, Brian and I did record\na\nsession with Thiago and Oguz for Channel9\nwhich covers much of the same content:\n\nTo kick-off the meetup we asked attendees a few polling questions and\nreceived very telling responses:\n\nHow big is your Development/IT organization?\n\nWhat is your role?\n\nBy show of hands do you practice CI/CD/DevOps/etc?\n\nAt what scale (tooling and practice)?\n\nThe responses indicated that the majority of attendees were from small to medium\norganizations where they practiced Continuous Delivery across multiple teams. A\nnotable 25% or greater attendees considered themselves \"fullstack\" or\nparticipating in all of the roles of Developer, QA, and Operations. Interesting\nwhen paired with the high number (~80%) of those who practice CD.  This is\nlikely because modern teams, with mature CD practices, tend to blur the\ntraditional lines of Developer, QA and Operations. However, In my experience,\nwhile this is often the case for small to medium companies in large\norganizations team members tend to fall into the traditional roles, with CD\nproviding the practice and platform to unify teams across roles.\n\n— Brian Dawson\n\nAfter gauging the audience, Thiago and Brian reviewed Continuous Delivery (CD)\nand implementing it at scale. They highlighted the fact that CD is being rapidly\nadopted across teams and organizations, providing the ability: to deliver a demonstrably\nhigher quality product, shipping more rapidly than before, and to keep team members happier.\n\nHowever, when organizations fail to properly support CD as they scale, they run\ninto issues such as: developers acting as administrators at the cost of\nproductivity, potential lack of security and/or exposure of IP and difficulty in\nsharing best practices across teams.\n\nThiago then highlighted that properly scaling CD practices in the organization\nalong with the infrastructure itself can alleviate these issues, and discussed\nthe benefits of scaling CD to on cloud platforms to provide \"CD-as-a-Service.\"\n\nOverall I found the \"theory\" discussion to be on point, continuous delivery is\nnot just a technology nor a people problem. Successful organizations scale their\nprocesses and tooling together.\n\nThe slides from our respective presentations are linked below:\n\n(Brian) Scaling Jenkins for Continuous Delivery (.pdf)\n\n(Tyler) Scaling Jenkins with Azure (.pdf)\n\nI hope you join us at future\nSan Francisco\nJAM s!","title":"SF JAM Report: Scaling Jenkins for Continuous Delivery with Azure","tags":["jam","azure","meetup"],"authors":[]}},{"node":{"date":"2016-05-10T00:00:00.000Z","id":"e79a5ee4-9a52-50ad-875a-d0e23f888bab","slug":"/blog/2016/05/10/jenkins-20-vjam/","strippedHtml":"Last week we hosted our first ever\nOnline JAM with the debut\ntopic of: Jenkins 2.0. Alyssa, our\nEvents officer, and I pulled together a\nseries of\nsessions focusing on some of the most notable aspects of Jenkins 2 with:\n\nA Jenkins 2.0 keynote from project founder\nKohsuke Kawaguchi\n\nAn overview of \"Pipeline as Code\" from Patrick\nWolf\n\nA deep-dive into Pipeline and related plugins like Multibranch, etc from\nJesse Glick and\nKishore Bhatia\n\nAn overview of new user experience changes in 2.0 from\nKeith Zantow\n\nA quick lightning talk about documentation by yours truly\n\nWrapping up the sessions, was Kohsuke again, talking about the road beyond\nJenkins 2.0 and what big projects he sees on the horizon.\n\nThe event was really interesting for me, and I hope informative for those who\nparticipated in the live stream and Q&A session. I look forward to hosting more\nVirtual JAM events in the future, and I hope you will\njoin us!\n\nQuestions and Answers\n\nBelow are a collection of questions and answers, that were posed during the\nVirtual JAM. Many of these were answered during the course of the sessions, but\nfor posterity all are included below.\n\nPipeline\n\nWhat kind of DSL is used behind pipeline as code? Groovy or allow freely use\ndifferent languages as a user prefer?\n\nPipeline uses a Groovy-based domain specific language.\n\nHow do you test your very own pipeline DSL?\n\nReplay helps in testing/debugging while creating pipelines and at the branch\nlevel. There are some ideas which Jesse Glick\nhas proposed for testing Jenkinsfile and Pipeline libraries captured in\nJENKINS-33925.\n\nIsn’t \"Survive Jenkins restart\" exclusive to [CloudBees] Jenkins Enterprise?\n\nNo, this feature does not need\nCloudBees\nJenkins Enterprise. All features shown\nduring the virtual JAM are free and open source. CloudBees' Jenkins Enterprise\nproduct does support restarting from a specified stage however, and that is not\nopen source.\n\nHow well is jenkins 2.0 integrate with github for tracking job definitions?\n\nUsing the\nGitHub\nOrganization Folder plugin, Jenkins can automatically detect a Jenkinsfile in\nsource repositories to create Pipeline projects.\n\nPlease make the ability for re-run failed stages Open Source too :)\n\nThis has been passed on to our friends at CloudBees for consideration :)\n\nIf Jenkinsfile is in the repo, co-located with code, does this mean Jenkins can\nauto-detect new jobs for different branches?\n\nThis is possible using the\nPipeline Multibranch plugin.\n\nWhat documentation sources are there for Pipeline?\n\nOur documentation section contains a number of pagesaround Pipeline.\nThere is also additional documentation and examples in the plugin’s\ngit repository and the\njenkinsci/pipeline-examples\nrepository. (contributions welcome!)\n\nWhere we can find the DSL method documentation?\n\nThere is generated documentation on jenkins.io which\nincldues steps from all public plugins. Inside of a running Jenkins instance,\nyou can also navigate to\nJENKINS_URL/workflow-cps-snippetizer/dslReference\nto see the documentation for the plugins which are installed in that instance.\n\nIf Pipeline is not support some plugins (there is a lot actually), I needed\nSonarQube Runner but unfortunately it’s not supported yet, in Job DSL plugin i\ncan use \"Configure Block\" and cover any plugin via XML, how i can achieve the\nsame with a Pipeline?\n\nNot at this time\n\nIs there a possibility to create custom tooltips i.e. with a quick reference or\na link to internal project documentation? Might be useful i.e. for junior team\nmembers who need to refer to external docs.\n\nNot generally. Though in the case of Pipeline global libraries, you can create\ndescriptions of vars/functions like standardBuild in the demo, and these will\nappear in Snippet Generator under Global Variables.\n\nOh pipeline supports joining jobs? It’s really good, but I cannot find document\nat https://jenkins.io/doc/ could you tell me where is it?\n\nThere is a build step, but the Pipeline system is optimized for single-job\npipelines\n\nWe have multiple projects that we would like to follow the same pipeline.  How\nwould I write a common pipeline that can be shared across multiple projects.\n\nYou may want to look at implementing some additional steps using the\nPipeline Global\nLibrary feature. This would allow you to define\norganization-specific extensions to the Pipeline DSL to abstract away common\npatterns between projects.\n\nHow much flexibility is there with creating context / setting environment\nvariables or changing / modifying build tool options when calling a web hook /\napi to parameterize pipelines for example to target deployments to different env\nusing same pipeline\n\nVarious environment variables are exposed under the env variable in the Groovy\nDSL which would allow you to construct logic as simple or as complex as\nnecessary to achieve your goal.\n\nWhen you set up the job for the first time, does it build every branch in git,\nor is there a way to stop it from building old branches?\n\nNot at this time, the best way to prevent older branches from being built is to\nremove the Jenkinsfile in those branches. Alternatively, you could use the\n\"include\" or \"exclude\" patterns when setting up the SCM configuration of your\nmultibranch Pipeline. See also\nJENKINS-32396.\n\nSimilar to GitHub organizations, will BitBucket \"projects\" (ways of organizing\ncollections of repos) be supported?\n\nYes, these are supported via the\nBitbucket\nBranch Source plugin.\n\nHow do you handle build secrets with the pipeline plugin? Using unique\ncredentials stored in the credentials plugin per project and/or branch?\n\nThis can be accomplished by using the\nCredentials\nBinding plugin.\n\nSimilar to GitHub Orgs, are Gitlab projects supported in the same way?\n\nGitLab projects are not explicitly supported at this time, but the extension\npoints which the GitHub Organization Folder plugin uses could be extended in a\nsimilar manner for GitLab. See also JENKINS-34396\n\nIs Perforce scm supported by the Pipeline plugin?\n\nAs a SCM source for discovering a Jenkinsfile, not at this time. The\nP4\nplugin does provide some p4 steps which can be used in a Pipeline script\nhowever, see here for documentation.\n\nIs Mercurial supported with multibranch?\n\nYes, it is.\n\nCan Jenkinsfile detect when it’s running against a pull request vs an approved commit, so that it can perform a different type of build?\n\nYes, via the env variables provided in the DSL scope. Using an if statement,\none could guard specific behaviors with:\n\nif (env.CHANGE_ID != null) {\n    /* do things! */\n}\n\nLet’s say I’m building RPMs with Jenkins and use build number as an RPM\nversion/release number. Is there a way to maintain build numbers and leverage\nversioning of Jenkinsfile?\n\nThrough the env variable, it’s possible to utilize env.BUILD_NUMBER or the\nSCM commit ID, etc.\n\nLove the snippet generator! Any chance of separating it out from the pipeline\ninto a separate page on its own, available in the left nav?\n\nYes, this is tracked in\nJENKINS-31831\n\nAny tips on pre-creating the admin user credential and selecting plugins to\nautomate the Jenkins install?\n\nThere are various configuration\nmanagement modules which provide parts of this functionality.\n\nI’m looking at the pipeline syntax (in Jenkins 2.0) how do I detect a\nstep([…​]) has failed and create a notification inside the Jenkinsfile?\n\nThis can be done by wrapping a step invocation with a Groovy try/catch block.\nSee also JENKINS-28119\n\nUser Interface/Experience\n\nIs the user experience same as before when we replace the Jenkins.war(1.x to\n2.x) in an existing (with security in place) installation?\n\nYou will get the new UI features like redesigned configuration forms, but the\ninitial setup wizard will be skipped. In its stead, Jenkins will offer to\ninstall Pipeline-related functionality.\n\nIs it possible to use custom defined syntax highlighting ?\n\nWithin the Pipeline script editor itself, no. It is using the\nACE editor system,\nso it may be possible for a plugin to change the color scheme used.\n\nCan you elaborate on what the Blue Ocean UI is? Is there a link or more\ninformation on it?\n\nBlue Ocean is the name of user experience an design project, unfortunately at\nthis point in time there is not more information available on it.\n\nGeneral\n\nHow well this integrate with cloud environment?\n\nThe Jenkins controller and agents can run easily in any public cloud environment\nthat supports running Java applications. Through the\nEC2,\nJClouds,\nAzure, or\nany other plugins which extend the cloud\nextension\npoint, it is possible to dynamically provision new build agents on a configured\ncloud provider.\n\nAre help texts and other labels and messages updated for other localizations /\nlanguages as well?\n\nPractically every string in Jenkins core is localizable. The extent to which those\nstrings have been translated depends on contributors by speakers of those\nlanguages to the project. If you want to contribute translations, this\nwiki\npage should get you started.\n\nAny additional WinRM/Windows remoting functionality in 2.0?\n\nNo\n\nIs there a CLI to find all the jobs created by a specific user?\n\nNo, out-of-the-box Jenkins does not keep track of which user created which jobs.\nThe functionality provided by the\nOwnership\nplugin may be of interest though.\n\nPlease consider replacing terms like \"master\" and \"slave\" with \"primary\" and\n\"secondary\".\n\n\"slave\" has been replaced with \"agent\" in Jenkins 2.0.\n\nUpdated 2020-09-18 : The term \"master\" is being replaced with \"controller\".\n\nWe’ve been making tutorial videos on Jenkins for awhile (mostly geared toward\npassing the upcoming CCJPE). Because of that we’re using 1.625.2 (since that is\nwhat is listed on the exam), but should we instead base the videos on 2.0?\n\nAs of right now all of the\nJenkins Certification work done by CloudBees is\nfocused around the Jenkins LTS 1.625.x.","title":"Jenkins 2.0 Online JAM Wrap-up","tags":["jenkins2","jam","meetup"],"authors":[]}},{"node":{"date":"2016-03-02T00:00:00.000Z","id":"a3eac79d-1e79-52f6-a5b7-64e85e16043b","slug":"/blog/2016/03/02/toulousejam-hackergarten/","strippedHtml":"Vous êtes développeuse ou développeur, vous avez envie de découvrir le projet\nJenkins de l’intérieur, en bricolant sur un sujet qui vous intéresse, lisez\nla suite !\n\nMercredi 9 mars, le Toulouse Jenkins Area Meetup\norganise à Toulouse un Hackergarten Jenkins, occasion idéale pour faire ses\npremiers pas dans la communauté assisté(e) d’un contributeur au projet.\n\nHackergart quoi ?\n\nHackergarten est un mot qui provient de la contraction des mots Hacker et\nKindergarten, ce dernier étant le mot allemand qui désigne en gros l’école\nmaternelle.\n\nComment ça va se passer ?\n\nEn partenariat avec le Toulouse Java User Group\n(c’est sur ce lien qu’il faut s’inscrire), nous nous donnons rendez-vous à\npartir de 18h30 dans les locaux de l’Epitech Toulouse, chacun avec son\nordinateur (non fourni), et on commence à jouer.\n\nEt c’est bien sûr gratuit et ouvert à tous.\n\nUn tableau trello a été initialisé\npour tenter de s’organiser un peu. La liste des choses à faire n’est pas du\ntout figée, et les idées sont les bienvenues.\n\nLes commentaires sont ouverts à tous, et l’accès sera donné à quiconque en fait\nla demande (façon communauté Jenkins :-)).\n\nGoodies !\n\nGrâce à l’aide de CloudBees, on a pas mal de goodies à offrir : stickers,\nbadges, t-shirts et bobble-heads !\n\nLes Bobble Heads Jenkins\n\nNous en avons 2 ! Et ceux-ci\nseront offerts au deux premiers participants à voir leur pull-request\nenvoyée pendant la soirée mergée .\n\nQue faire pour (se) préparer ?\n\nSi vous n’en avez pas, créez-vous un compte pour les services suivants :\n\nJenkins\n\nGitHub\n\nTrello\n\nAu niveau machine, idéalement, vous avez :\n\nGit et Maven bien installés\n\nDocker installé (natif sous Linux), ou via\nDocker Toolbox pour\nles autres OS\n\nDes informations plus précises seront normalement données très bientôt aux\ninscrits via meetup quant à la préparation des machines.\n\nQuel(s) langage(s) faut-il connaître ?\n\nIdéalement, puisque Jenkins est écrit en Java, il serait souhaitable que vous\n connaissiez au moins les bases.\n\nToutefois, même si par exemple vos compétences sont plutôt côté Web, il y aura\naussi des choses à faire, que ce soit jouer avec le\nnouveau site en préparation,\nou ajouter une page web câblée\nsur certains fichiers json des statistiques.\n\nConnaître au moins les bases de Git sera un gain de temps, mais ce n’est pas\nindispensable.\n\nRécapitulatif\n\nlocale=fr-FR\">Pour s’inscrire (indiquez Jenkins à la question posée au _RSVP)\n\nle tableau Trello dédié aux activités de la soirée (demandez l’accès !)\n\nCf. ci-dessus pour les choses à installer sur votre machine\n\nN’hésitez pas : l’ambiance est accueillante, et on offre les pizzas !","title":"Jenkins Hackergarten : mercredi 9 mars 2016 à Toulouse","tags":["hackergarten","jam","meetup"],"authors":[]}}]}},"pageContext":{"tag":"meetup","limit":8,"skip":0,"numPages":13,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}