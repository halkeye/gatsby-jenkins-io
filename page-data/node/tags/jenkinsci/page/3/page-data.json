{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/jenkinsci/page/3",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2015-07-29T00:00:00.000Z","id":"d56b39ab-0f02-5e72-8288-8a232c18f15a","slug":"/blog/2015/07/29/juc-europe-slides-and-video-are-now-available-online/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/london_0.jpg[image,width=250,height=165] +\n\n+\n+\n\nSlides and video from JUC Europe are now available online!\n\n+\n+\n\nIf you made it to London to attend this year’s JUC Europe, I hope you enjoyed the conference , met plenty of community members and learned more about Jenkins. Now that the slides and video are up, you can revisit your favorite talks or \"attend\" the ones that you missed…​all at your leisure.\n\n+\n+\n\nIf you were unable to attend JUC Europe, well, now you can! The slides and video are here so you can \"attend\" any time you want. If JUC LIVE seems more appealing to you, there is one date left in the 2015 Jenkins User Conference World Tour: JUC U.S. West is September 2-3 in Santa Clara, CA. Register here.","title":"JUC Europe slides and video are now available online","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}},{"node":{"date":"2015-07-24T00:00:00.000Z","id":"d17bd5cd-f3ec-583a-89df-90a6e0487eca","slug":"/blog/2015/07/24/juc-u-s-east-slides-and-video-are-now-available-online/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/dc_0.jpg[image,width=200,height=149] +\n\n+\n+\n\nSlides and video from JUC U.S. East are now available online!\n\n+\n+\n\nIf you attended the conference, THANK YOU, and I’m sure you had fun, learned a lot and met many people from the Jenkins community. Now you can revisit your favorite talks or \"attend\" the ones that you missed.\n\n+\n+\n\nIf you were unable to attend JUC U.S. East, you now have the slides and video so you can \"attend\" anyways! If you like what you see and would like to attend a JUC this year, there is ONE date left in the 2015 Jenkins User Conference World Tour: JUC U.S. West is September 2-3 in Santa Clara, CA. Register here.","title":"JUC U.S. East slides and video are now available online","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}},{"node":{"date":"2015-07-15T00:00:00.000Z","id":"a188685e-dcce-5f7f-85b9-9acf0cbfe59b","slug":"/blog/2015/07/15/advancing-the-jenkins-gui-configuring-items-in-jenkins/","strippedHtml":"https://youtu.be/1Qn4jEwAeGc\n\nAbove is the screencast associated with this blog post\n\nIf you have ever used Jenkins you are familiar with what I am about to described, wading your way through job configuration page, looking for the settings that are important, and, depending on your plugin use, wondering where all these other setting came from and what they do.\n\n+\nDepending on how long you have used Jenkins, your negative opinion of this experience may vary. If you are a long-time user, you might even view the configuration page with that same reassuring nostalgia seeing a Facebook post from your ugly room mate induces. ‘Yup,he is still ugly and backwards, but we had some good times, back then.’ If you are a newer Jenkins user, it may well send you off to search the web for a viable alternative tool. +\n\n+\nThe good news is that CloudBees, in cooperation with the greater Jenkins community, is looking to make some long overdue progress sorting through this user interaction in a way that is both approachable to new users and amenable to existing users who have grown comfortable with a great tool and a ‘stalwart friend’ in a world of otherwise clunky world of IT tools. ( that really is the swiss army knife of build automation.) +\n\n+\n\nIf you happen to have had the opportunity to have attended any of the recent Jenkins User Conferences in Washington, DC, or London, you may have seen Tom and my presentation, which served as our initial introduction of this effort to the Jenkins Community. In this article and the associated video, I will be focusing specifically on the Create and Configuration screens in Jenkins, discussing some of the larger proposed changes, providing some context for the changes and examining their possible repercussions on existing plugins and future plugin development.\n\n+\n+\n\nHistory of Jenkins\n\n+\n\n+\nFor newer Jenkins users, I have found the following visual a helpful guide to understanding the history of Jenkins and how its graphical user interfaces has evolved:\n\n+\n +\nimage:/sites/default/files/images/history-jenkins_590.jpg[Jenkins timeline: a long history] +\n\n+\nThe first thing to notice here, is that Jenkins has been around for a long time and in a lot of ways is really fundamental to the art of creating software. Back in 2005, the then Hudson project was using pretty much the same cave chalk as everyone else. 6 years later, the code and community underwent its most substantial transformation to date, as Jenkins emerged as the dominant fork of the Hudson project. If you look closely, you will see the GUI reflected that transformation by….. changing the picture of the butler. In recent times, the interface has taken a few additional steps forward, most notably by moving to a responsive CSS driven layout from its table based origin, but the pace of these changes has been very much akin to the pace of evolution. Slow. +\n\n+\nIn our next phase of graphic interface development, however, Tom and I are looking to be a little more directed in our efforts and push the GUI toward a blend of strategic and tactical advancements that will help Jenkins take advantage of some of the advances in web design and browser technologies that have happened over the last 10 years. Our first major push will be in the job creation and configuration tasks. +\n\n+\n\nCreating and Configuring\n\n+\n\n[image]\n\n+\n\n+\n\n+\n\nIn addition to a bit of a refresh of the look of these forms, this new effort focuses on the importance of dividing information and presentation into clear categories that ideally are meaningful to both new and veteran users of Jenkins alike.\n\n+\n+\n\nIn some cases, Jenkins has these categories already in the GUI, but misses the mark in clarification and emphasis. In other cases, additional categorizing concepts will need to be added. Compare the above screens to the existing screens.\n\n+\n\n[image]\n\n+\n\n[image]\n\n+\n\nThe first thing you are likely to notice when comparing these two sets of screens is that in the existing screens, there is very little in the way of visual markers segmenting the form input choices on either the item type selection screens (fig 4 vs 2) or the configuration pages (fig 5 vs 3). Adding each new plugin progressively aggravates the situation, and consequently, as your Jenkins installation grows in sophistication and robustness, the average users ability to find the fundamental configuration settings in the sea of ad-hoc options diminishes. While adding functionality typically adds some amount of additional complexity to a UI, by giving each configuration option a visually distinguishable space in the form, the challenge can be greatly diminished and the pattern of creating an ever growing scrolling of toilet paper list of form elements can be avoided.\n\n+\n\nFor figures 2 and 4, you might also notice that I have chosen Jenkins instances that already have several plugins installed as the basis for my example screens. You might rightly argue that for a basic install, there are not a lot of item types to create, so categorizing them adds a needless layer of complexity. Fair enough. It is my belief, though, that our software can be smart enough to count the item types available for creation and count the number within each category and handle the categorization as necessary. Counting and sorting is something that computers do incredibly well and is not the sort of thing busy people need to be overly burdened with.\n\n+\n\nIn addition to the code being intelligent about when to present grouping categories to the user, The screen interaction can be similarly intelligent in how it enables the user to selectively show and hide the categories of interest. The following screenshot shows the configuration page focused in on CVS a particular option configuration in the source code management section of the configuration page. It, in turn, has its own sub settings for additional modules and locations (see fig 6).\n\n+\n\n[image]\n\n+\n\n…​and wait for it…​ …​for comparison, here is today’s CVS settings page…​\n\n+\n\n[image]\n\n+\n\nDespite some serious indentation, the existing page offers significantly less clarity about which settings pertain specifically to CVS instead of other aspects of a Jenkins job.\n\n+\n\n[image]\n\n+\n\nIdentifying which settings go with which segment becomes all the more confusing when sub-sections can be re-ordered. To show you what I mean and fit the screen on a single printed page, I am needing to muck with the aspect ratio of today’s screen.\n\n+\n\nThe image on the left (fig 7) shows a 2 step build process, each with sub parameters.\n\n+\n\nThere are some fascinating looking red delete buttons in here, I hope I know exactly what part of the build step I am about to blow away…​. Did I mention these segments can be re-ordered? Care to guess which form inputs will move with which steps?\n\n+\n\n[image]\n\n+\n\nBy contrast, the above screen shows the same 2 build steps with the same parameters. We still have our friend, Mr. Red Delete button, but now it is a good bit clearer who will get blown away.\nAlso, it is considerably clearer which block will be reordered, should I choose to do so.\n\n+\n\nWhat about plugins?\n\n+\n\nIf you are a long-time Jenkins user, you may have a guess as to why some of these changes have been slow in coming, and if you are a plugin developer, you definitely know. These input controls have a lot of extension points in them that allow plugins to influence the content of this configuration screen. As a result, how plugins will respond to even the most minor layout changes is somewhat of a mystery. Further, the GUI control elements that make up the form are available to plugin authors to embed as they see fit in their own GUI elements. As a consequence, we have some serious compatibility issues ahead. These challenges are not at all trivial.\n\n+\n\nFortunately, however, I believe with some careful manipulation and diligent testing we can overcome these challenges. The first set of changes are likely to revolve around a file called “hudson-behavior.js”. This file does most of the Jenkins client-side UI magic. If there is data to be bound to a control, this is the file that is likely to handle it. The difficulty with this file stems from two factors, its age (it is written following Yahoo UI framework patterns which have since been abandoned by Yahoo and the rest of the industry), and a presumption that the page layout will be governed by a single giant HTML table (likely due to the table renaissance happening around the same time, thanks to the emergence of GWT). Regardless of this bit of history trivia, these two issues combine to make changes to the HTML DOM structure of any Jenkins page problematic. Methods such as “findFollowingTR” assume a very rigid parent-child element positioning based on page layout rather than on the logical relationship between the data elements. The good news here is that despite some of their unfortunate names, can be refactored to both find the relevant element based on today’s table structure as well as a future logical nesting of related elements. With that change in place, Jenkins will continue to function as it always has and a future configuration DOM structure can share the same infrastructure.\n\n+\n\n+\nThe second step here will be finding efficient ways to integrate more modern Javascript libraries, such as JQuery and Bootstrap into the Jenkins GUI. We will want these libraries to be easier and cleaner for plugin authors to access than PrototypeJS and Yahoo UI are today. Likely this will involve using a Browserify/Requirejs like pattern to control script inclusion in page to avoid naming conflicts, excessively file attachment and global space pollution.\n\n+\n\nThe final step would then be to begin amending, replacing and augmenting the Jelly based form control set, and thus, transforming the look and behavior of the Jenkins UI. As always, Jenkins is an open community, and we at CloudBees view that as a cherished cornerstone of our own corporate culture. Thus, at every phase of this undertaking we are eager to solicit feedback from and encourage participation by you the members of the community. Feel free to comment directly on this article. Additionally, I am maintaining and active thread on the Jenkins Developer group ( https://groups.google.com/forum/#!topic/jenkinsci-dev/6BdWZt35dTQ). I am looking forward to hearing from you.","title":"Advancing the Jenkins GUI: Configuring Items in Jenkins","tags":["video","screencast","juc","core","releases","feedback","development","just for fun","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":"gusreiber","html":"","id":"gusreiber","irc":null,"linkedin":null,"name":"Gus Reiber","slug":"blog/author/gusreiber","twitter":null}]}},{"node":{"date":"2015-06-15T00:00:00.000Z","id":"d57bf05d-abc5-5b2d-b6ed-9d66d0ca2c9f","slug":"/blog/2015/06/15/juc-speaker-blog-series-stephan-hochdrfer-juc-europe/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/Jenkins_Butler_0.png[image,width=114,height=128] +\n\n+\n+\n\nI am very much looking forward to the Jenkins User Conference in London where I will present our insights on how to use Jenkins in a PHP related environment. Moving to Jenkins about 5 years ago bitExpert gained a lot of experience in running and managing a distributed Jenkins infrastructure. bitExpert builds custom applications for our clients which means that we have to deal with different project infrastructures, e.g. different PHP versions. We heavily rely on the build nodes concept of Jenkins which I will briefly outline in the session. Besides that I will give some in-depth insights on how we use Jenkins on a daily basis for the \"traditional\" CI related tasks (e.g. linting code, checking code style, running tests) as well as how Jenkins is used to power our integration tests. Last but not least I will cover how Jenkins acts as a kind of backbone for our Satis server which allows us to host the metadata of our company’s private Composer packages. Throughout the talk I will point out which Jenkins plugins we use in the different contexts to give you a good starting point if you are new in the Jenkins ecosystem.\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/bitExpert-logo_0.png[image,width=220,height=76] +\n\n+\n+\n\nThis post is by Stephan Hochdoerfer, Head of Technology at bitExpert AG. If you have your ticket to JUC Europe, you can attend his talk\"Jenkins for PHP Projects\" on Day 2.\n\n+\n+\n\nStill need your ticket to JUC? If you register with a friend you can get 2 tickets for the price of 1! Register here for a JUC near you.\n\n+\n+\n+\n+\n\nThank you to our sponsors for the 2015 Jenkins User Conference World Tour:\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/sponsors-06032015-02_0.png[image,width=598,height=579] +","title":"JUC Speaker Blog Series: Stephan Hochdörfer, JUC Europe","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}},{"node":{"date":"2015-06-09T00:00:00.000Z","id":"55aeec52-2399-5dbe-aefc-9b8cc918d92b","slug":"/blog/2015/06/09/juc-speaker-blog-series-damien-coraboeuf-juc-europe/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/Jenkins_Butler_0.png[image,width=114] +\n\n+\n+\n\nScaling and maintenance of thousands of Jenkins jobs\n\n+\n+\n\nHow to avoid creating of a jungle of jobs when dealing with thousands of them?\n\n+\n+\n\nIn our organisation, we have one framework, which is used to develop products. Those products are themselves used to develop end user projects. Maintenance and support are needed at each level of delivery and we use branches for this. This creates hundreds of combinations.\n\n+\n+\n\nNow, for each product or project version (or branch), we have a delivery pipeline. We start by compiling, testing, packaging, publishing. Then we deploy the application on the different supported platforms and go through different levels of validation, until we’re ready for delivery. Aside from a few details and configuration elements, most of the pipelines are identical from one branch to the other, from one project to the other.\n\n+\n+\n\nSo, one framework, some products, several projects, maintenance branches, complex pipelines… We end up having many many jobs to create, duplicate and maintain. Before even going into this direction, we saw this as a blocking issue - there was no way we could maintain manually thousands of jobs on a day to day basis.\n\n+\n+\n\nThe solution we were looking for should have the following characteristics:\n\n+\n+\n\nSelf service - our goal being to delegate the job and branch administration in Jenkins to the projects, in order to reduce the support time\n\nSecurity - we didn’t want to open Jenkins to the projects at configuration level - not acceptable in our context\n\nSimplicity - the solution should be simple enough to be manageable by people not knowledgeable about the core technologies of Jenkins\n\nExtensibility - the solution must be flexible enough to allow extensions when needed\n\n+\n+\n\nWhen we thought about using the Job DSL plug-in, delegating the creation of the pipeline to the project teams was OK from a self service point of view, but was not secure and definitely not simple for people not knowing Jenkins.\n\n+\n+\n\nIn the end, we opted for a solution where:\n\n+\n+\n\nA project team would edit a simple property file listing the characteristics of the current branch, like which type of platform is supported, which version of the pipeline library to use, etc.\n\nUpon commit of this shopping list, the complete branch pipeline is regenerated using the given version of the pipeline library\n\nThe pipeline library code reads the “shopping list” property file and runs a Job DSL script to generate the branch pipeline according to those parameters\n\n+\n+\n\nBy default, the pipeline library generates a classic pipeline, suitable for most needs. It is also possible to define and use extensions, like having additional jobs in the pipelines.\n\n+\n+\n\nIn case of new features or defects, we develop or branch a new version of the pipeline library and projects or branches can use it by changing the version of their shopping list file.\n\n+\n+\n\nA project gets injected into the system by having only a project seed being generated. From it, the authorised members can generate the branch seed and any branch pipeline at any time. Those seed jobs and the pipelines themselves can also be driven directly from the SCM using our plugin.\n\n+\n+\n\nThe project teams are now autonomous and can pilot their pipelines without requesting any support. They act in a secure and isolated way, and cannot compromise the shared environment. The “shopping list” file is simple and well documented. The system is not rigid and allows for extensions.\n\n+\n+\n\nThis platform has been developed initially for a very specific framework and a set of projects which depend on it, but has been extended since to be able to support other stacks. It is structured in two different parts:\n\n+\n+\n\nThe seed platform itself - generation of branch structures in Jenkins and trigger end points for being piloted from the SCM\n\nThe pipeline libraries, referenced from the shopping list files\n\n+\n+\n\nWe still allow some small tools and applications to define directly their pipeline by providing a Job DSL script.\n\n+\n+\n\nUsing the same principle, we can also pilot other tools in the ecosystem - like Artifactory or Ontrack.\n\n+\n+\n\nI’ll talk about this seed platform on June 24th, in the Jenkins User Conference in London.\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/dcoraboeuf_0.preview.jpg[image,width=150] +\n\n+\n+\n\nThis post is by Damien Coraboeuf, Continuous Delivery Expert at Clear2Pay. If you have your ticket to JUC Europe, you can attend his talk\"Scaling of Jenkins Pipeline Creation and Maintenance\" on Day 2.\n\n+\n+\n\nStill need your ticket to JUC? If you register with a friend you can get 2 tickets for the price of 1! Register here for a JUC near you.\n\n+\n+\n+\n+\n+\n+\n+\n\nThank you to our sponsors for the 2015 Jenkins User Conference World Tour:\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/sponsors-06032015-02_0.png[image,width=598] +","title":"JUC Speaker Blog Series: Damien Coraboeuf, JUC Europe","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}},{"node":{"date":"2015-06-08T00:00:00.000Z","id":"f005c36f-6571-5a47-8ed8-b099e9315e78","slug":"/blog/2015/06/08/juc-speaker-blog-series-will-soula-juc-u-s-east/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/Jenkins_Butler_0.png[image,width=114,height=128] +\n\n+\n+\n\nChat Ops and Jenkins\n\n+\n+\n\nI am very excited to be attending the Jenkins User Conference on the East Coast this year. This will be my third presentation at a JUC and fourth time to attend, but my first on the East Coast. I have learned about a lot of cool stuff in the past, which is why I started presenting, to tell people about the cool stuff we are doing at Drilling Info. One of the cooler things we have implemented in the last year is Chat Ops and our bot Sparky. It started as something neat to play with (\"Oooo lots of kittens\") but quickly turned into something more serious.\n\n+\n+\n\nEver get asked the same questions over and over? What jobs to run to deploy your code? What is the status of the build? These question and more can all be automated so you do not have to keep answering them. Furthermore, when you do get asked you can show them, and everyone else, how to get the information by issuing the proper commands in a chat room for everyone to see. With chat rooms functioning as the 21st century water coolers, putting the information in the middle of the conversation is a powerful teaching technique. You are not sending people to some out dated documentation on how to get their code deployed, nor are you showing them the steps today only to be forgotten tomorrow. Instead you can deploy your code and they see the exact steps needed to get their code deployed.\n\n+\n+\n\nEven more impressive is the way ChatOps can bring your company together. Recently our CTO got a hipchat account so he could interact with Sparky. This gave me the idea that if we extend Sparky to deliver information useful to the other teams (Sales, Marketing, Finance, etc) then we would be able to get these wildly disparate teams in the same chat room together and hopefully they will talk and learn from each other. Where DevOps is the bringing together of Dev and Ops, ChatOps can be the bridge across the entire organization. Come see my presentation Day 1: Track 1 at 4:00 PM to learn how ChatOps can enrich your team, how Drilling Info is using it, and what our future plans entail for ChatOps.\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/01-01-1600-soula_0.jpg[image,width=152,height=182] +\n\n+\n+\n\nThis post is by Will Soula, Senior Configuration Management/Build Engineer at Drilling Info. If you have your ticket to JUC U.S. East, you can attend his talk\"Chat Ops and Jenkins\" on Day 1.\n\n+\n+\n\nStill need your ticket to JUC? If you register with a friend you can get 2 tickets for the price of 1! Register here for a JUC near you.\n\n+\n+\n+\n+\n+\n+\n+\n\nThank you to our sponsors for the 2015 Jenkins User Conference World Tour:\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/sponsors-06032015-02_0.png[image,width=598,height=579] +","title":"JUC Speaker Blog Series: Will Soula, JUC U.S. East","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}},{"node":{"date":"2015-06-03T00:00:00.000Z","id":"99b61a49-52d0-55d5-a2aa-5c9156082824","slug":"/blog/2015/06/03/juc-speaker-blog-series-andrew-phillips-juc-u-s-east/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/Jenkins_Butler_0.png[image,width=114,height=128] +\n\n+\n+\n\nAutomated Testing with Jenkins: At JUC East with Andrew Phillips\n\n+\n+\n\nNext stop: Washington, DC! I’m looking forward to heading to JUC East in a couple weeks, which runs June 18-19. The Jenkins User Conference is the annual get-together for Jenkins customers, users, partners, developers and community members. It promises to be an exciting two days, and as an added bonus I get to catch up with Kohsuke Kawaguchi and Gene Kim!\n\n+\n+\n\nI will be giving a talk about a topic that I think is a bit of an elephant in the room in the Continuous Delivery space: the critical importance of optimized Automated Testing. As you start to ship code faster, you’ll need numerous automated tests across many different tools, in many different jobs in your pipeline. But getting a grip on the results of all of your automated tests — and then figuring out whether your software is good enough to go live — becomes harder and harder as you speed up the delivery of your software.\n\n+\n+\n\nI’ll share tips on how naming conventions, partitioning of testware and mirroring the application’s structure in the test code help you best handle automated testing with Jenkins. I’ll also try to provide some insight into how to keep the setup manageable, as well as share practical experiences of managing large portfolios of automated tests. Finally, we’ll showcase some practices that help you manage all your test results and add aggregation, trend analysis and qualification capabilities to your Jenkins setup.\n\n+\n+\n\nJoin us at the event, or check the slides or recording (which we’ll post after the talk) to learn more. Looking forward to seeing you there!\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/01-01-1130-phillips_0.jpg[image,width=152,height=182] +\n\n+\n+\n\nThis post is by Andrew Phillips, at XebiaLabs. If you have your ticket to JUC U.S. East, you can attend his talk\"How to Optimize Automated Testing with Everyone’s Favorite Butler\" on Day 1.\n\n+\n+\n\nStill need your ticket to JUC? If you register with a friend you can get 2 tickets for the price of 1! Register here for a JUC near you.\n\n+\n+\n+\n+\n+\n+\n+\n\nThank you to our sponsors for the 2015 Jenkins User Conference World Tour:\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/sponsors-06032015-02_0.png[image,width=598,height=579] +","title":"JUC Speaker Blog Series: Andrew Phillips, JUC U.S. East","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}},{"node":{"date":"2015-06-02T00:00:00.000Z","id":"a29c742d-58a8-5210-bc20-116ad89dda5b","slug":"/blog/2015/06/02/juc-speaker-blog-series-peter-vilim-juc-u-s-east/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/Jenkins_Butler_0.png[image,width=114] +\n\n+\n+\n\nIn this talk I will be focusing on plugin development for Jenkins. I aim to capture some of the lessons that we have learned at Delphix and that I learned while I was in graduate school. At Delphix we have been large users of Jenkins for over four years which is most of the history of our startup. We currently run thousands of jobs per day. We have been quite happy with the experience and expect these numbers to grow significantly as our business scales beyond our current 300 head count.\n\n+\n+\n\nThe core concept of Delphix is Data as a Service. Our software allows businesses to virtualize databases and data associated with their applications then provision these on demand to developers and others who need virtual copies of them. Our development for this software spans the entire stack. We have quite a few kernel developers, including the original team for the ZFS filesystem who work on developing the open source application, OpenZFS, which underpins our product. Further up the stack we have a large java application that interacts with ZFS to perform virtualization operations, provides user\nfacing webservices, and interfaces with our internal Postgres metadata store which stores the state of our system. Finally above this we have a modern Javascript front end for user interaction. Our full software product ships as a virtual machine on a variety of hypervisors. As a result of these numerous components, end to end integration testing is very important to us. This integration testing is the primary use of Jenkins for us. Before any developer checks in code to either our operating system or application repository, it must undergo several hours of automated integration testing. We also have nightly runs which go for far longer and tests a much more extensive set of functionality. In addition, we use Jenkins for the build process of our software as well as final packaging for release. Because Jenkins serves as a hub for our development processes, having a well designed system is very important to us and saves us significant time.\n\n+\n+\n\nBelow are some of the key points I will be discussing at my talk. I hope you attend to learn more about the areas that I find very interesting.\n\n+\n+\n\nI’m planning to discuss the structure of a Jenkins plugin. I’ll also cover a few of the more advanced areas of plugins such as distributed builds that I see less frequently in plugins. In addition, I’ll briefly cover unit testing, which is something missing in many open source plugins.\n\nI’ll talk about some good patterns to use in plugins as well as some areas where a plugin is not a good idea. I’m planning to pull from my own personal experience developing plugins, the experience of other people at Delphix working with Jenkins, and our experience using other open source plugins to talk about what works and what doesn’t.\n\nI’ll give an overview of the current plugin development at Delphix. I’ll cover some of the lessons that we have learned along the way. We have also started to take a \"dogfooding\" approach to some of our development where we use plugins internally to help our test process and open source them since our customers find features used for testing our product to often be useful in their production environments. This has an added bonus of making it easier to justify our development time spent on making these plugins, since they are also features requested by our customers.\n\nI’ll discuss the trade-offs between using an already developed plugin or group of plugins, writing some scripts, and building your own plugin. Being able to figure out when to do which can lead to major time savings as well as a better user experience.\n\n+\n+\n\nI hope you attend. Even if you have no immediate plans to write your own plugins, hopefully you’ll be able to learn about what makes plugins tick and how to better evaluate plugins when picking them for your own projects. Plugins were what originally got me excited about Jenkins and they allowed me to see its true potential as a build and test system. I hope to share some of that inspiration.\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/01-01-1400-vilim_0.jpg[image,width=152] +\n\n+\n+\n\nThis post is by Peter Vilim, Member of Technical Staff at Delphix. If you have your ticket to JUC U.S. East, you can attend his talk\"Providing a First Class User Experience with Jenkins Plugins\" on Day 1.\n\n+\n+\n\nStill need your ticket to JUC? If you register with a friend you can get 2 tickets for the price of 1! Register here for a JUC near you.\n\n+\n+\n+\n+\n+\n+\n+\n\nThank you to our sponsors for the 2015 Jenkins User Conference World Tour:\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/sponsors-06032015-02_0.png[image,width=598] +","title":"JUC Speaker Blog Series: Peter Vilim, JUC U.S. East","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}}]}},"pageContext":{"tag":"jenkinsci","limit":8,"skip":16,"numPages":9,"currentPage":3}},
    "staticQueryHashes": ["3649515864"]}