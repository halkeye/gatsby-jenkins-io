{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/screencast/page/2",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2014-08-28T00:00:00.000Z","id":"9b8568a6-9659-597e-80e4-a3f253035618","slug":"/blog/2014/08/28/workflow-plugin-code-walk-through/","strippedHtml":"Jesse and I will walk through the source code of the workflow plugin, highlights key abstractions and extension points, and discuss how they are put together.\n\nIf you are interested in developing or retrofitting plugins to work with workflows, I think you’ll find this session interesting.\n\nThe event will be on Google Hangout tomorrow. The time of the day is the same as usual office hours.","title":"Workflow plugin code walk-through","tags":["development","meetup","plugins","screencast","tutorial","pipeline","workflow"],"authors":[]}},{"node":{"date":"2014-07-08T00:00:00.000Z","id":"ec480fa0-5d1f-5a81-b4c7-c06613ec897a","slug":"/blog/2014/07/08/workflow-plugin-tutorial-writing-a-step-impl/","strippedHtml":"+\nThe other day I was explaining how to implement a new workflow primitive to https://github.com/vivek[Vivek Pandey], and I captured it as a recording. +\n +\n +\n +\n\n+\nThe recording goes over how to implement the `+Step+` extension point, which is the workflow equivalent of `+BuildStep+` extension point. If you are interested in jumping on the workflow plugin hacking, this might be useful (and don't forget to get in touch with us so that we can help you!) +\n +\n\n+\nimage:https://www.thatvideogameblog.com/wp-content/uploads/2012/11/Link-Dangerous-to-Go-Alone.jpg[image,width=310,height=206] +","title":"Workflow plugin tutorial: writing a Step impl","tags":["development","plugins","screencast","video","pipeline","workflow"],"authors":[]}},{"node":{"date":"2014-07-03T00:00:00.000Z","id":"1ddea8bf-ea84-5464-b0f5-8d852c356b4a","slug":"/blog/2014/07/03/jenkins-office-hours-dotci/","strippedHtml":"+\nSurya walked us through https://github.com/jenkinsci/dotCI[the dotCI source code] yesterday, and a bunch of ideas about how to reuse pieces are discussed. The recording is on YouTube, and https://docs.google.com/document/d/1zXYOz9Zy-CLu2t8PgqIU0jMO8890PRNjPEAvlrx-HW8/edit#[my notes are here]. +\n +","title":"Jenkins Office Hours: dotCi","tags":["general","plugins","screencast","video"],"authors":[]}},{"node":{"date":"2014-05-19T00:00:00.000Z","id":"eed180da-45db-59c1-a6f0-28b8e0843f8d","slug":"/blog/2014/05/19/jenkins-office-hour-tutorial-on-writing-an-acceptance-test/","strippedHtml":"+\nimage:https://wiki.jenkins.io/download/attachments/57181939/hangout.png?version=1&modificationDate=1361998218000[image,width=200] +\n\n+\n+\n\n+\nThis week I'm going to do an office hour on how to write an acceptance test in https://github.com/jenkinsci/acceptance-test-harness[Jenkins acceptance test harness]. The event is on https://www.timeanddate.com/worldclock/fixedtime.html?msg=Jenkins+Office+Hours&iso=20140519T11&p1=283&ah=1[Wednesday 11am PT]. +\n +\n\n+\nThis new Selenium-based test harness is full of page objects and other abstractions that let you write blackbox integration tests on Jenkins and its plugins, as well as how they behave under various environments. +\n +\n\n+\nUnlike our regular office hours, https://plus.google.com/u/0/events/cpr7lhq3d544rj5uqid4rin3deg[the event is done through Hangout on air]. But I do want at least several people to join Hangout interactively, not just watch the event in a read-only mode. +\n +\n\n+\nTo join the event interactively (as opposed to read-only), I think you need to https://plus.google.com/hangouts/_/hoaevent/AP36tYeeXozAE_RiZWtTfX-O-sEtxJ3qhu4Asnfy7tZOZf3hs3jX1Q[come here] (but since Hangout URL can change, please check back on this post right before the office hour begins, so that I can post an up-to-date URL.) +","title":"Jenkins Office Hour: Tutorial on writing an acceptance test","tags":["development","screencast","tutorial"],"authors":[]}},{"node":{"date":"2010-03-31T00:00:00.000Z","id":"5821dff5-0138-58b1-adcc-2a38da03f591","slug":"/blog/2010/03/31/screencast-python-on-hudson-part-1/","strippedHtml":"After Hudson got some major publicity at PyCon Atlanta 2010 I haven’t been as quick as I would have liked with Python-related posts and tutorials. I use Hudson to build and test a number of pure Python modules and C extensions across numerous Python versions (covering 2.4 - 3.1). For most beginners, or those simply looking to get started with Python on Hudson, starting with my job configurations is too much at once, so instead I wanted to start at the \"beginning\" so to speak.\n\nThe trouble with getting people started with Hudson, given how simple and visual it is to use, is that articles with sample configurations are not particularly useful; a screencast however is a good medium for visually walking somebody through Hudson. The screencast below ( also on YouTube) is the first in a series of screencasts I’ll be doing, not only for Python on Hudson, but for Hudson overall. It is just over four minutes long, and covers setting up a simple continuous integration job for the Eventlet library (which is hosted on Bitbucket)","title":"Screencast: Python on Hudson (Part 1)","tags":["general","jobs","news","screencast","tutorial"],"authors":[]}}]}},"pageContext":{"tag":"screencast","limit":8,"skip":8,"numPages":2,"currentPage":2}},
    "staticQueryHashes": ["3649515864"]}