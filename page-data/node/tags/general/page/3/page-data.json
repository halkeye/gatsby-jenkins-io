{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/general/page/3",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2015-12-18T00:00:00.000Z","id":"a95ea00d-e666-5d06-bc95-2b4ab45098d1","slug":"/blog/2015/12/18/december-jam-world-tour-st-petersburg-russia/","strippedHtml":"The first Jenkins meetup in Saint Petersburg, Russia took place on December\n9th. The event has been organized with the help from Yandex and CloudBees.\n\nIn total there were about 80 attendees at the meetup. In addition to\nmeetup.com\nthe event has been promoted by Yandex so we quickly reached capacity limit.\n\nThere were 3 talks conducted, speakers from Yandex, ZeroTurnaround and\nCloudBees. We discussed the current open-source project state, ongoing\nactivities in the community, Jenkins-powered CD case studies from\nZeroTurnaround and Jenkins plugin development approaches.\n\nIntro slides [ru]\n\nWho is Mr. Jenkins? Current State, common usage issues and trends in the community [ru], by Oleg Nenashev -   [ video ]\n\nEnglish version\n\nJenkins beyond CI. ZeroTurnaround’s experience [en], by Sergei Egorov - [ video ]\n\nWhen to write your own plugin and when not to [ru], by Kirill Merkushev - [ video ]\n\nQ&A Session [ru], all speakers - [ video ]\n\nCheck out where Jenkins Area Meetups (JAMs) are located in the world. Don’t see a JAM in your area? Why not start your own, here’s how.","title":"December JAM World Tour: St. Petersburg, Russia ","tags":["general","meetup","jenkinsci"],"authors":[]}},{"node":{"date":"2015-12-18T00:00:00.000Z","id":"b746cb4e-561f-5752-85b6-5dfccb75f4cd","slug":"/blog/2015/12/18/join-us-at-the-jenkins-2-0-contributor-summit/","strippedHtml":"As I mentioned in yesterday’s post, we’re planning a \"Contributor Summit\" on February 1st, after FOSDEM 2016 (January 30th/31st), to focus on Jenkins 2.0. Since many of us are already planning, the Monday following the event turned out to be the ideal time to discuss 2.0.\n\nIf you’re not already familiar with some of the key proposals that were put forth, you can review them in the Jenkins 2.0 proposals summery page.\n\nWe’ve hosted one or two Contributor Summits in the past, and they’re usually a day-long event where we try to gather a number of Jenkins core/plugin developers and active/power users to have detailed discussions around the theme of the summit. For this \"Jenkins 2.0 Contributor Summit\" we do not have a complete agenda yet, but we will post that to the Meetup event once it is fully prepared in the next couple weeks.\n\nSuffice it to say, we’ll be discussing a lot!\n\nVenue and RSVP\n\nThe Contributor Summit will be hosted in a CloudBees office at: Rue des Colonies, 11, Brussels, Belgium. If you’re already planning on attending FOSDEM, the office is near Grand Place and Cafe Delerium (where the Friday beer event is hosted).\n\nThe venue is of limited size, so if you’re planning to join us, please RSVP to the Meetup event as soon as you’re certain you will be able to attend. If you find yourself unable to attend, please remove yourself from the list to ensure that we can fit as many active contributors into the office as possible!","title":"Join us at the Jenkins 2.0 Contributor Summit!","tags":["general","meetup"],"authors":[]}},{"node":{"date":"2015-12-17T00:00:00.000Z","id":"25d15c7f-eb14-5532-a562-3f50bc16c8cf","slug":"/blog/2015/12/17/fosdem-2016-travel-grant-program/","strippedHtml":"While we are gearing up for FOSDEM 2016 early next year in Brussels, I wanted to remind the Jenkins community about our Travel Grant Program. We’re a little late on mentioning it, but the board has allocated the money to help Jenkins contributors travel to Brussels to participate in FOSDEM and the Jenkins Contributor Summit which we will be hosting the day after, Feb 1st, which we’ll discuss more in a later blog post.\n\nFor the FOSDEM Travel Grant Program, we are able to cover up to $500 (USD) in expenses to help community members participate in FOSDEM.\n\nIf you’re interested, please read the description of the program below. Please note that some of the details of the program are different from the linked grant program page\n\nRegardless we hope to see you all at FOSDEM on January 30th and 31st, 2016, in Brussels!\n\nEligibility\n\nAll community members are eligible for support unless they’ve received a travel grant within the last year (based on the event’s date). However, as we have very limited funds to support this program, we’ll prefer applications by active contributors to the Jenkins project.\n\nIf you have other possible funding sources, please look to them first. This will allow more people to attend a Jenkins community event.\n\nApplication\n\nThe application process for FOSDEM, due to our poor timing, deviates from the traditional Travel Grant Program.\n\nTo apply for a travel grant, send an email with the following information to the Governance Board at jenkinsci-board@googlegroups.com before January 6th.\n\nYour name\n\nThe event you’d like to attend\n\nThe expected cost of travel (airfare, hotel, conference fees, etc.)\n\nA description of your contributions to the Jenkins project, such as:\n\nPlugins you developed\n\nPull requests you authored\n\nDocumentation you wrote\n\nPublic presentations on Jenkins-related topics\n\nWhy should we sponsor your trip?\n\nApplicants Responsibilities\n\nIf you’ve been selected for a travel grant, we’ll expect you to:\n\nBe available for a blog post about this program before the event.\n\nHelp out at the Jenkins stand at FOSDEM\n\nIf your schedule permits, we’d love to see you at the Jenkins 2.0 Contributor Summit the day after FOSDEM.\n\nIt should go without saying that we expect all Jenkins contributors representing the project at an event such as FOSDEM to act in a respectful and constructive manner. As we have not yet formally adopted our own Code of Conduct, we recommend reviewing the FOSDEM Code of Conduct.\n\nAfter the trip, please submit a travel report to jenkinsci-dev@googlegroups.com mailing list. This report should include the following:\n\nWhat you accomplished at the event\n\nWhat you learned at the event\n\nContacts you made\n\nOther useful information\n\nWe also expect you to submit your receipts via email to the person mentioned in the travel grant confirmation for review. We will reimburse actually incurred costs up to the 500 USD limit.","title":"FOSDEM 2016 Travel Grant Program","tags":["general","cia"],"authors":[]}},{"node":{"date":"2015-12-16T00:00:00.000Z","id":"c4dd7873-a1dc-5a87-918b-4c7455812df3","slug":"/blog/2015/12/16/workflow-best-practices-and-examples-repo-on-github/","strippedHtml":"A lot of people are using the Workflow plugin, but as with any scripting environment, users often have to start from scratch and learn the same lessons and shortcuts that other users have already learned. While there are blog posts from developers and users in various places, and some samples in the Workflow plugin documentation, more examples and tips and tricks are always, always useful. To help with that, we’ve created the workflow-examples repository on GitHub, as a place to store community-developed Workflow scripts that can help new users get started, show how to accomplish some non-trivial goals, and find tips and trick for taking your Workflow pipeline to the next level.\n\nThe repository has four directories:\n\ndocs/ - documentation, guides, and more. Including a Best Practices document. We’d love to see more contributions to that doc, as well as any new ones that would be helpful to Workflow users!\n\nworkflow-examples/ - general Workflow examples, showing how to use a given plugin with Workflow, quirks of the Workflow DSL syntax, and more.\n\nglobal-library-examples/ - examples of how to write code for the Workflow global library.\n\njenkinsfile-examples/ - Sample Jenkinsfiles or other Workflow scripts from SCM .\n\nDuring Hacksgiving some initial content was added, but not everything is covered yet, which is why I’m posting this - more is needed. We’d love to see your tips, examples, gotchas and more. If you’ve got Workflow scripts you’d like to contribute, please read the README and send a pull request. Thanks!","title":"Workflow Best Practices and Examples repo on GitHub","tags":["general","jenkinsci","pipeline","workflow"],"authors":[]}},{"node":{"date":"2015-12-09T00:00:00.000Z","id":"148dd449-fc89-5659-8d17-987049a9f589","slug":"/blog/2015/12/09/security-updates-released-today/","strippedHtml":"We released Jenkins updates today that include important security fixes: 1.641 and 1.625.3. For detailed information about the security content of these updates, see the security advisory.\n\nOne of these fixes, SECURITY-95, results in possible problems in plugins such as Maven Plugin, Javadoc Plugin, and HTML Publisher Plugin, so make sure to read all about that in the documentation.\n\nPlease note that the update site may lag a bit behind. If you want to update as soon as possible, download the releases from our site.","title":"Security updates released today","tags":["general","core","jenkinsci"],"authors":[]}},{"node":{"date":"2015-12-03T00:00:00.000Z","id":"51e550d9-2ab9-5be8-be79-96bef6d8ca1a","slug":"/blog/2015/12/03/pipeline-as-code-with-multibranch-workflows-in-jenkins/","strippedHtml":"Note: This is a guest post by Kishore Bhatia. Kishore works for CloudBees, building custom frameworks with Open Source software and helping customers solve engineering problems around continuous delivery and DevOps at scale.\n\nThis year some great new Jenkins features came out of the butler’s goodie bag - amongst them, the most important one being the ability to realize continuous delivery pipeline as code!\nThe features like Workflow Multibranch, pipeline-as-code (with a marker file that Jenkins looks for in your application’s SCM repository/branch, aptly named Jenkinsfile) are the foundations to making Jenkins super intelligent to automagically create workflows (rather, a CI/CD pipeline) to build your code and orchestrate the work required to drive your application from concept to delivery!\n\nOverview\n\nThe Workflow Multibranch feature (provided by the workflow plugin) provides the following key abilities:\n\nAutomatic Workflow (job) creation in Jenkins per new branch in the repo (assuming webhooks are registered from GH to Jenkins).\n\nBuild specific to that child-branch and its unique scm change and build history.\n\nAutomatic job pruning/deletion for branches deleted from the repository, according to the settings.\n\nFlexibility to individually configure branch properties, by overriding the parent properties, if required.\n\nJenkins pipeline-as-code (concept) enables you to maintain your CI/CD workflow logic in the project/application source code repo with no additional configuration to be maintained per branch in Jenkins.\n\nThe Workflow script to build/test/deploy your code is always synchronized with the rest of the source code you are working on.\n\nTo demonstrate the concept here - Let’s use a basic Java Web application project with a Maven pom.xml as shown in the structure below (this is using GitHub as the SCM but you can do this on SVN or Mercurial too).\n\nThis project has a marker file for Jenkins in the repo - Jenkinsfile. image:https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/pipeline-as-code-guest-blog/Pic1.png\n\nSo, what’s a Jenkinsfile? The Jenkinsfile is essentially your Jenkins Workflow, a script, that defines the CI/CD pipeline logic for a project with steps to build/test/deploy etc. captured in various stages.\n\nSo for our sample Java web application, a basic Jenkinsfile could be something like -\n\nnode {\n   // Mark the code checkout 'stage'....\n   stage 'Checkout'\n\n   // Checkout code from repository\n   checkout scm\n\n   // Get the maven tool.\n   // ** NOTE: This 'M3' maven tool must be configured\n   // **       in the global configuration.\n   def mvnHome = tool 'M3'\n\n   // Mark the code build 'stage'....\n   stage 'Build'\n   // Run the maven build\n   sh \"${mvnHome}/bin/mvn clean install\"\n}\n\nJust having this file in the source code repo root would mean that -\n\nJenkins will automatically recognize this branch and create appropriate jobs by itself.\n\nQuick, 1-step code checkout using: “checkout scm” in your workflow\n\nEvery time a new change is pushed to this branch, the branch is built and the commit status gets updated.\n\nWhen the branch is destroyed in the repository, or if Jenkinsfile is removed, the corresponding job gets destroyed from Jenkins automatically ( You can retain these jobs and/or archive the builds for audit/compliance requirements using the retention property - Orphan Item strategy)\n\nthere are various mechanisms to promote reuse of Workflow scripts, such as the Workflow Global Library.\n\nRequired Jenkins configuration\n\nMake sure you’ve the latest Workflow and (v1.11 as of writing this blog) Workflow Multibranch plugins installed on your Jenkins instance image:https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/pipeline-as-code-guest-blog/Pic2.png\n\nAlso, ensure that other dependencies, like SCM plugins and build tools, are met:\n\nEither SVN/Git/Mercurial (depending on your SCM)\n\nGitHub Branch Source Plugin (optimized to use the GitHub API and improve performance)\n\nMaven build tool\n\nFinally, make sure you’ve created the required Webhook from your SCM (Github in this case) to Jenkins.\nHere’s how to do that:\n\nSetting up GitHub Webhooks in Jenkins\n\nStep-by-step guide to setting up Jenkins for GitHub projects\n\nThen create a new Multibranch Workflow Job with configuration as shown below - mainly selecting the Branch Sources (Git, in this example) and providing the branch/repo URL with credentials.\n\nBranch sources (Git) - https://github.com/kishorebhatia/pipeline-as-code-demo (or a repo where you’ve cloned this source code with Jenkinsfile)\n\nLeave all other properties default and Save. image:https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/pipeline-as-code-guest-blog/Pic3.png\n\nYou’ll observe that Jenkins would perform Branch Indexing on that “cd” job folder and start the workflow for the master branch, with an automatically created new job, named master, under the “cd” folder.\n\nThe workflow does a dummy step for application deploys to the environments in this sequence Staging -> Waits for manual approval -> PROD\n\nNow, let’s create a new branch off of this master branch in your cloned git repo:\n\n$ git branch newBranch (create a newBranch)\n\n$ git checkout newBranch (switches to newBranch)\n\n$ git push --set-upstream origin newBranch (pushes newBranch)\n\nYou’ll observe that your Jenkins instance automatically picks up this newBranch and starts running the workflow (with the Jenkinsfile in this newBranch) to build/test/deploy the code. image:https://web.archive.org/web/*/https://agentdero.cachefly.net/continuousblog/pipeline-as-code-guest-blog/Pic4.png\n\nNext, if you now delete this newBranch ( git branch -D newBranch), Jenkins will automatically remove the orphan Workflow job for newBranch. You can retain these jobs even after the branches are deleted using the Orphaned Item Strategy property in the main \"cd\" job’s configuration.\n\nSo we observed the following benefits of this pipeline-as-code approach:\n\nOverall job definition is a script (Jenkinsfile)\n\nCalls your build tools and scripts for details\n\nThe build script can be versioned alongside project sources\n\nJenkins handles feature/experimental branches automatically\n\nKeep less configuration in $JENKINS_HOME\n\nDockerized Demo environment\n\nYou can also use the following docker image to run this demo with a preconfigured Jenkins environment and the sample job: jenkinsci/workflow-demo (i.e. docker pull jenkinsci/workflow-demo)\n\nThis docker container includes Jenkins with Workflow and Workflow Multibranch plugins, a local git repo with the aforementioned Java web application and Jetty to demonstrate a continuous delivery pipeline of this application deployed and tested across multiple environments in the pipeline with an approval gate before promoting to PROD (like QA, Staging and PROD).\n\nThere’s a \"cd\" job pre-configured as a multibranch Workflow job.\n\nLaunch the docker demo as: docker run -p 8080:8080 -p 8081:8081 -p 9418:9418 -ti jenkinsci/workflow-demo\n\nNow, you can access Jenkins on port 8080 and Jetty on port 8081 from localhost or the IP of your boot2docker/docker-machine environment.\n\nThe demo container has a local git repo so you can clone: git://localhost/repo. When creating new branches, each branch automatically creates a matching subproject in Jenkins and triggers the build for that branch. The workflow:\n\nChecks out source code from the same repository and commit as Jenkinsfile.\n\nBuilds sources via Maven with unit testing.\n\nRuns two parallel integration tests that involve deploying the app to ephemeral server instances, which get thrown away when tests are done (this is done by using auto-deployment of Jetty)\n\nOnce integration tests are successful, the webapp gets to the staging server at localhost:8081/staging (or your docker-machine/boot2docker instance IP)\n\nrequires a human to Manually inspect the staging instance, and when ready, approves the deployment to the production server at http://localhost:8081/production/\n\nReferences\n\nDeveloper blog by jglick introducing multibranch support\n\nworkflow plugin tutorial\n\nworkflow plugin presentations\n\nworkflow plugin demo readme","title":"Pipeline-as-code with Multibranch Workflows in Jenkins","tags":["general","guest post","tutorial","pipeline","workflow"],"authors":[]}},{"node":{"date":"2015-12-02T00:00:00.000Z","id":"225e35ac-aaf9-5523-a569-3d9679163b6e","slug":"/blog/2015/12/02/hacksgiving-left-overs/","strippedHtml":"Last week we hosted our first Hacksgiving event, a two-day virtual hackathon with a number of recorded sessions and plenty of pull requests submitted, I would say it was a success! I would like to thank everybody who took the time to watch, chat and present in the Hacker Hangout.\n\nNow that everybody has had time to recover from the turkey and travel, we have some videos of the sessions sliced out and ready for publication.\n\nIn addition to the recorded sessions, there were a number of notes captured with useful links associated with practically each session. You can find those notes at the bottom of the Hacksgiving page.\n\nThe following videos are all available in this YouTube playlist\n\nIntro to the Jenkins project\n\nThis session was hosted by rtyler and meant to provide a cursory overview of where to get started with contributing to the Jenkins project\n\nIntro to Plugin Development Workshop\n\nThis session was given both days of Hacksgiving by schristou and does a really great job of introducing the viewer to getting started with developing a Jenkins plugin with Java.\n\nWorkflow Q&A and Demo Session\n\nThis session was not originally scheduled, but some folks on the Jenkins IRC channel had some Workflow questions and Jesse Glick jumped into the Hacker Hangout to help us out!\n\nInternationalization Live Coding / Q&A\n\nAnother impromptu session, this time with danielbeck hosting. In this session Daniel walks through a plugin he was working on for Hacksgiving and adds internationalization support while answering a few questions here and there.\n\nIntro to the new static site\n\nKicking off day two of Hacksgiving, rtyler hosted a session on the new statically-generated Jenkins site. The new site will dramatically lower the barrier to entry for contribution to Jenkins documentation and blogs, by pushing everything through GitHub.\n\nPlugin Developer Open Q&A\n\nThis was the last session of Hacksgiving, hosted by abayer and ended up being more like a casual discussion of the current status and future work in the plugin development ecosystem.","title":"Hacksgiving Left-overs","tags":["general","meetup","video","pipeline","workflow"],"authors":[]}},{"node":{"date":"2015-11-16T00:00:00.000Z","id":"db5c80d7-2a54-5a76-971c-c77bb53ad0d6","slug":"/blog/2015/11/16/celebrating-hacksgiving/","strippedHtml":"Next week in the US we have a national holiday where, generally speaking, lots of turkey gets converted into left-over turkey sandwiches. For many software developers the Thanksgiving holiday also represents a lull in project schedules, freeing up some time to hack on pet projects or even contribute to open source projects.\n\nTaking a cue from the Adopt a Plugin program that Daniel wrote about earlier this month, we thought it would be fun to organize a \"virtual hackathon\" to coincide with that gap in project schedules. Thus Hacksgiving 2015 was created!\n\nWe’ll be hosting Hacksgiving Nov 23rd and Nov 24 from 7:00PST - 15:00PST (10:00EST - 18:00EST) and would love for you to join! ( RSVP here)\n\nYou don’t need to know Java to help! We will have documentation and design hacking going on as well.\n\nWe have a few goals for Hacksgiving:\n\nIntroduce new contributors to the process of writing code and/or documentation ( documentation hacking details here).\n\nFind some plugins which are up for adoption new maintainers.\n\nClean up or merge some existing plugins which need some care ( listed here).\n\n=== Sessions to note\n\nHere are some of the sessions scheduled that will be hosted by members of community that may interest you:\n\nDay One\n\n7:00PST/10:00EST ( 15-30min) - rtyler will host a welcome and introduction to contribution to the Jenkins project (walking through our contributors guide)\n\n10:00PST/13:00EST ( 60min) - schristou will host a workshop titled \"Introduction to plugin development for Jenkins\"\n\nDay Two\n\n10:00PST/13:00EST ( 60min) - abayer will be hosting a \"Plugin Developer Open Q&A\" session, so bring your questions!\n\nHacksgiving is very unconference structured right now, so if you’re interested in hosting a session please let us know in the #jenkins-community channel or by signing up for a session on the schedule\n\nHow to participate\n\nSince this is a virtual hackathon, we’ll be congregating and chatting in a couple of ways:\n\nOn the #jenkins IRC channel as per usual\n\nWe’ll be hosting sessions and tutorials via Google Hangouts, see the \" hacker hangout * section on the wiki page up to date details\n\nVia the #hacksgiving hashtag on Twitter\n\nYou can also RSVP on our meetup page!\n\nWe hope you can join in the festivities!","title":"Celebrating Hacksgiving!","tags":["general","cia","just for fun"],"authors":[]}}]}},"pageContext":{"tag":"general","limit":8,"skip":16,"numPages":33,"currentPage":3}},
    "staticQueryHashes": ["3649515864"]}