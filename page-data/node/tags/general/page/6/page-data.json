{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/general/page/6",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2015-09-03T00:00:00.000Z","id":"54daf997-6adf-5784-ac6a-b0973df0dead","slug":"/blog/2015/09/03/jenkins-user-conference-west-day-1/","strippedHtml":"+\nimage:https://pbs.twimg.com/media/CN6MLZnUsAAj0RD.jpg[image,width=300] +\n\n+\n+\n\n+\nBoy, what a day! This is the 5th annual JUC in San Francisco bay area, and the crowd is getting bigger. +\n\n+\n+\n\n+\nI brought the LEGO Jenkins + CloudBees logo mosaic that we built at the CloudBees San Jose office:\n\n+\n+\n\n+\nimage:https://pbs.twimg.com/media/CN6Cid3UEAEx5xK.jpg[image,width=500] +\n\n+\n+\n\n+\nThe community booth was very busy. We have people like Dean Yu (board), Andrew Bayer (board), Mark Waite (git), Jesse Glick (workflow and core), Daniel Beck (core), Vincent Latombe (literate), Steven Christou (subversion) and Owen Mehegan (community outreach) talking to people all day long.\n\n+\n+\n\n+\nIf you are here, make sure to stop by, and if you are not, follow news with https://twitter.com/search?q=%23jenkinsconf[#jenkinsconf].","title":"Jenkins User Conference West Day 1","tags":["general","juc","pipeline","workflow"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"blog/author/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2015-09-01T00:00:00.000Z","id":"f4f82a03-90a1-51e1-90ce-480982463d6d","slug":"/blog/2015/09/01/take-the-2015-jenkins-survey/","strippedHtml":"Just as in past years, we are running a survey this year, to get some objective insights into what our users would like to see in the Jenkins project. Obviously, the developers in the project deal with individual bug reports and feature requests all the time, but sometimes those day-to-day issues distract you from a bigger picture.\n\nThis year, we kept some of the questions the same, so that we can see the trend over time. But we also wanted to bring in some questions around how you are using Jenkins and what other technologies you leverage such as Linux containers and cloud services.\n\nThe survey will close at the end of September and, if you participate, you’ll get to see the results first. CloudBees is sponsoring the survey and as an added incentive for us to fill it out, CloudBees has pitched in a $100 Amazon gift card (thanks CloudBees!). Information you submit is only going to be used by the community and not by CloudBees. So please take the survey and let your voice be heard.\n\nFinally, there are laws that govern prize giveaways like this and CloudBees has put up terms and conditions for this.\n\nTake the survey here","title":"Take the 2015 Jenkins Survey!","tags":["general","news","jenkinsci"],"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"blog/author/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2015-08-31T00:00:00.000Z","id":"11007e50-9999-5e16-acb6-26b8b01f1bad","slug":"/blog/2015/08/31/jenkins-cia-program-and-meetup-updates/","strippedHtml":"A few years ago, the Jenkins community announced the Jenkins CIA program - the Continuous Integration Ambassador initiative to spread the word of Jenkins. As of recently, there hasn’t been as much activity, so this program needs to be revived!\n\n+\n+\n\nThere are over 120,000 active Jenkins installations now and that number just keeps climbing and climbing. It’s important to bring all of us together through big events like the Jenkins User Conference, but not everyone can get there. That is why Meetups and smaller Jenkins events are crucial.\n\n+\n+\n\nTo support this effort, CloudBees has announced that they will be sponsoring the kickoff of the CIA revival/https://jenkins-ci.org/content/bay-area-jenkins-area-meet-looking-you[JAM] to help the Jenkins community host these Meetups!\n\n+\n+\n\nTo kick this off, the first Jenkins Area Meetup (JAM) is in the San Jose CloudBees office on Sept 23. We are shooting to have a JAM everything 3rd Wednesday of every month to consistently bring the community together.","title":"Jenkins CIA Program and Meetup Updates","tags":["general","cia","meetup","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}},{"node":{"date":"2015-08-31T00:00:00.000Z","id":"41e42ddb-f0a7-502f-99e6-9d0968d76a04","slug":"/blog/2015/08/31/juc-speaker-blog-series-laurette-cisneros-juc-u-s-west/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/Jenkins_Butler_0.png[image,width=114,height=128] +\n\n+\n+\n\nLast year’s JUC West 2014 was packed with good gems of information – such as \"how we did it\" talks where the speakers shared their points of view on the tools they use for automating their pipeline. At JUC and other conferences I especially seek out talks about how others implement their Continuous Delivery processes. At the upcoming JUC West 2015, it is my turn to share “how we did it” at Perforce. I will present my talk \"Continuous Delivery: Driving Lessons” and describe our journey, the rewards we reaped, and the challenges we faced along the way.\n\n+\n+\n\nAt Perforce, we see Continuous Delivery as taking the proven technique of automation and expanding it to a solid set of practices that make the pipeline even more efficient. This includes empowering the product teams to own production and quality all the way from requirements to delivery, and moving from a central build and release team to a self-serve infrastructure to remove the \"friction\" in the workflow. These changes have allowed us to quickly, efficiently and reliably adapt our software in line with user feedback, shifts in the market, and changes to the business strategy.\n\n+\n+\n\nI look forward to seeing you there!\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/cisneros_0.preview.jpg[image,width=150,height=224] +\n\n+\n+\n\nThis post is by Laurette Cisneros, Engineering Tools Manager at Perforce Software. If you have your ticket to JUC U.S. West, you can attend her talk\"The Road to Continuous Delivery: Driving Lessons\" on Day 1.\n\n+\n+\n\nStill need your ticket to JUC? If you register with a friend you can get 2 tickets for the price of 1! Register here for a JUC U.S. West, the last JUC of the year!\n\n+\n+\n+\n+\n+\n+\n+\n+\n\nThank you to our sponsors for the 2015 Jenkins User Conference World Tour:\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/sponsors-06032015-02_0.png[image,width=598,height=579] +","title":"JUC Speaker Blog Series: Laurette Cisneros, JUC U.S. West","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}},{"node":{"date":"2015-08-31T00:00:00.000Z","id":"6428552e-8c9c-54a0-ac04-d0926fae9b71","slug":"/blog/2015/08/31/plugin-spotlight-version-column-plugin/","strippedHtml":"Most Jenkins controllers with a distributed build configuration will leverage nodes that run a agent.jar to start an agent. Regardless of whether the agent.jar is launched through a Java Web Start or SSH launcher, the jar will be copied from https://yourserver:port/jnlpJars/agent.jar to the build node. Keeping this jar up to date ensures that it picks up the newest features in a more recent release, such as the self-restart feature to keep agent JVMs “clean” and to automatically reconnect to their controller. Additionally, newer versions of this component may fix bugs or implement newer protocol versions with various improvements.\n\nWhat is the Version Column Plugin?\n\nLaunch methods designed to pull the latest agent.jar are not always reliable and some launch methods don’t even try to update the agent.jar. Therefore it can be useful to see what agent.jar version is running on a given build node and take offline any nodes which fails to update to the latest version of the jar.\n\nThe Version Column Plugin allows Jenkins controllers to do just this, adding a new column to the “Manage Nodes” view and a new option for version enforcement on the node configuration screen.\n\nGetting started\n\nAfter installing the Version Column Plugin, navigate to the list of nodes in your Jenkins instance by clicking Build Executor Status in the executors widget below the side panel on the Jenkins home page.\n\nIf the plugin installed successfully, you will see a new column simply called “Version”. This column displays the version of the agent.jar that each build node is using.\n\nThis column is simply displaying the versions, so enforcement of agent.jar versions will need to be configured elsewhere. To activate this, click on the “Configure” link in the node manager’s left-hand menu.\n\nYou will then see a set of options for agents. To activate version enforcement, check the “Version” box and apply your changes.\n\nWhen you update Jenkins, there’s a chance it’ll come with a new version of agent.jar. Now if the agent.jar on a particular agent doesn’t get updated automatically, the controller will take it offline and show a warning next to the out-of-date agent version number:\n\nThe Version Column Plugin is available for download in the Jenkins plugin manager or from its wiki page.","title":"Plugin Spotlight: Version Column Plugin","tags":["general","plugins"],"authors":[{"avatar":null,"blog":null,"github":"daniel-beck","html":"<div class=\"paragraph\">\n<p>Daniel is a Jenkins core maintainer and, as security officer, leads the <a href=\"/security/#team\">Jenkins security team</a>.\nHe sometimes contributes to developer documentation and project infrastructure.</p>\n</div>","id":"daniel-beck","irc":null,"linkedin":null,"name":"Daniel Beck","slug":"blog/author/daniel-beck","twitter":null}]}},{"node":{"date":"2015-08-28T00:00:00.000Z","id":"ce04a771-8974-5a33-994a-d86b1aebdcbd","slug":"/blog/2015/08/28/juc-speaker-blog-series-jamie-omeara-juc-u-s-west/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/Jenkins_Butler_0.png[image,width=114,height=128] +\n\n+\n+\n\nCloud Native and the benefits to Continuous Delivery (CD) Pipelines\n\n+\n+\n\nThere’s a lot of discussion lately around Cloud Native. If this term is new to you, I suggest a quick read of Cloud Native: What it Means and Why it Matters? From my perspective, Cloud Native offers tremendous benefit to enterprise companies, startups and developers looking to add value quickly or capture market share. Cloud Native platforms, such as Cloud Foundry, provide a number of features to reduce the effort of developing software and operating it on or off premise. A few notable features include load balancing, application routing, cluster scheduling, and containerisation. Cloud Native also offers a significant advancement for building integrated pipelines to deliver software. Before we discuss these advancements, let’s consider the role of the container.\n\n+\n+\n\nContainers\n\n+\n\nOne of the most influential components of Cloud Native is the container. At this point, containers are fairly ubiquitous and most developers have experimented or used containers. For instance, if you’ve pushed an application to Cloud Foundry or Pivotal Web Services, you’ve used an container without knowing it.\n\n+\n+\n\nInitially containers were a place to automate the deployment and execution of your code, but over time customization became necessary to handle specific use cases. As a result, container creation now occurs earlier in the development and build phase. As applications are packaged within binaries and containers, validation of the application and container configuration needs to be validated before leaving the developer’s laptop. So what does this mean for the continuous delivery (CD) pipeline?\n\n+\n+\n\nCD Pipelines\n\n+\n\nDevelopers will tell you their role has expanded over the years as agile methodologies have changed the way software is engineered. Techniques like Test Driven Development (TDD) and CD pipelines encourage software teams to deliver higher quality code in every build. Of course, a good CD pipeline starts at the developer’s laptop. Building and testing the start of a pipeline requires the correct tools while preserving the developer’s choice of container.\n\n+\n+\n\nThe diagram below demonstrates a simple CD pipeline. As you can see, the pipeline starts from the developer’s IDE and uses Cloud Foundry’s Lattice to provide a sandbox to validate the delivery artifacts. Lattice, based on Cloud Foundry’s container scheduler, delivers a small Cloud Native Platform that can be scaled up in the cloud or scaled down to a laptop. It includes a cluster scheduler, HTTP load balancing, log aggregation and health management for containers. Best part, it offers developer choice. Lattice provides support for both Docker containers and Cloud Foundry buildpacks.\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/omeara-pic_0.png[image,width=600,height=366] +\n\n+\n+\n\nLattice’s flexibility makes it extremely easy to test how the application, which runs in a Docker container, will function in a Cloud Native environment. It’s also extremely helpful for developers engaged in a spike (prototype phase) where they want to push, validate and demonstrate code and let the platform handle the container creation, runtime environment and deployment artifacts via Cloud Foundry buildpacks.\n\n+\n+\n\nExtending the CD pipeline beyond the developer’s laptop to deliver value to the organization will require additional tools like the CloudBees Jenkins Platform, Artifactory and Pivotal Cloud Foundry. These enterprise build-and-deploy solutions help developers deliver to a Cloud Native platform and reduce the time to establish the feedback loop. If the enterprise maintains a Hybrid cloud strategy, these tools make it seamless to deploy across different cloud providers.\n\n+\n+\n\nAs developers build more Cloud Native applications for Cloud Native platforms, it’s important to establish good tool chains and best practices early in the development phase. Interested to see these tools in action? Join us at Jenkins User Conference West on September 2nd to learn how I use these tools to build Integrated Deployment Pipelines with Jenkins and Cloud Foundry.\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/OMeara_0.jpg[image,width=145,height=180] +\n\n+\n+\n\nThis post is by Jamie O’Meara, Field Engineer at Pivotal. If you have your ticket to JUC U.S. West, you can attend his talk\"An Integrated Deployment Pipeline with Jenkins and Cloud Foundry\" on Day 1.\n\n+\n+\n\nStill need your ticket to JUC? If you register with a friend you can get 2 tickets for the price of 1! Register here for a JUC U.S. West, the last JUC of the year!\n\n+\n+\n+\n+\n+\n+\n\nThank you to our sponsors for the 2015 Jenkins User Conference World Tour:\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/sponsors-06032015-02_0.png[image,width=598,height=579] +","title":"JUC Speaker Blog Series: Jamie O'Meara, JUC U.S. West","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}},{"node":{"date":"2015-08-25T00:00:00.000Z","id":"f5780b57-95a9-5ef9-ae2b-4adec694d1bd","slug":"/blog/2015/08/25/announcing-the-travel-grant-program/","strippedHtml":"We’re currently setting up a program to support community members' travel to Jenkins community events. Our goal is to enable more members of the community to meet each other and exchange ideas in person.\n\nWe’re still hashing out the details, but it’ll be available to every Jenkins community member. Apply, telling us what Jenkins-related event you’d like to attend and how awesome you are, and we may support your travel with up to 500 USD. For details on how this will work, see the current draft of the travel grant program.\n\nThe first person to be supported in this way is Pradeepto Bhattacharya from Pune, India. He was a speaker at this year’s JUC Europe in London, and will give two talks at JUC US West next week—​and we help him get there! He asked us a few weeks back whether the Jenkins project could support his trip to the US. We came to the conclusion that this would be a good idea—​so good in fact, that we decided to build a regular program from it.\n\nAre you planning to attend a JUC or similar event, but worry about the cost of travel? We may be able to help you out!","title":"Announcing the travel grant program","tags":["general","meetup","news"],"authors":[{"avatar":null,"blog":null,"github":"daniel-beck","html":"<div class=\"paragraph\">\n<p>Daniel is a Jenkins core maintainer and, as security officer, leads the <a href=\"/security/#team\">Jenkins security team</a>.\nHe sometimes contributes to developer documentation and project infrastructure.</p>\n</div>","id":"daniel-beck","irc":null,"linkedin":null,"name":"Daniel Beck","slug":"blog/author/daniel-beck","twitter":null}]}},{"node":{"date":"2015-08-24T00:00:00.000Z","id":"8a1cfe56-296c-5851-b85b-78e48cf4b5ac","slug":"/blog/2015/08/24/juc-speaker-blog-series-kaj-kandler-juc-u-s-west/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/Jenkins_Butler_0.png[image,width=114,height=128] +\n\n+\n+\n\nDeveloping Enterprise-Ready Plugins\n\n+\n+\n\nMy greatest surprise at JUC 2014 in Boston was how many enterprise Jenkins CI users had developed plugins for their own use. I had not pictured enterprise release managers as plugin developers. Here at Black Duck Software, we developed Jenkins plugins for four years running. Fabrice Solami, a sales engineer, wanted to do more than automate our code scanning tool via a shell script step in the Jenkins job. He wrote a first plugin that added a build step to run the tool and configure the job more comfortably. The plugin became quickly popular, and when customers asked for it to also support maven builds and run on agents, it was time for help from the engineering team, particularly the integration team I lead.\n\n+\n+\n\nOver the years we developed four more plugins and overhauled the original one with the user community (aka paying customers) growing to >75 organizations, mostly large or really large development organizations. In the process, we received lots of feedback and discovered some Jenkins features we feel are essential for good plugin design for the enterprise. Let me share these insights so that you can consider them in your plugin development.\n\n+\n+\n\nCredentials Plugin\n\n+\n+\n\nOur plugins connect to our web applications and need authentication to utilize our SDK. The first plugins used username and password fields in every job configuration. That made tedious configuration work and stores the passwords in clear text in the configuration files on disk. Ouch!\n\n+\n+\n\nWe did wise up and started using the credentials plugin to manage username/passwords centrally and securely. It even allows setting authorization roles in such a way that the maintainer of a job can use the credentials without seeing the password. With that in place, our plugins are fit for banks and insurance companies and any other security-conscious organization.\n\n+\n+\n\nSupport the REST API\n\n+\n+\n\nDid you know that Jenkins talks REST? We found it to be an easy way to create and update jobs. It is a really handy tool. The REST API is easy to script for all sorts of external interactions.\n\n+\n+\n\nHowever, plugins need to do a little effort to support it on their part; yet it is almost trivial to do. So from our experience it should not be left out.\n\n+\n+\n\nWe wrote a small Java program that reads, creates, updates job configurations, and can trigger job runs. It reads the jobs and commits them to a file for easy mass editing and updates the jobs afterwards.\n\n+\n+\n\nOur internal use case is to manage regression tests. We have medium-sized lists of jobs that run regression tests. With this tooling we can create a new set of jobs for a given plugin that runs against a new target server, that is, a server version under QA. It all happens in less than 15 minutes.\n\n+\n+\n\nWe also made this part of our migration from our first plugin to its successor with all the enterprise capabilities, but incompatible configuration. Using the REST API and some more Java programs we can create a csv file / Excel spreadsheet with jobs that are configured with the previous plugin. The user can filter the list with the spreadsheet application as needed, and then use the resulting list as input to the batch upgrade tool. This makes the upgrade a gradual affair and not a tedious exercise in UI configuration changes.\n\n+\n+\n\nUpdateSites Manager Plugin\n\n+\n+\n\nIf you are developing plugins for in-house use, you have the option to install/update those through file upload. However, in an enterprise you likely have multiple Jenkins servers for different divisions, development groups, or regions. The notification of updates becomes tedious at best. Wouldn’t it be nice to run your own update site, so that your plugin(s) become discoverable in the “Available” tab of the “Manage plugins” screen? Wouldn’t it be a dream if available new versions show up automatically in the “Updates” tab, including Jenkins version compatibility check?\n\n+\n+\n\nUpdateSites Manager plugin by IKEDA Yasuyuki is the answer to your prayers. It is easy to install, and the process to create and publish an update site is not too complicated and can become part of your Jenkins job building/releasing the plugin.\n\n+\n+\n\nIn my presentation at JUC 2015 West, I’ll share more details on how this makes a difference and how you can use these techniques to make your plugins enterprise-grade. As a bonus, I’ll show you how to get a free vulnerability report for your Maven or Gradle builds.\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/Kandler_0.jpg[image,width=152,height=182] +\n\n+\n+\n\nThis post is by Kaj Kandler, Integration Manager atBlack Duck Software, Inc. If you have your ticket to JUC U.S. West, you can attend his talk\"Making Plugins that are Enterprise Ready\" on Day 1.\n\n+\n+\n\nStill need your ticket to JUC? If you register with a friend you can get 2 tickets for the price of 1! Register here for a JUC U.S. West, the last JUC of the year!\n\n+\n+\n+\n+\n+\n+\n\nThank you to our sponsors for the 2015 Jenkins User Conference World Tour:\n\n+\n+\n\n+\nimage:https://jenkins-ci.org/sites/default/files/images/sponsors-06032015-02_0.png[image,width=598,height=579] +","title":"JUC Speaker Blog Series: Kaj Kandler, JUC U.S. West","tags":["general","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":null,"html":"","id":"hinman","irc":null,"linkedin":null,"name":"Hannah Inman","slug":"blog/author/hinman","twitter":null}]}}]}},"pageContext":{"tag":"general","limit":8,"skip":40,"numPages":33,"currentPage":6}},
    "staticQueryHashes": ["3649515864"]}