{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/alexa",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2019-02-26T00:00:00.000Z","id":"c5e445a3-8d1e-5054-be35-b27be24516a0","slug":"/blog/2019/02/26/jenkins-alexa-voice-controlled-cicd/","strippedHtml":"Integrating Jenkins with Alexa to launch your pipelines and obtain results\nabout your deployments through voice is easier than you think.  Learn how Alexa\nChampion, Kesha Williams', latest side project teaches Alexa to deploy code to\nthe cloud.\n\nAlexa (named after the ancient library of Alexandria) is Amazon’s Artificial\nIntelligence (AI) powered intelligent voice assistant that runs in the cloud.\nSoftware engineers make Alexa smarter by creating apps, called skills.  From\nthe time that I developed my first Alexa skill, I dreamed of deploying my Java\nprojects to the cloud via voice.  For me, telling Alexa to deploy my code is\nthe ultimate level of cool!  I recently made my dream a reality when I devoted\na weekend to developing my newest Alexa skill, DevOps Pal.  In this blog, I\nwill show you how I developed DevOps Pal and hopefully inspire you to build\nyour own version.\n\nWhy Choose Voice to Deploy Code\n\nVoice-first technology is revolutionizing how we interact with technology because the interaction is simple, frictionless, and time-saving.\nFor me, voice is an easier way to control Jenkins and retrieve results about my deployments without having to touch a keyboard.\nIn this use case, voice is another access point for data and is a way to further automate the process of building, testing, and deploying a Java project to the cloud, improving efficiency.\n\nContinuous Integration and Continuous Delivery (CI/CD)\n\nIf you’re working with DevOps, you understand the need for Continuous Integration and Continuous Delivery (CI/CD) to automate the software delivery pipeline in a reproducible way.\nCI/CD is the practice of continuously building, testing, and deploying code once it’s committed to version control.\nDevOps and CI/CD provides software engineering teams with confidence in the code being pushed to production and shorter development lifecycles, which in the end produces happier users, clients, and customers.\n\nDevOps Pal Overview\n\nDevOps Pal is a private Alexa for Business skill that is used to kick off a Jenkins pipeline job.\nAlexa for Business was the perfect way for me to distribute DevOps Pal since I have the ability to enable the skill on an organization-by-organization basis, which gives me complete control over who has access.\nOnce DevOps Pal invokes the job, the pipeline status displays in real-time via the Blue Ocean Pipeline Run Details View Page.\n\nDevOps Pal Architecture\n\nI used several components and tools to create DevOps Pal. Let’s review the architecture in detail.\n\nThe flow begins by saying, \"Alexa, open DevOps Pal and deploy my code\", to the Echo device.\n\nThe Echo device listens for the wake word (e.g. Alexa, Echo, Computer, or Amazon), which employs deep learning technology running on the device to recognize the wake word the user has chosen.\nOnce the wake word is detected, what I say is recorded and sent to the Alexa Voice Service (AVS), which uses speech to text and natural language understanding (NLU) to identify my intent.\nMy intent is sent to DevOps Pal; the skill acts accordingly by kicking off the Jenkins job and sending a response back using text-to-speech synthesis (TTS), which makes the response natural sounding.\n\nLet’s explore each component in more detail:\n\nAlexa Voice Service (AVS) - I often refer to the Alexa Voice Service as the \"Alexa brain that runs in the cloud\". The AVS is a suite of services built around a voice-controlled AI assistant. The AVS is flexible enough to allow third parties to add intelligent voice control to any connected product that has a microphone and speaker, so Alexa is not limited to just Echo devices.\n\nAlexa Skills Kit (ASK) - ASK is the \"SDK\" (Software Development Kit) that allows developers to build custom skills for Alexa.\n\nAlexa Developer Portal - An Alexa skill includes a voice user interface, or VUI, to understand user intents, and a back-end cloud service to process intents by telling Alexa how to respond. The VUI and the integration with the back-end service is setup and configured through the Alexa Developer Portal.\n\nAWS Lambda - A chunk of code that runs in the cloud. Developers can run their code without having to provision or manage servers. Applications created with AWS Lambda are considered to be serverless. Lambda supports several popular languages like Python, Java, Node.js, Go, C#, etc.\n\nGitHub - A version control system for the Java project source code.\n\nJenkins on EC2 - I use Jenkins to build, test, and deploy my Java Application Programming Interface (API). Elastic Cloud Computer (EC2) is the virtual server where Jenkins is installed. Jenkins works alongside several other tools:\n\nMaven - A build automation tool for Java projects.\n\nJunit - A testing framework for Java projects.\n\nAWS Command Line Interface (CLI) - This is a command line tool that allows developers to access their Amazon Web Services (AWS) account.\n\nBlue Ocean - This is a plugin for Jenkins that provides an easy to use interface to create and monitor Jenkins pipelines.\n\nAWS Elastic Beanstalk - This is an orchestration service that allows developers to deploy and manage web applications in the AWS cloud.\n\nPostman - This is an HTTP client for testing APIs and web services.\n\nVoice Interaction Model\n\nThe Voice User Interface (VUI) describes the overall conversational flow and is setup via the Alexa Developer Console.\n\nA few important components of the VUI are the Invocation Name (how users launch your skill) and the Intents (phrases a user says to \"talk to\" or interact with your skill).\n\nSpecifically, the \"DeployCodeIntent\" is invoked when a user says one of several phrases (e.g. run jenkins pipeline, run jenkins job, deploy the code, deploy code, or deploy ) or a variation of the phrase like, \"deploy my code\".\n\nThe endpoint is the destination where the skill requests are sent for fulfillment.\nIn this case, the backend logic is an AWS Lambda authored in Python.\nThe business logic in the Python Lambda uses the Jenkins remote access API to trigger the job remotely.\nThe format of the URL to trigger the job is jenkins_url/job/job_name/build.\nThe API call uses BASIC authentication and a Jenkins Crumb passed in the HTTP request header for CSRF protection.\nAlternatively, since Jenkins 2.96, you can use an API token instead of a Jenkins Crumb and password to authenticate your API call.\n\nJenkins Job\n\nThe Jenkins job, 'alexa-cicd', is the job invoked from DevOps Pal.\nAlthough, the Jenkins Classic User Interface (UI) is functional, I prefer the Blue Ocean interface because it rethinks the user experience of Jenkins by making it visually intuitive.\nBlue Ocean is easily enabled via a plugin and leaves the option to continue using the Jenkins Classic UI should you so choose.\n\nAfter Alexa kicks off the 'alexa-cicd' job, I navigate to the Pipeline Run Details View Page, which allows me to watch the job status in realtime.\nThis job has four stages: Initialize, Build, Test, and Deploy.\nThe final stage, Deploy, uses the AWS Command Line Interface (CLI) on the Jenkins server to copy the artifact to Amazon Simple Storage Service (S3) and create a new Elastic Beanstalk application version based on the artifact located on S3.\n\nCool Features to Add\n\nThe ability to deploy code with voice is just the beginning.\nThere are several cool features that can easily be added:\n\nDevOps Pal can be updated to prompt the user for the specific Jenkins pipeline job name. This adds a level of flexibility that will really empower DevOps teams.\n\nAlexa Notifications can be integrated with DevOps Pal to send a notification to the Echo device when the Jenkins job is finished or when it fails. If the job fails, more information about where the job failed and exactly why will be provided. This will prove useful for long running jobs or for getting timely updates regarding the job status.\n\nDevOps Pal can be updated to answer direct questions about the real-time status of a specific job.\n\nWant to Learn More\n\nI hope you’ve enjoyed learning more about the architecture of DevOps Pal and deploying code to the cloud using Jenkins and voice.\nFor more detailed steps, I’ve collaborated with Cloud Academy to author a course, AWS Alexa for CI/CD on the subject.","title":"Jenkins + Alexa: Say Hello to Voice Controlled CI/CD","tags":["jenkins","alexa"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://www.kesha.tech/","github":"ProfessorKesha","html":"<div class=\"paragraph\">\n<p>Kesha Williams is an award-winning software engineering manager at Chick-fil-A with over 20 years' experience.\nShe has trained and mentored thousands of software developers in the US, Europe, and Asia while teaching at the university level.\nShe routinely leads innovation teams in proving out emerging technologies and shares her learnings at conferences across the globe.\nShe has published several Alexa skills, was featured during Amazon&#8217;s \"Alexa Women of Voice\" campaign, and recently named an Alexa Champion.\nIn her spare time, she leads the Georgia chapter of Technovation and mentors women in tech.</p>\n</div>","id":"keshawilliams","irc":null,"linkedin":null,"name":"Kesha Williams","slug":"/blog/author/keshawilliams","twitter":"keshawillz"}]}}]}},"pageContext":{"tag":"alexa","limit":8,"skip":0,"numPages":1,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}