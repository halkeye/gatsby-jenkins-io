{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/security/page/7",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2016-05-11T00:00:00.000Z","id":"31e502bf-b2a2-58e7-aec8-26b504df7584","slug":"/blog/2016/05/11/security-update/","strippedHtml":"We just released security updates to Jenkins that fix a number of low and medium severity issues. For an overview of what was fixed, see the security advisory.\n\nOne of the fixes may well break some of your use cases in Jenkins, at least until plugins have been adapted: SECURITY-170. This change removes parameters that are not defined on a job from the build environment. So, right now, a job could even be unparameterized, and plugins were able to pass parameters anyway. Since build parameters are added to the environment variables of scripts run during a build, parameters such as PATH or DYLD_LIBRARY_PATH can be defined — on jobs which don’t even expect those as build parameters — to change the behavior of builds.\n\nA number of plugins define additional parameters for builds. For example, GitHub Pull Request Builder passes a number of additional parameters describing the pull request. Release Plugin also allows adding several additional parameters to a build that are not considered to be defined in the job as part of this security fix.\n\nPlease see this wiki page for a list of plugins known to be affected by this change.\n\nUntil these plugins have been adapted to work with the new restriction (and advice on that is available further down), you can define the following system properties to work around this limitation, at least for a time:\n\nSet hudson.model.ParametersAction.keepUndefinedParameters to true, e.g. java -Dhudson.model.ParametersAction.keepUndefinedParameters=true -jar jenkins.war to revert to the old behavior of allowing any build parameters. Depending on your environment, this may be unsafe, as it opens you up to attacks as described above.\n\nSet hudson.model.ParametersAction.safeParameters to a comma-separated list of safe parameter names, e.g. java -Dhudson.model.ParametersAction.safeParameters=FOO,BAR_baz,quX -jar jenkins.war.\n\nI realize this change, among a few others that improve the security of Jenkins, may be difficult to adapt for some, but given the valuable secrets typically stored in Jenkins, I’m certain that this is the correct approach. We made sure to release this fix with the options described above, so that this change doesn’t block updating those that rely on this behavior.\n\nDevelopers have several options to adapt to this change:\n\nParametersAction actually stores all parameters, but getParameters() only returns those that are defined on the job. The new method getAllParameters() returns all of them. This can be used, for example by EnvironmentContributor extensions, to add known safe parameters to build environments.\n\nDon’t pass extra arguments, but define a QueueAction for your metadata instead. Those can still be made available to the build environment as needed.\n\nSubscribe to the jenkinsci-advisories mailing list to receive important notifications related to Jenkins security.","title":"Security updates for Jenkins core","tags":["core","security"],"authors":[{"avatar":null,"blog":null,"github":"daniel-beck","html":"<div class=\"paragraph\">\n<p>Daniel is a Jenkins core maintainer and member of the <a href=\"/security/#team\">Jenkins security team</a>.\nHe was the inaugural Jenkins security officer from 2015 to 2021.\nHe sometimes contributes to developer documentation and project infrastructure in his spare time.</p>\n</div>","id":"daniel-beck","irc":null,"linkedin":null,"name":"Daniel Beck","slug":"/blog/authors/daniel-beck","twitter":null}]}},{"node":{"date":"2016-04-22T00:00:00.000Z","id":"be010022-b98d-5767-afad-a1578cc4e23f","slug":"/blog/2016/04/22/possible-infra-compromise/","strippedHtml":"Last week, the infrastructure team identified the potential compromise of a key\ninfrastructure machine. This compromise could have taken advantage of, what\ncould be categorized as, an attempt to target contributors with elevated\naccess. Unfortunately, when facing the uncertainty of a potential compromise,\nthe safest option is to treat it as if it were an actual incident, and react\naccordingly. The machine in question had access to binaries published to our\nprimary and secondary mirrors, and to contributor account information.\n\nSince this machine is not the source of truth for Jenkins binaries, we verified\nthat the files distributed to Jenkins users: plugins, packages, etc, were not\ntampered with. We cannot, however, verify that contributor account information\nwas not accessed or tampered with and, as a proactive measure, we are issuing a\npassword reset for all contributor accounts. We have also spent significant effort\nmigrating all key services off of the potentially compromised machine to\n(virtual) hardware so the machine can be re-imaged or decommissioned entirely.\n\nWhat you should do now\n\nIf you have ever filed an issue in JIRA,\nedited a wiki page, released a plugin or\notherwise created an account via the Jenkins\nwebsite, you have a Jenkins community account. You should be receiving a\npassword reset email shortly, but if you have re-used your Jenkins account\npassword with other services we strongly encourage you to update your passwords\nwith those other services.  If you’re not already using one, we also encourage\nthe use of a password manager for generating and managing service-specific\npasswords.\n\nThe generated password sent out is temporary and will expire if you do not\nuse it to update your account. Once it expires you will need recover your\naccount with the password reset\nin the accounts app.\n\nThis does not apply to your own Jenkins installation, or any account that you\nmay use to log into it. If you do not have a Jenkins community account, there is\nno action you need to take.\n\nWhat we’re doing to prevent events like this in the future\n\nAs stated above, the potentially compromised machine is being removed from our\ninfrastructure. That helps address the immediate problem but doesn’t put\nguarantees in place for the future. To help prevent potential issues in the\nfuture we’re taking the following actions:\n\nIncorporating more security policy enforcement into our\nPuppet-driven infrastructure. Without a\nconfiguration management tool enforcing a given state for some legacy services,\nuser error and manual mis-configurations can adversely affect project security.\nAs of right now, all key services are managed by Puppet.\n\nBalkanizing our machine and permissions model more. The machine affected was\nliterally the first independent (outside of Sun) piece of project\ninfrastructure and like many legacy systems, it grew to host a multitude of\nservices. We are rapidly evolving away from that model with increasing levels\nof user and host separation for project services.\n\nIn a similar vein, we have also introduced a trusted zone in our\ninfrastructure which is not routable on the public internet, where sensitive\noperations, such as generating update center information, can be managed and\nsecured more effectively.\n\nWe are performing an infrastructure permissions audit. Some portions of our\ninfrastructure are 6+ years old and have had contributors come and go. Any\ninactive users with unnecessarily elevated permissions in the project\ninfrastructure will have those permissions revoked.\n\nI would like to extend thanks, on behalf of the Jenkins project, to\nCloudBees for their help in funding and\nmigrating this infrastructure.\n\nIf you have further questions about the Jenkins project infrastructure, you can\njoin us in the #jenkins-infra channel on Freenode\nor in an Infrastructure Q&A session I’ve scheduled for next Wednesday (April\n27) at 20:00 UTC (12:00 PST).","title":"Possible Jenkins Project Infrastructure Compromise","tags":["infra","security"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/c98b6de76465e89f9f5e5b331e9abfea/19e71/rtyler.jpg","srcSet":"/gatsby-jenkins-io/static/c98b6de76465e89f9f5e5b331e9abfea/77b35/rtyler.jpg 32w,\n/gatsby-jenkins-io/static/c98b6de76465e89f9f5e5b331e9abfea/d4a57/rtyler.jpg 64w,\n/gatsby-jenkins-io/static/c98b6de76465e89f9f5e5b331e9abfea/19e71/rtyler.jpg 128w,\n/gatsby-jenkins-io/static/c98b6de76465e89f9f5e5b331e9abfea/68974/rtyler.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/c98b6de76465e89f9f5e5b331e9abfea/ef6ff/rtyler.webp 32w,\n/gatsby-jenkins-io/static/c98b6de76465e89f9f5e5b331e9abfea/8257c/rtyler.webp 64w,\n/gatsby-jenkins-io/static/c98b6de76465e89f9f5e5b331e9abfea/6766a/rtyler.webp 128w,\n/gatsby-jenkins-io/static/c98b6de76465e89f9f5e5b331e9abfea/22bfc/rtyler.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/authors/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2016-04-11T00:00:00.000Z","id":"e9d4f87e-38f5-5fa5-8f99-7062f5a29099","slug":"/blog/2016/04/11/jenkins-plugins-security-update/","strippedHtml":"The Script Security Plugin and the Extra Columns Plugin were updated today to fix medium-severity security vulnerabilities. For detailed information about the security content of these updates, see the security advisory.\n\nSubscribe to the jenkinsci-advisories mailing list to receive important notifications related to Jenkins security.","title":"Security fixes in Script Security Plugin and Extra Columns Plugin","tags":["plugins","security"],"authors":[{"avatar":null,"blog":null,"github":"daniel-beck","html":"<div class=\"paragraph\">\n<p>Daniel is a Jenkins core maintainer and member of the <a href=\"/security/#team\">Jenkins security team</a>.\nHe was the inaugural Jenkins security officer from 2015 to 2021.\nHe sometimes contributes to developer documentation and project infrastructure in his spare time.</p>\n</div>","id":"daniel-beck","irc":null,"linkedin":null,"name":"Daniel Beck","slug":"/blog/authors/daniel-beck","twitter":null}]}},{"node":{"date":"2016-02-24T00:00:00.000Z","id":"835b1c88-08b7-5106-b8a6-6c102958eea3","slug":"/blog/2016/02/24/jenkins-security-update/","strippedHtml":"We released Jenkins updates today that include important security fixes: 1.650 and 1.642.2. For detailed information about the security content of these updates, see the security advisory.\n\nSubscribe to the jenkinsci-advisories mailing list to receive important notifications related to Jenkins security.","title":"Jenkins security updates","tags":["core","security"],"authors":[{"avatar":null,"blog":null,"github":"daniel-beck","html":"<div class=\"paragraph\">\n<p>Daniel is a Jenkins core maintainer and member of the <a href=\"/security/#team\">Jenkins security team</a>.\nHe was the inaugural Jenkins security officer from 2015 to 2021.\nHe sometimes contributes to developer documentation and project infrastructure in his spare time.</p>\n</div>","id":"daniel-beck","irc":null,"linkedin":null,"name":"Daniel Beck","slug":"/blog/authors/daniel-beck","twitter":null}]}}]}},"pageContext":{"tag":"security","limit":8,"skip":48,"numPages":7,"currentPage":7}},
    "staticQueryHashes": ["3649515864"]}