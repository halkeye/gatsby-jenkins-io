{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/java8",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2017-04-10T00:00:00.000Z","id":"0e7cf038-03bd-5373-8649-aa442a523d11","slug":"/blog/2017/04/10/jenkins-has-upgraded-to-java-8/","strippedHtml":"We announced in January\nthat Jenkins would be upgrading its Java runtime dependency to Java 8 this\nyear. After a sizable amount of preparation, this week’s release of\nJenkins 2.54 is the first weekly release to require\na Java 8 runtime.\n\nFor users of the weekly release, this means that Jenkins 2.54 must have\na Java 8 runtime installed on the system in order to\nrun. Those using the\njenkinsci/jenkins:latest\nDocker container won’t need to take any action, as the Java runtime environment\nis already bundled in the container.\n\nIn addition to upgrading the Java Runtime Environment for the controller, any\nconnected agents must upgrade to a Java 8 runtime environment.\n\nThe Long-Term Support (LTS) release line however, has\nnot yet been updated to require Java 8. We are expecting the first LTS release\nto require Java 8 in June.\n\nCompatibility Notes\n\nUsing the Maven project type with Java 7\n\nUsers with jobs configured with the \"Maven project\" type may not be able to use\nJava 7 for their Maven jobs. The correct behavior is not guaranteed so\nproceed at your own risk. The Maven Project uses Jenkins Remoting to establish\n\"interceptors\" within the Maven executable. Because of this, Maven uses\nRemoting and other Jenkins core classes, and this behavior may break an update.\n\nSee also:\nJENKINS-40990.\n\nJava 9 compatibility\n\nAt this point, Jenkins does not yet support Java 9 development releases.\n\nAs always, if you have questions please ask on the\njenkinsci-users@ mailing list or\nreport\nan issue in JIRA.\n\nReferences\n\nJVM statistics post back in November 2016.\n\nOfficial announcement blog post.\n\nOriginal JIRA ticket for this upgrade.\n\nThe 6 months, 82 messages, thread on the Jenkins developers mailing list\n\nThe announcement on the Jenkins users mailing list\n\nThe Pull request on Jenkins core","title":"Starting with 2.54, Jenkins now requires Java 8","tags":["java8"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8e8d8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/f1e03/batmat.jpg","srcSet":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/ede19/batmat.jpg 32w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/bc20c/batmat.jpg 64w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/f1e03/batmat.jpg 128w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/b691b/batmat.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/8ba60/batmat.webp 32w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/a9ea7/batmat.webp 64w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/51559/batmat.webp 128w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/28f98/batmat.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":130}}},"blog":"http://batmat.net","github":"batmat","html":"<div class=\"paragraph\">\n<p>Baptiste has been using and contributing to Jenkins since it was called differently, and is a huge proponent of the Agile, Devops &amp; Continuous Delivery movements.\nHe loves to discuss not only the technical aspects, but also the even more essential cultural aspects of this all, working together to improve the value provided to customers in a great inclusive and blameless environment.</p>\n</div>","id":"batmat","irc":null,"linkedin":null,"name":"Baptiste Mathus","slug":"/blog/authors/batmat","twitter":"bmathus"}]}},{"node":{"date":"2017-01-17T00:00:00.000Z","id":"51dc643a-7195-5ed6-b44d-6081914b07ff","slug":"/blog/2017/01/17/Jenkins-is-upgrading-to-Java-8/","strippedHtml":"In the next few months, Jenkins will require Java 8 as its runtime.\n\nBack in\nlast November,\nwe discussed interesting statistics showing that Jenkins was now running Java 8\non a majority of its running instances.\n\nTimeline\n\nHere is how we plan to roll that baseline upgrade in the next few months.\n\nNow: Announce the intention publicly.\n\nApril, 2017: Drop support for Java 7 in Jenkins weekly.\nWith the current rhythm, that means 2.52 will most likely be the first weekly to require Java 8.\n\nJune 2017: First LTS version requiring Java 8 is published.\nThis should be something around 2.60.1.\n\nIf you are still running Java 7, you will not be able to upgrade to the latest LTS version after some date probably around May 2017.\n\nWhy Upgrade to Java 8\n\nBalancing those numbers with many other criteria:\n\nJava 7 has been now end-of-lifed for 18+ months\n\nPeople are already moving away from Java 7, as show the numbers\n\n52.8% of instances were already running Java 8 back in last November, and now reaching 58% two months later.\n\nIf we only look at Jenkins 2.x, then we reach 72%.\n\nJava 8 runtime is known from the field to be more stable\n\nMany developers have been wanting to be allowed to leverage the improvements that Java 8 provides to the language and platform\n(lambdas, Date/Time API…​ just to name a few).\nBeing also a developer community, we want Jenkins to be appealing to contributors.\n\nIf you have questions or feedback about this announcement, please feel free to post it to the Jenkins developers mailing list.","title":"Jenkins Upgrades To Java 8","tags":["java8","upgrade"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8e8d8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/f1e03/batmat.jpg","srcSet":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/ede19/batmat.jpg 32w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/bc20c/batmat.jpg 64w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/f1e03/batmat.jpg 128w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/b691b/batmat.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/8ba60/batmat.webp 32w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/a9ea7/batmat.webp 64w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/51559/batmat.webp 128w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/28f98/batmat.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":130}}},"blog":"http://batmat.net","github":"batmat","html":"<div class=\"paragraph\">\n<p>Baptiste has been using and contributing to Jenkins since it was called differently, and is a huge proponent of the Agile, Devops &amp; Continuous Delivery movements.\nHe loves to discuss not only the technical aspects, but also the even more essential cultural aspects of this all, working together to improve the value provided to customers in a great inclusive and blameless environment.</p>\n</div>","id":"batmat","irc":null,"linkedin":null,"name":"Baptiste Mathus","slug":"/blog/authors/batmat","twitter":"bmathus"}]}}]}},"pageContext":{"tag":"java8","limit":8,"skip":0,"numPages":1,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}