{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/outreachy",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2019-09-23T00:00:00.000Z","id":"c729ed47-ed8f-594c-a5e9-e523cff8ffd2","slug":"/blog/2019/09/23/outreachy-audit-log-release/","strippedHtml":"Thanks to our Outreachy interns over the past year, I’m proud to announce the initial release of the Audit Log plugin for Jenkins.\nThis plugin is the first major project completed related to Outreachy, and I’d like to give a brief overview of the functionality that was developed for this release.\nThe primary goal of this plugin is to introduce an audit trail of various Jenkins events using structured logging and related audit logging standards.\nInitially, this plugin covers audit events related to core Jenkins concepts like user accounts, jobs, builds, nodes, and credentials usage.\nMore specifically, this tracks:\n\nUser login and logout events\n\nCredentials usage\n\nUser creation (when using the Jenkins user database as a security realm)\n\nUser password updates (ditto)\n\nStarts and ends of builds\n\nCreation/modification/deletion/copying of items (which correspond to projects, pipelines, folders, etc.)\n\nCreation/modification/deletion of nodes.\n\nThis plugin defines and exports standardized log event classes and schemas corresponding to these events.\nOther plugins can add audit-log as a dependency to define their own audit events using Apache Log4j Audit and its catalog editor; then they can use the Maven plugin for generating the audit event classes for use in the plugin.\n\nThe other major feature of this plugin is configuring where to output these audit logs.\nBy default, audit logs will be written in HTML files (rotated once per day) to $JENKINS_HOME/logs/html/audit.html which are viewable through the \"Audit Logs\" root action link.\nIn the system settings, a section for audit logging is added where the main audit log output can be configured.\nThis can initially be configured to output via either a JSON log file in $JENKINS_HOME/logs/audit.log by default or to a syslog server using RFC5424 encoding.\n\nOverall, this experience has been rather interesting.\nBesides having an opportunity to mentor new contributors, Outreachy has helped open my eyes to the struggles that developers from around the world are dealing with which can be improved upon to help expand our communities.\nFor example, many countries do not have reliable internet or electricity, so the use of synchronous videoconferencing and other heavyweight, synchronous processes common to more corporate-style development are inadequate in this international context.\nThis doesn’t even begin to account for the difference in timezones which is not always an issue, though both problems are addressable by using asynchronous communication methods like chat and email.\nThis notion of asynchronous communication is an important aspect of the Apache Way, for example, which emphasises processes that allow for vendor neutral communities to form and thrive around a project.\n\nThis mentoring project was valuable to myself as well.\nAs a software engineer myself, project management is not my specialty, so this gave me a great opportunity to develop my own PM skills and technical leadership.\nMy own typical discovery process for feature development involves experimenting directly with the code to see what features make sense to prioritize and which would take a vast effort to implement.\nChanging my own discovery process to avoid implementing the features myself was difficult to adjust to, though I did defer any of my own feature contributions to this plugin until after the initial release.\nIn order to appropriately scope the project, I still had to spend a bit of time reading through the Jenkins codebase to determine which tasks could be implemented simply (e.g., good newbie-friendly issues), which tasks might require changes to Jenkins itself (previously discovered to take too long for these relatively short Outreachy rounds), and which tasks would require intimate familiarity with Jenkins and would likely be infeasible for new developers to Jenkins.\nThanks to the work done in discovery and delivery, I’ve also identified potential features for Log4j itself which could be used in future versions of this plugin.\n\nOverall, I think we did a good job of balancing the scope of this project without spending too much time in any specific area.\nThe first release of this plugin is now available in the Jenkins Update Center.\nIn the future, I hope to learn more about developing Jenkins UI components so that we can create a more dynamic and Jenkins-like configuration page for choosing where logs are output.\nWhile I don’t intend on using this plugin for further Outreachy rounds, I do hope to see more interest in it over time as the more security-conscious users out there discover this new plugin.","title":"Audit Log Plugin for Jenkins Releases 1.0","tags":["outreachy","logging","security","plugin","community"],"authors":[{"avatar":null,"blog":"https://musigma.blog/","github":"jvz","html":"<div class=\"paragraph\">\n<p>Mathematician, software engineer, and free software evangelist.\nWorks for CloudBees on the <a href=\"https://jenkins.io/security/\">Jenkins Security Team</a> along with other Jenkins community work since 2018.\nPMC Chair of the <a href=\"https://logging.apache.org/\">Apache Logging Services project</a> and Secretary for the <a href=\"https://www.apache.org/\">Apache Software Foundation</a>.</p>\n</div>","id":"jvz","irc":null,"linkedin":null,"name":"Matt Sicker","slug":"/blog/authors/jvz","twitter":"jvz"}]}},{"node":{"date":"2019-05-22T00:00:00.000Z","id":"50433d34-f53f-56da-b4f5-354c5b873ee1","slug":"/blog/2019/05/22/outreachy-audit-log-project/","strippedHtml":"The Audit Log Plugin for Jenkins is an in development project to integrate standardized audit logging trails to various core actions in Jenkins.\nThis project integrates the recently released Apache Log4j Audit library to allow for a vast array of possible audit logging destinations and configuration.\nWe began this plugin not long after Log4j Audit 1.0.0 was released last year by partnering with Outreachy where we mentored two interns who laid the foundations of the project.\nThis year, we applied to Outreachy again to continue the project, and we were able to accept two more Outreachy interns: Aarthi Rajaraman and Gayathri Rajendar.\nBoth have already been adding new features and improving the plugin over the past couple months, and the internship officially began on 20 May.\n\nThis round has some ambitious goals of various features and documentation we wish to create.\nAfter having added audit log support for several built-in event listeners in Jenkins around the lifecycle of projects, builds, nodes, and authentication during both the previous internship and the applications to this one, we would like to accomplish the following:\n\nMake a 1.0 release of the plugin for the Jenkins Update Center. #34\n\nAdd documentation on supported audit log types and configuration options. #40\n\nAdd audit logs for credential usage and lifecycle events. #35, #36\n\nAdd audit logs for user property lifecycle events. #37\n\nDefine or document an API for other plugins to use to define and log their own audit events. #30\n\nEnsure audit log events use consistent vocabulary with the Jenkins UI. #33\n\nAdd an audit log event recorder/viewer comparable to the Jenkins logger recorder administrative UI. #32\n\nAdd support for configuring a syslog-compatible log server for writing audit logs. #29\n\nAdd support for configuring a relational database such as PostgreSQL for writing audit logs. #31\n\nImprove unit test coverage and pay down technical debt. #38\n\nBegin discovery on alternative ways to manage the underlying Log4j Core configuration such as via the upcoming integration with Spring Cloud Configuration. #39\n\nIn the future, we hope to participate with more projects and mentors.\nGoing on concurrently with Outreachy right now is Google Summer of Code 2019 where we are mentoring several more projects and students.\nPlease extend a warm welcome to all our new contributors and community members from Outreachy and GSoC!","title":"Audit Logging in Jenkins: An Outreachy Project","tags":["community","logging","outreachy"],"authors":[{"avatar":null,"blog":"https://musigma.blog/","github":"jvz","html":"<div class=\"paragraph\">\n<p>Mathematician, software engineer, and free software evangelist.\nWorks for CloudBees on the <a href=\"https://jenkins.io/security/\">Jenkins Security Team</a> along with other Jenkins community work since 2018.\nPMC Chair of the <a href=\"https://logging.apache.org/\">Apache Logging Services project</a> and Secretary for the <a href=\"https://www.apache.org/\">Apache Software Foundation</a>.</p>\n</div>","id":"jvz","irc":null,"linkedin":null,"name":"Matt Sicker","slug":"/blog/authors/jvz","twitter":"jvz"}]}},{"node":{"date":"2019-03-28T00:00:00.000Z","id":"3add1f77-2dd4-5731-912e-279ff12aa081","slug":"/blog/2019/03/28/outreachy-review/","strippedHtml":"Over the past three months, I have been mentoring two Outreachy interns, David and Latha, with my co-mentor, Jeff Thompson.\nOur project was to introduce a standardized way for creating an audit log of Jenkins and plugins using Apache Log4j Audit.\nWhile this type of feature is addressed by other existing plugins, there is no unifying way for plugins to contribute their own actions.\nThis project provided ample opportunities for each of our interns to experience the community processes for starting a new Jenkins plugin, contributing changes to Jenkins itself in order to support more audit event types, using CICD principles, and developing a Jenkins Enhancement Proposal to begin the standardization process of audit logging throughout the ecosystem.\n\nDuring this internship, David and Latha contributed several aspects of the project, much of which lays the foundation for easily instrumenting more subsystems and plugins with audit logs.\nA template log4j2.xml file is used for allowing more complex logging output configurations with a configuration UI.\n\nNew APIs have been introduced in Jenkins to allow for more authentication-related events to be audited by the plugin.\nAudit events have been defined for a few authorization scenarios and some build events.\nFor example, here is a snippet of audit log output for a build execution in the JSON layout:\n\n{\n  \"thread\" : \"Executor #0 for master : executing test #1\",\n  \"level\" : \"OFF\",\n  \"loggerName\" : \"AuditLogger\",\n  \"marker\" : {\n    \"name\" : \"Audit\",\n    \"parents\" : [ {\n      \"name\" : \"EVENT\"\n    } ]\n  },\n  \"message\" : \"Audit [buildStart buildNumber=\\\"1\\\" cause=\\\"[Started by user anonymous]\\\" projectName=\\\"test\\\" timestamp=\\\"Mon Mar 25 13:48:09 CDT 2019\\\" userId=\\\"SYSTEM\\\"]\",\n  \"endOfBatch\" : false,\n  \"loggerFqcn\" : \"org.apache.logging.log4j.audit.AuditLogger\",\n  \"instant\" : {\n    \"epochSecond\" : 1553539689,\n    \"nanoOfSecond\" : 810000000\n  },\n  \"contextMap\" : { },\n  \"threadId\" : 54,\n  \"threadPriority\" : 5\n}\n{\n  \"thread\" : \"Executor #0 for master : executing test #1\",\n  \"level\" : \"OFF\",\n  \"loggerName\" : \"AuditLogger\",\n  \"marker\" : {\n    \"name\" : \"Audit\",\n    \"parents\" : [ {\n      \"name\" : \"EVENT\"\n    } ]\n  },\n  \"message\" : \"Audit [buildFinish buildNumber=\\\"1\\\" cause=\\\"[Started by user anonymous]\\\" projectName=\\\"test\\\" timestamp=\\\"Mon Mar 25 13:48:10 CDT 2019\\\" userId=\\\"SYSTEM\\\"]\",\n  \"endOfBatch\" : false,\n  \"loggerFqcn\" : \"org.apache.logging.log4j.audit.AuditLogger\",\n  \"instant\" : {\n    \"epochSecond\" : 1553539690,\n    \"nanoOfSecond\" : 155000000\n  },\n  \"contextMap\" : { },\n  \"threadId\" : 54,\n  \"threadPriority\" : 5\n}\n\nBest of all, this project has helped instill important software engineering values such as automated testing and continuous delivery.\n\nAs we conclude this round, we look forward to participating in the next Outreachy internship to continue this project and grow the community.\nFor more information about the next round, check out the Outreachy website.","title":"Outreachy 2018-2019 In Review","tags":["outreachy"],"authors":[{"avatar":null,"blog":"https://musigma.blog/","github":"jvz","html":"<div class=\"paragraph\">\n<p>Mathematician, software engineer, and free software evangelist.\nWorks for CloudBees on the <a href=\"https://jenkins.io/security/\">Jenkins Security Team</a> along with other Jenkins community work since 2018.\nPMC Chair of the <a href=\"https://logging.apache.org/\">Apache Logging Services project</a> and Secretary for the <a href=\"https://www.apache.org/\">Apache Software Foundation</a>.</p>\n</div>","id":"jvz","irc":null,"linkedin":null,"name":"Matt Sicker","slug":"/blog/authors/jvz","twitter":"jvz"}]}},{"node":{"date":"2018-12-10T00:00:00.000Z","id":"eb4020fb-4167-5e6e-8795-9cfb2603d8a6","slug":"/blog/2018/12/10/outreachy-audit-log-plugin/","strippedHtml":"This year marks the first time the Jenkins project is participating in Outreachy.\nOutreachy is a program similar to Google Summer of Code (GSoC) where interns work on open source projects for a paid stipend.\nThe key difference is that Outreachy reaches out to underrepresented groups and those who face systemic bias or discrimination in the technology industry in their home country.\nOnce I learned about this program, I immediately volunteered to mentor as the concept strongly aligns with my ideals of inclusiveness and community building.\nI’m happy to report that both the Jenkins project,  and my employer [CloudBees]( https://www.cloudbees.com), have been very supportive of this program.\n\nExpanding on our previous efforts to mentor students in GSoC, this year we’ve joined up with Outreachy to mentor two interns.\nOur interns for this season of Outreachy, Latha Gunasekar and David Olorundare, will be working with me on audit logging support for Jenkins.\nI am excited to welcome both David and Latha, and am looking forward to what they will learn about both professional software engineering and contributing to an open source community.\nStay tuned for blog post entries introducing both people in the near future.\n\nThe audit logging support project forms a new connection between Jenkins and Apache Log4j which offers great opportunities for our interns to learn more about open source governance and meet new people.\nAs a bonus, the project aims to provide the tooling necessary to support advanced observability concerns such as running anomaly detection on authentication events to detect potential intrusion attempts.\nWe will also be authoring a JEP to detail the audit logging API provided by the plugin and how other plugins can define and log their own audit events besides the Jenkins Core ones that come with the plugin.\n\nI’m looking forward to the great work we’ll be doing together, and I hope that we’ll be able to welcome more Outreachy interns in the future!","title":"Outreachy internships to add audit logging support to Jenkins","tags":["community","outreachy","outreachy2018"],"authors":[{"avatar":null,"blog":"https://musigma.blog/","github":"jvz","html":"<div class=\"paragraph\">\n<p>Mathematician, software engineer, and free software evangelist.\nWorks for CloudBees on the <a href=\"https://jenkins.io/security/\">Jenkins Security Team</a> along with other Jenkins community work since 2018.\nPMC Chair of the <a href=\"https://logging.apache.org/\">Apache Logging Services project</a> and Secretary for the <a href=\"https://www.apache.org/\">Apache Software Foundation</a>.</p>\n</div>","id":"jvz","irc":null,"linkedin":null,"name":"Matt Sicker","slug":"/blog/authors/jvz","twitter":"jvz"}]}}]}},"pageContext":{"tag":"outreachy","limit":8,"skip":0,"numPages":1,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}