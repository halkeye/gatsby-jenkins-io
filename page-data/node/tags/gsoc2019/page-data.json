{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/gsoc2019",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2020-02-19T00:00:00.000Z","id":"21c55fa8-27ea-50d0-a167-c780371a54d9","slug":"/blog/2020/02/19/jenkins-world-lisbon-with-love-from-india/","strippedHtml":"After an amazing three months of development period in the summer of 2019 with Jenkins Project, I was a better developer, loved open source, met\npassionate people and had fun at work. Jenkins is not just a community, it is a family. When GSoC period was over, we received swags from Jenkins.\nNatasha Stopa (one of the students in GSoC 2019) was invited to attend DevOps World | Jenkins World San Francisco.\nIt was nice to see her enjoy there. But guess what? Jenkins also invited three other students (Abhyudaya, Long and me) to DevOps World | Jenkins World Lisbon.\nI was super psyched when Marky Jackson (one of my project mentors) broke the news to me.\n\nThe trip to Lisbon required to sort a few things like flight tickets, hotel booking, passport, visa etc. Oleg Nenashev had scheduled meetings to discuss\nand help us with arranging everything for our travel. Thanks to him. :)\n\nFrom India to Lisbon (Dec 1)\n\nAbhyudaya and I boarded our flight from Indira Gandhi Airport (New Delhi) to Lisbon on December 1, 2019 morning at 0500 hours (local time). It was a fine\ntrip with an hour layover in Istanbul Ataturk Airport. We arrived in Lisbon at 1500 hours (local time). The weather in Lisbon was terrific. A mild cold\nbut strong sea breeze was the starting point of me falling in love with the place. We arrived at our hotel (Novotel Lisboa) in an Uber. Oleg met us at\nthe lobby to help us with check-in. It was great to finally meet him in person after months of knowing and working together. We had a good chat about the\nevent, what to expect and other sightseeing areas. After a short time of refresh, Long who traveled from Berlin a day before met us at the restaurant. We\nhad a brief chat knowing each other, had our food and went to bed. The next day was Hackfest. We hit the bed after that as we had to reach Centro de\nCongressos de Lisboa (CCL) where the event was organised by 0900 hours.\n\nDay 0 (Dec 2)\n\nI woke up early for a short jog in the streets. Lisbon is a city made on hills. The streets have beautiful mosaic styled pavements. It was\nnice to see around the city. Then Abhyudaya and me went for breakfast and reached CCL in an Uber at 0815 hours.\n\nThere was a round table sitting arrangement in an auditorium. It was like a meet-and-greet event to interact with other developers (some known and some new).\nEverybody had to figure out their problem statements and work on it. There was milk, juice, sandwiches which gave us energy throughout the day. I took a\nsmall break to come out of the building to go to the other side of the road which was on the banks of Tagus River. From there you could have very close\nview underneath the Ponte 25 de Abril (looks strikingly similar to Golden Gate Bridge). You can also see The Sanctuary of Christ the King on the other side\nof the river (again looks similar to Christ the Redeemer in Rio, Brazil). It was great to kick off the event with Hackfest. At the end of Hackfest some of\nus presented our work. Later, we went to a nearby restaurant to have burgers which apparently was the best burger I ever had (could be because I hadn’t\ntried too many burgers before :P). We talked and interacted with people from other parts of the world for about an hour and a half then went back to our hotel\nrooms.\n\nDay 1 (Dec 3)\n\nThe conference officially began on this day. Abyudaya and me had breakfast and took the shuttle to CCL. We collected our t-shirts and IDs. The event managing team\nmade an app for DevOps World | Jenkins World (DWJW) Lisbon with all schedules and other informations which was incredibly convenient for all attendees.\nThere were multiple sessions/events on different topics related to Jenkins or DevOps in general. I attended the Jenkins and Jenkins X contributor summit.\nHad a nice lunch and went around to explore Lisbon. I went to Padrao dos Descobrimentos and the beautiful Belem Palace. Had some Pasteis de Belem\n(a popular Portuguese desert). Took a tram to Praça do Comércio. It is Lisbon’s most important square. You will find lots of tourists, street bands,\nsea food restaurants, shops for every budget, the famous pink street and so much more. Later that evening we had a party hosted by EURODOG (European\nDevOps Group) at Lisboa Marriott. It was a nice party to network with developers over casual wine and beer. We later head out to a nearby Indian restaurant\nfor Kebab and rice.\n\nDay 2 (Dec 4)\n\nThe second day began with the opening keynote. Later went to the Jenkins X Introduction, Deploying K8s with Jenkins on GCP, Build top mobile games\nby King in that order. Also occasionally hitting the sponsors booth to have a chat and collect some swags. In the evening there was the superhero\nthemed party, sponsored by Sonatype. It was probably the most fun event in the entire conference. The expo hall had an entirely different look with the party lights on,\npeople wearing capes, fun events going around. There were artists dressed in a Bumblebee, a Batman, a Superman, a Supergirl, a Thor and more superhero\ncostumes! I was previously made aware of the interesting parties at Jenkins World but the experience was very different. People from all over the world had\ncome together to celebrate the 15 years of success of an open source software. After partying from 5 to 7 we went back to the hotel. I spent some time\nto prepare the slides for the next day’s presentation and went to bed.\n\nDay 3 (Dec 5)\n\nThe third and final day of conference began with Jenkins World Fun Run. I missed the keynote for being late and other setup required for the\npresentation. My laptop was broken so had to do all the setup for demo on a friend’s laptop. The situation felt like a Jenkins admin under fire\nfor a production bug. After being under pressure for a while, took a break to admire the developer comics and had a chat with the graffiti painter.\nDuring lunch it was time for the GSoC presentation at the Jenkins community booth. All our presentation went well and we also interacted with real users.\nThen we had the GSoC Team pic at the Jenkins community booth. Later Abhyudaya and me gave our presentation at the lightning talks as well upon Mark Waite’s\nrequest. The event concluded with emotional goodbyes.\n\nAll GSoC Students were invited for dinner at Corinthia Lisboa’s Soul Garden restaurant. The party comprised of Oleg, Mark and his lovely wife, Liam, Tracy,\nAlyssa and Olivier. We had a very nice conversation and I had a very delicious Bacalhau (cod fish) dish. Then bid final goodbye to everybody.\n\nIt was a wonderful experience in a wonderful country among wonderful people. Hats off to the management team lead by Alyssa Tong and co. An event this big was\ncarried out without any hiccups! Everybody contributed their part to the event which made it very interactive and fun. Checkout some of my swags:\n\nA big shout out to the Jenkins project and CloudBees for sponsoring this trip. Also thank you Jenkins and Google Summer of Code for support. :)","title":"My DevOps World | Jenkins World Lisbon Experience","tags":["gitlab","devopsworld","jenkinsworld","gsoc","gsoc2019"],"authors":[]}},{"node":{"date":"2020-02-07T00:00:00.000Z","id":"3a8b2614-e129-54fc-90ed-707104f68f14","slug":"/blog/2020/02/07/trip-to-dwjw/","strippedHtml":"I had the privilege of being invited to DevOps World | Jenkins World\n2019 for presenting the work I did during Google Summer of Code 2019.\nWhat follows is a day-by-day summary of an amazing trip to the\nconference.\n\nDay 0: December 1, 2019\n\nI am an undergraduate student from New Delhi, India and had traveled to\nLisbon to attend the conference. I had an early morning flight to Lisbon\nfrom Delhi via Istanbul. At the Airport, I met Parichay who had been\nwaiting there from his connecting flight. After flying 8000 km, we\nreached Lisbon. We took a taxi to the hotel and were greeted there by\none of my Google Summer of Code mentors, Oleg. After four months of\nworking with him on my GSoC project, meeting him was an amazing\nexperience. Later that day, after stretching our legs in the hotel, we\nmet Long for an early dinner, who came to the hotel after exploring much\nof Lisbon.\n\nDay 1: Hackfest, December 2\n\nNext morning, we all met for breakfast where we all got to taste some\nPastel de Nata. We then took a cab to the Congress Centre for attending\nthe Jenkins and Jenkins X hackfest. At the Hackfest, I met Mark, Joseph,\nKasper, Andrey and other Jenkins contributors. I also met Oleg, this\ntime together with his son and his wife. After our introductions, and a\nshort presentation by Oleg, I started hacking on the Folder Auth plugin\nand made it possible to delete user sids from roles. The best part of\nhacking there was to get instant feedback on what I was working on. More\nand more people kept coming throughout the day. It was great to see so\nmany people working hard to improve Jenkins. At the end, everyone\npresented what they had achieved that day. Having skipped lunch for some\nsnacks, Oleg and others tried hard to get some pizza delivered without\nmuch success. After the Hackfest, everyone was hungry and most attendees\nincluding me went looking for nearby restaurants. Since it was early and\nmost restaurants were not open yet, we all decided to have burgers. It\nwas a great learning experience listening to and talking about Jenkins,\nElasticsearch, Jira, GitHub and a lot of other things. After that, we\ntook a taxi back to the hotel and I went to bed.\n\nDay 2: Contributor Summit, December 3\n\nWe had the Jenkins and Jenkins X contributor summit the next day. Me and\nParichay took the bus to the Congress Centre in the morning. After\nregistration, I got my ‘Speaker’ badge and the conference T-shirt. The\ncontributor summit took place in the same hall as the Hackfest, but the\nseating arrangement was completely different and there were a lot more\npeople. The summit started with everyone introducing themselves. It\nturned out that there were a lot of people from Munich. There were\npresentations and talks about all things Jenkins, Jenkins X and the\nContinuous Delivery Foundation by Kohsuke, Oleg, Joseph, Liam, Olivier,\nWadek and others. I had no experience with Jenkins X which made the\nsummit very interesting. After lunch, the talks were over, and everyone\nwas free to join any session discussing various things about Jenkins. I\nattended the Cloud Native Jenkins and the Configuration-as-Code\nsessions.\n\nWhile some of the conference attendees were in the Contributor summit,\nthe others were going through certifications and trainings. At around 5\no’clock in the evening, the summit and the trainings all got over and\nthe expo hall was thrown open. On the entrance, there was a large stack\nof big DWJW bags. I did not realize why those bags were kept there.\nSince everyone was taking one, I took one as well. As soon as I went\ninto the hall, I realized that those bags were for collecting swag. I\nhad never seen anything like this where sponsors were just giving away\nT-shirts, stickers and other stuff. There were snacks and Kohsuke was\ncutting the extremely tasty 15 years of Jenkins cake. After having the\ncake, I went on a swag-collecting spree going from one sponsor booth to\nthe other. This was an amazing experience, not only was I able to get\ncool stuff, I was also able to learn a lot about the software these\ncompanies made and how it fits into the DevOps pipeline.\n\nAfter the conference got over, me, Long and Parichay went to the Lisbon\nMariott Hotel for the Eurodog party. After collecting another T-shirt, I\nwent to the nearest restaurant (McDonald’s) with Andrey who I had\nearlier met at the Hackfest.\n\nDay 3: December 4\n\nThis was the first official day of the conference and it began with the\nkeynote. There were over 900 people in the keynote hall. It was amazing\nto see so many people attending the conference. After the keynote got\nover, I went to several sessions throughout the day learning about how\ncompanies are using Jenkins and implementing DevOps tools.\n\nIn the evening, we had the Sonatype Superparty which was a lot of fun.\nThere were neon lights, arcade machines, VR experiences, superheroes and\nmore swag. There was a lot of good food including pizzas and burgers and\nhot dogs. Superhero inspired desserts were very interesting. I was able\nto talk to Oleg and Wadek about the security challenges in Jenkins.\nDuring the party, I also got a chance to meet the CEO of CloudBees,\nSacha Labourey.\n\nDay 4, December 5\n\nThis was the last day of the conference and it began with another\nkeynote. After the keynote, I attended a very interesting talk on how\nthe European Observatory built software for large telescopes using\nJenkins. After that, I prepared for my talk on the work I did during\nGoogle Summer of Code 2019. I had my presentation in the community booth\nduring the lunch time. Presenting in front of real people was an amazing\nexperience and very different from the ones we had on Zoom chats for our\nGSoC evaluations. In the evening, I got another chance to present my\nproject at the Jenkins Community Lightning Talks.\n\nAfter that, the conference came to an end and I went back to the hotel.\nAfter relaxing for some time, me, Parichay and Long were invited by Oleg\nto a dinner at Corinthia Hotel with Kohsuke, Mark and his wife, Tracy,\nAlyssa, and Liam. Unfortunately, Long couldn’t attend the dinner because\nhe had the flight back earlier that evening. After the amazing dinner, I\nthanked everyone for such an amazing trip and said goodbye.\n\nDWJW was the best experience I’ve ever had. I was able to learn about a\nlot of new things and talk to some amazing people. In the end, I would\nlike to especially thank Oleg for helping me throughout and making it\npossible for me to attend such a wonderful conference. I would like to\nthank my other mentors Runze Xia and Supun for their support in my\nGoogle Summer of Code project. I would like to thank Google for\norganizing Google Summer of Code, everyone at Jenkins project for\nsponsoring my travel, and CloudBees for inviting me to the conference.\n\nLooking forward to seeing you all again soon!","title":"Trip to DevOps World | Jenkins World","tags":["gsoc","gsoc2019","devopsworld","jenkinsworld","events","community"],"authors":[]}},{"node":{"date":"2020-01-29T00:00:00.000Z","id":"63429a32-68ab-54b9-ad78-3e5643129e68","slug":"/blog/2020/01/29/gsoc-report/","strippedHtml":"Google Summer of Code is much more than a summer internship program, it is a year-round effort for the organization and some community members.\nNow, after the DevOps World | Jenkins World conference in Lisbon and final retrospective meetings, we can say that GSoC 2019 is officially over.\nWe would like to start by thanking all participants: students, mentors, subject matter experts and all other contributors who proposed project ideas, participated in student selection, in community bonding and in further discussions and reviews.\nGoogle Summer of Code is a major effort which would not be possible without the active participation of the Jenkins community.\n\nIn this blogpost we would like to share the results and our experience from the previous year.\n\nResults\n\nFive GSoC projects were successfully completed this year:\nRole Strategy Plugin Performance Improvements,\nPlugins Installation Manager CLI Tool/Library,\nWorking Hours Plugin - UI Improvements,\nRemoting over Apache Kafka with Kubernetes features,\nMulti-branch Pipeline support for Gitlab SCM.\nWe will talk about the projects a little later in the document.\n\nProject details\n\nWe held the final presentations as Jenkins Online Meetups in late August and Google published the results on Sept 3rd.\nThe final presentations can be found here:\nPart 1,\nPart 2,\nPart 3.\nWe also presented the\n2019 Jenkins GSoC report\nat the DevOps World | Jenkins World San Francisco\nand at the\nDevOps World | Jenkins World 2019 Lisbon conferences.\n\nIn the following sections, we present a brief summary of each project, links to the coding phase 3 presentations, and to the final products.\n\nRole Strategy Plugin Performance Improvements\n\nRole Strategy Plugin is one of the most widely used authorization plugins for Jenkins,\nbut it has never been famous for performance due to architecture issues and regular expression checks for project roles.\nAbhyudaya Sharma was working on this project together with hist mentors:\nOleg Nenashev, Runze Xia and Supun Wanniarachchi.\nHe started the project from creating a new Micro-benchmarking Framework for Jenkins Plugins based on JMH,\ncreated benchmarks and achieved a 3501% improvement on some real-world scenarios.\nThen he went further and created a new Folder-based Authorization Strategy Plugin which offers even better performance for Jenkins instances where permissions are scoped to folders.\nDuring his project Abhyudaya also fixed the Jenkins Configuration-as-Code support in Role Strategy and contributed several improvements and fixes to the JCasC Plugin itself.\n\nProject page\n\nBlog posts: Micro-benchmarking Framework for Jenkins Plugins,\nIntroducing new Folder Authorization Plugin, Performance Improvements to Role Strategy Plugin\n\nFinal evaluation: slides, video\n\nSource code: Role Strategy Plugin, Folder Authorization Plugin\n\nPlugins Installation Manager CLI Tool/Library\n\nNatasha Stopa was working on a new CLI tool for plugin management,\nwhich should unify features available in other tools like install-plugins.sh in Docker images.\nIt also introduced many new features like YAML configuration format support, listing of available updates and security fixes.\nThe newly created tool should eventually replace the previous ones.\nNatasha’s mentors: Kristin Whetstone, Jon Brohauge and Arnab Banerjee.\nAlso, many contributors from Platform SIG and JCasC plugin team joined the project as a key stakeholders and subject-matter experts.\n\nProject page\n\nBlog posts: alpha release announcement,\ncoding phase 2 updates\n\nFinal evaluation: slides,\nvideo\n\nSource code: Plugin installation manager tool\n\nWorking Hours Plugin - UI Improvements\n\nJenkins UI and frontend framework are a common topic in the Jenkins project,\nespecially in recent months after the new UX SIG was established.\nJack Shen was working on exploring new ways to build Jenkins Web UI together with his mentor Jeff Pearce.\nJack updated the Working Hours Plugin to use UI controls provided by standard React libraries.\nThen he documented his experienced and created template for plugins with React-based UI.\n\nProject page\n\nBlog posts: Updates on Working Hours Plugin UI,\nReact Plugin Template\n\nFinal evaluation: slides, video\n\nSource code: Working Hours Plugin, Template for Jenkins plugins with React-based UI\n\nRemoting over Apache Kafka with Kubernetes features\n\nLong Le Vu Nguyen was working on extended Kubernetes support in the Remoting over Apache Kafka Plugin.\nHis mentors were Andrey Falco and Pham vu Tuan who was our GSoC 2018 student and the plugin creator.\nDuring this project Long has added a new agent launcher which provisions Jenkins agents in Kubernetes and connects them to the controller.\nHe also created a Cloud API implementation for it and a new Helm chart which can provision Jenkins as entire system in Kubernetes,\nwith Apache Kafka enabled by default.\nAll these features were released in Remoting over Apache Kafka Plugin 2.0.\n\nProject page\n\nBlog post for [Remoting over Apache Kafka Plugin 2.0\n\nFinal evaluation: slides, video\n\nPlugin source code\n\nMulti-branch Pipeline support for Gitlab SCM\n\nParichay Barpanda was working on the new GitLab Branch Source Plugin with Multi-branch Pipeline Jobs and Folder Organisation support.\nHis mentors were\nMarky Jackson-Taulia,\nJustin Harringa,\nZhao Xiaojie and\nJoseph Petersen.\nThe plugin scans the projects, importing the pipeline jobs it identifies based on the criteria provided.\nAfter a project is imported, Jenkins immediately runs the jobs based on the Jenkinsfile pipeline script and notifies the status to GitLab Pipeline Status.\nThis plugin also provides GitLab server configuration which can be configured in Configure System or via Jenkins Configuration as Code (JCasC).\nread more about this project in the GitLab Branch Source 1.0 announcement.\n\nProject page\n\nCoding phase 3 presentation\n\nGitlab Branch Source Plugin, Gitlab API plugin\n\nProjects which were not completed\n\nNot all projects have been completed this year.\nWe were also working on Artifact Promotion plugin for Jenkins Pipeline\nand on Cloud Features for External Workspace Manager Plugin,\nbut unfortunately both projects were stopped after coding phase 1.\nAnyway, we got a lot of experience and takeaways in these areas (see linked Jira tickets!.\nWe hope that these stories will be implemented by Jenkins contributors at some point.\nGoogle Summer of Code 2020 maybe?\n\nRunning the GSoC program at our organization level\n\nHere are some of the things our organization did before and during GSoC behind the scenes.\nTo prepare for the influx of students, we updated all our GSoC pages and wrote down all the knowledge we accumulated over the years of running the program.\nWe started preparing in October 2018, long before the official start of the program.\nThe main objective was to address the feedback we got during GSoC 2018 retrospectives.\n\nProject ideas.\nWe started gathering project ideas in the last months of 2018.\nWe prepared a list of project ideas in a Google doc, and we tracked ownership of each project in a table of that document.\nEach project idea was further elaborated in its own Google doc.\nWe find that when projects get complicated during the definition phase, perhaps they are really too complicated and should not be done.\n\nSince we wanted all the project ideas to be documented the same way, we created a template to guide the contributors.\nMost of the project idea documents were written by org admins or mentors, but occasionally a student proposed a genuine idea.\nWe also captured contact information in that document such as GitHub and Gitter handles, and a preliminary list of potential mentors for the project.\nWe embedded all the project documents on our website.\n\nMentor and student guidelines.\nWe updated the mentor information page with details on what we expect mentors to do during the program,\nincluding the number of hours that are expected from mentors,\nand we even have a section on preventing conflict of interest.\nWhen we recruit mentors, we point them to the mentor information page.\n\nWe also updated the student information page.\nWe find this is a huge time saver as every student contacting us has the same questions about joining and participating in the program.\nInstead of re-explaining the program each time, we send them a link to those pages.\n\nApplication phase.\nStudents started to reach out very early on as well, many weeks before GSoC officially started.\nThis was very motivating.\nSome students even started to work on project ideas before the official start of the program.\n\nProject selection. This year the org admin team had some very difficult decisions to make.\nWith lots of students, lots of projects and lots of mentors, we had to request the right number of slots and try to match the projects with the most chances of success.\nWe were trying to form mentor teams at the same time as we were requesting the number of slots, and it was hard to get responses from all mentors in time for the deadline.\nFinally we requested fewer slots than we could have filled.\nWhen we request slots, we submit two numbers: a minimum and a maximum. The GSoC guide states that:\n\nThe minimum is based on the projects that are so amazing they really want to see these projects occur over the summer,\n\nand the maximum number should be the number of solid and amazing projects they wish to mentor over the summer.\n\nWe were awarded minimum. So we had to make very hard decisions: we had to decide between \"amazing\" and \"solid\" proposals.\nFor some proposals, the very outstanding ones, it’s easy.\nBut for the others, it’s hard.\nWe know we cannot make the perfect decision, and by experience, we know that some students or some mentors will not be able to complete the program due to uncontrollable life events, even for the outstanding proposals.\nSo we have to make the best decision knowing that some of our choices won’t complete the program.\n\nCommunity Bonding.\nWe have found that the community bonding phase was crucial to the success of each project.\nUsually projects that don’t do well during community bonding have difficulties later on.\nIn order to get students involved in the community better, almost all projects were handled under the umbrella of Special Interest Groups so that there were more stakeholders and communications.\n\nCommunications.\nEvery year we have students who contact mentors via personal messages.\nStudents, if you are reading this, please do NOT send us personal messages about the projects, you will not receive any preferential treatment.\nObviously, in open source we want all discussions to be public, so students have to be reminded of that regularly.\nIn 2019 we are using Gitter chat for most communications, but from an admin point of view this is more fragmented than mailing lists.\nIt is also harder to search.\nChat rooms are very convenient because they are focused, but from an admin point of view, the lack of threads in Gitter makes it hard to get an overview.\nGitter threads were added recently (Nov 2019) but do not yet work well on Android and iOS.\nWe adopted Zoom Meetings towards the end of the program and we are finding it easier to work with than Google Hangouts.\n\nStatus tracking.\nAnother thing that was hard was to get an overview of how all the projects were doing once they were running.\nWe made extensive use of Google sheets to track lists of projects and participants during the program\nto rank projects and to track statuses of project phases (community bonding, coding, etc.).\nIt is a challenge to keep these sheets up to date, as each project involves several people and several links.\nWe have found it time consuming and a bit hard to keep these sheets up to date, accurate and complete, especially up until the start of the coding phase.\n\nPerhaps some kind of objective tracking tool would help.\nWe used Jenkins Jira for tracking projects, with each phase representing a separate sprint.\nIt helped a lot for successful projects.\nIn our organization, we try to get everyone to beat the deadlines by a couple of days, because we know that there might be events such as power outages,\nbad weather (happens even in Seattle!), or other uncontrolled interruptions, that might interfere with submitting project data.\nWe also know that when deadlines coincide with weekends, there is a risk that people may forget.\n\nRetrospective.\nAt the end of our project, we also held a retrospective and captured some ideas for the future.\nYou can find the notes here.\nWe already addressed the most important comments in our documentation and project ideas for the next year.\n\nRecognition\n\nLast year, we wanted to thank everyone who participated in the program by sending swag.\nThis year, we collected all the mailing addresses we could and sent to everyone we could the 15-year Jenkins special edition T-shirt, and some stickers.\nThis was a great feel good moment.\nI want to personally thank Alyssa Tong her help on setting aside the t-shirt and stickers.\n\nMentor summit\n\nEach year Google invites two or more mentors from each organization to the Google Summer of Code Mentor Summit.\nAt this event, hundreds of open-source project maintainers and mentors meet together and have unconference sessions targeting GSoC, community management and various tools.\nThis year the summit was held in Munich,\nand we sent Marky Jackson and Oleg Nenashev as representatives there.\n\nApart from discussing projects and sharing chocolate, we also presented Jenkins there, conducted a lightning talk and hosted the unconference session about automation bots for GitHub.\nWe did not make a team photo there, so try to find Oleg and Marky on this photo:\n\nGSoC Team at DevOps World | Jenkins World\n\nWe traditionally use GSoC organization payments and travel grants to sponsor student trips to major Jenkins-related events.\nThis year four students traveled to the DevOps World | Jenkins World conferences in San-Francisco and Lisbon.\nStudents presented their projects at the community booth and at the contributor summits,\nand their presentations got a lot of traction in the community!\n\nThanks a lot to Google and CloudBees who made these trips possible.\nYou can find a travel report from Natasha Stopa here,\nmore travel reports are coming soon.\n\nConclusion\n\nThis year, five projects were successfully completed.\nWe find this to be normal and in line with what we hear from other participating organizations.\n\nTaking the time early to update our GSoC pages saved us a lot of time later because we did not have to repeat all the information every time someone contacted us.\nWe find that keeping track of all the mentors, the students, the projects, and the meta information is a necessary but time consuming task.\nWe wish we had a tool to help us do that.\nCoordinating meetings and reminding participants of what needs to be accomplished for deadlines is part of the cheerleading aspect of GSoC, we need to keep doing this.\n\nLastly, I want to thank again all participants, we could not do this without you.\nEach year we are impressed by the students who do great work and bring great contributions to the Jenkins community.\n\nGSoC 2020?\n\nYes, there will be Google Summer of Code 2020!\nWe plan to participate, and we are looking for project ideas, mentors and students.\nJenkins GSoC pages have been already updated towards the next year, and we invite everybody interested to join us next year!\n\nMain page with all contacts\n\nGSoC 2020 Project Ideas\n\nGSoC 2020 Call for Mentors and Project Ideas\n\nInformation for students and mentors","title":"Google Summer of Code 2019 Report","tags":["gsoc","gsoc2019","jenkins","community","events"],"authors":[]}},{"node":{"date":"2019-10-08T00:00:00.000Z","id":"1aef3427-db0e-553e-8196-ae1a3516d783","slug":"/blog/2019/10/08/google-summer-of-code-mentor-and-org-admin-perspective/","strippedHtml":"I was fortunate enough to participate in the Google Summer of Code 2019 as a mentor and org admin. This was great\nand I wanted to share in hopes of encouraging more people to join.\nYou can learn more about the Google Summer of Code here: https://jenkins.io/projects/gsoc/\n\nCommunity Bonding\n\nThe first phase of the project is the community bonding phase. This is where the student and other mentors come together\nto lay out the plan for the project. It is important to set expectations and ensure that the student is well aware of\nwhat will take place and also made to feel welcome.\n\nParichay Barpanda was the student and he was super awesome from the get go. The project he was working on was the Gitlab\nBranch Source Plugin. More can be found here: jenkinsci/gitlab-branch-source-plugin\n\nFrom the mentor side it was myself and Justin Harringa. Justin was just amazing throughout this project and I seriously\ncould not have done this without him. He was encouraging, empathetic and just all around great. I would gladly serve\nwith him again.\n\nWe laid out our plan and guidance and got to work.\n\nFirst Evaluations\n\nThe first evaluation was quickly upon us and Parichay was ready!\nThe work he put in was nothing shy of amazing. We did our 1st demo and he really rocked it. A video of that demo can be\nfound on : Youtube\n\nSecond Evaluations\n\nThere was not much time to rest before we realized that phase II end was upon us but Parichay was ready. Again, he\nnailed it.\n\nThat demo can be found here\n\nMentors Submit Final Evaluations\n\nWe had our final evaluation and at this point Parichay was seasoned. He was getting issues assigned to him, working on\nlittle bug fixes and setting his roadmap for features. He absolutely blew Justin and I away.\n\nParichay’s final evaluation demo can be seen here\n\nAt the conclusion of the final demo’s, Justin and I met and went over Parichay’s final evaluation. At this point we had\nmet twice a week for several months, we have reviewed code daily, we had community involvement and most of all we had\nseen Parichay grow into a seasoned software developer.\n\nJustin and I were without a doubt passing Parichay on his entire body of work. I am actually tearing up typing this\nbecause I am so proud of Parichay.\n\nOrg Admin\n\nBeing an org admin for the 2019 Google Summer of Code project for the Jenkins organization was truly rewarding and couldn’t\nhave been accomplished without the help from Oleg Nenashev, Martin d’Anjou, Jeff Pearce and Lloyd Chang.\n\nAs an org admin we handled issues with mentors, community members and disagreements involving work. These items were only\na few and as a team we handled them accordingly.\n\nWe regularly met to discuss and plan. Coordinating and dealing with a project like Google Summer of Code is no small feat\nbut this team made it super easy and I am so thankful for them and all that I learned.\n\nClosing\n\nIn looking back at this experience I am so grateful for the opportunity I was given. This was such a rewarding experience\nto not only be able to mentor but also be an org admin. Not only will I be back next year (we are already in the\nplanning stages) but I highly encourage people reading this to consider joining. You will not be disappointed.\n\nI am so thankful for all the students, mentors and fellow org admins. Your dedication to open source is so valued. You\nshowed and continue to show what this project is all about, and that is being welcoming, open and transparent. Helping\npeople grow as individuals while learning skills is what I love about this community.\n\nThank you to everyone and I hope your futures are bright!","title":"Google Summer of Code Mentor and Org Admin Perspective","tags":["gsoc","gsoc2019","jenkins","community","events","mentor"],"authors":[]}},{"node":{"date":"2019-08-26T00:00:00.000Z","id":"ec0ca077-b2d0-53a4-8b1d-2ecb784b35fd","slug":"/blog/2019/08/26/role-strategy-performance/","strippedHtml":"The task for my Google Summer of Code program was to improve the performance\nof the Role Strategy Plugin. The performance issues for Role Strategy Plugin\nhad been reported multiple times on Jenkins JIRA. With a large number of roles\nand with complex regular expressions, a large slow-down was visible on the Web UI.\nEven before GSoC started, there were a number of patches which tried to improve\nperformance of the plugin (by Deepansh Nagaria\nand others).\n\nAt the time, there was no way to reliably measure improvements in performance.\nTherefore, we started by creating a\nframework\nfor running micro-benchmarks on Jenkins Plugins. Benchmarks using the framework\nwere added to the Role Strategy Plugin find performance\ncritical parts of the plugins and to measure the improvements of a change.\nThis blog post summarizes the changes that were made and performance improvements\nmeasured.\n\nCaching matching roles\n\nA couple of major changes were made to the Role Strategy Plugin to improve its\nperformance. First, we started collection of roles that matched a given\nproject name. The Role Strategy plugin before version 2.12 used to run over\nregular expressions for every role that it had for every permission checking\nrequest it got. Storing this produced set of roles in the memory provides us\nlarge improvements in performance and avoids repeated matching of project names\nwith regular expressions. For keeping the plugin working securely, we invalidate\nthe cache whenever any update is made to the roles.\n\nAfter this change, we were able to observe performance improvements of up to\n3300%. These improvements were visualized using\nJMH Visualizer.\n\nMore information is available at pull request on GitHub:\nhttps://github.com/jenkinsci/role-strategy-plugin/pull/81\n\nCalculating Implying Permisions when plugin is loaded\n\nJenkins' permission model allows one permissions to imply other permissions.\nWhen a permission check is made, we need to check if the user has any of\npermissions that would imply this permisison. For every permission checking\nrequest that that the Role Strategy, it used to calculate all the implying\npermissions. To avoid this, we now calculate and store implying permissions\nfor every permission in the Jenkins system when the plugin gets loaded.\n\nAfter both of these changes, we were able to experience improvements of up to\n10000%. The benchmark results show it better:\n\nMore information about this change can be found at the GitHub pull request:\nhttps://github.com/jenkinsci/role-strategy-plugin/pull/83\n\nBoth of these changes were integrated into the Role Strategy Plugin and the\nimprovements can be experienced starting with version\n2.13.\n\nBonus: Configuration-as-Code export now works for Role Strategy\n\nWith Configuration-as-Code plugin version\n1.24\nand above, export of your configuration as YAML now works!\n\nAs an alternative to\nRole Strategy Plugin, I also created the brand new Folder Authorization Plugin.\nYou can check out the blog post for\nmore information about the plugin.\n\nLinks and Feedback\n\nI would love to hear your comments and suggestions. Please feel free to reach\nout to me through either the\nRole Strategy Plugin Gitter chat or through\nJenkins Developer Mailing list.\n\nPresentation slides for final evaluation of GSoC\n\nThe Folder Authorization Plugin\n\nDemo for the final evaluations","title":"Performance Improvements to Role Strategy Plugin","tags":["plugins","security","performance","gsoc","gsoc2019"],"authors":[]}},{"node":{"date":"2019-08-25T00:00:00.000Z","id":"d12bee04-3e3b-5a23-9775-d800d9abf794","slug":"/blog/2019/08/25/jenkinsworld-contrib-summit-ask-the-expert-booth/","strippedHtml":"Jenkins turns 15 years old!\nJenkins World brings together DevOps thought leaders, IT executives, continuous delivery practitioners and the Jenkins\ncommunity and ecosystem in one global event, providing attendees with the opportunity to learn, explore, network\nface-to-face and help shape the next evolution of Jenkins development and solutions for DevOps.\n\nThere is also the Jenkins Contributor Summit in San Francisco. The Jenkins Contributor Summit is the place where\ncurrent and future contributors get together to discuss, learn and collaborate on the latest and greatest efforts within\nJenkins project. The morning portion of the summit is a mix of presentations by the core contributors. The\npresentations highlight what each effort is about and what community members can do to help. In the\nafternoon breakout sessions with  Birds of a Feather tables for in-depth discussion, and collaboration with sub-project\ncontributors.\n\nI feel very honored to have been a part of this.\n\nDay 1\n\nDay one started with the contributor summit. This was a chance for everyone to get together and talk about\ncontributions and put faces to names. Most people I had only met via video chat or on gitter so I was super excited.\nWe gathered to hear about the start of the Jenkins open source landscape.\n\nNext up was the BoF/Unconference. I was leading these sessions and I felt they went really well.\nWe had fellow org admins Martin d’Anjou and Jeff Pearce give a talk about Google Summer of Code projects.\n\nGoogle Summer of Code student Natasha Stopa presented her project, Plugin Installation Manager Library/CLI Tool. This is\na super cool project and very well received in the community.\n\nWe closed out the session with a presentation from Steven Terrana from Booz Allen Hamilton and the awesome Jenkins\nTemplating Engine. If you have not had a chance to try this, please make sure you do at https://github.com/boozallen/jenkins-templating-engine.\n\nMain Expo Hall\n\nDay two and onward saw me and other Jenkins org admins in the Ask the Expert booth for the Jenkins community.\n\nThis was a really cool experience and gave me a chance to hear about things the community is working on and help with\nissues they are facing.\nThere were a range of questions from Jenkins X to many of the plugins I maintain such and the Jenkins Prometheus and the\nSysdig Secure Scanning plugins.\nThere were also a lot of Kubernetes questions. There is a lot of marketing data regarding the increased usage of\nKubernetes but I was seriously surprised by the massive interest in Jenkins on Kubernetes.\nOf course there were opportunities for selfie requests.\n\nLunch time demos got underway and we had a busy schedule.\nFirst up was the awesome Mark Waite to talk about the\nGit plugin. A lot of people use git in\nJenkins.\nThank you so much for all that you do Mark.\n\nJenkins org admin Martin d’Anjou was next on deck to talk about the Google Summer of Code. So amazing to think that the\nGoogle Summer of Code is also in its 15th year like Jenkins!\n\nNatasha Stopa is a Google Summer of Code student and she presented her project Plugin Installation Manager Library/CLI Tool.\nNatasha really put a lot of hard work in to this plugin and it was really awesome to see the turn out and support during\nher presentation.\n\nFinally there was me. I presented the Sysdig Secure Scanning Jenkins plugin which I am a maintainer of. I thank everyone who attended\n\nRight after the lunch time demos I also oversaw the Jenkins open space. This was an opportunity for the community to talk\nabout items and let them flow organically. I really enjoyed this session and felt it was also well received.\n\nWe closed out the day and the event with a picture of some of the Jenkins org admins and Google Summer of Code students.\nMissing from this photos are fellow org admins, Lloyd Chang and Oleg Nenashev\n\nClosing\n\nThis was an amazing experience. Huge thanks to CloudBees, the Jenkins community, Google Summer of Code, Tracy Miranda,\nAlyssa Tong and my employer Sysdig.\n\nTo think Jenkins is 15 years old is amazing! There has been so much accomplished and the future is so bright. I am so\nthankful for the opportunity to serve and be a part of the open source community.\nHere’s to 15 more years all!\n\nIf you are interested in joining any one of the Jenkins open source special interest groups, look here. We can use your\nhelp: https://jenkins.io/sigs/\n\nIf you are interested in joining the Summer of Code, look here: https://jenkins.io/projects/gsoc/\nIf you want to chat with us, find us here: https://jenkins.io/chat/\nOr if you want to email us, reach out at: https://jenkins.io/mailing-lists/\n\nSome photos outtakes:","title":"Jenkins World Contributor Summit and Ask the Expert booth","tags":["jenkinsworld","devopsworld2019","gsoc","gsoc2019","community","opensource","events","contributorsummit","asktheexpert"],"authors":[]}},{"node":{"date":"2019-08-23T00:00:00.000Z","id":"67f9da03-2668-58bd-93f3-3bf494bb5192","slug":"/blog/2019/08/23/introduce-react-plugin-template/","strippedHtml":"The template’s main repo is at\nReact Plugin Template\n\nThis template is part of the project Working Hours UI Improvement during\nGoogle Summer of Code 2019, which improved the UI of Working Hours Plugin using this pattern to develop Jenkins plugins with React. The Working Hours Plugin repository can be found at Working Hours Plugin.\n\nOverview\n\nDeveloping plugin for Jenkins has always been easy to do with its Jelly based UI render system, but Jelly seems to be pretty heavy when we want to use more modernized frameworks like React, or if we need to make the plugin UI more customized. This is what this template is built for.\n\nAnd with React integrated, development of Jenkins plugin is more modernized, developer can now use tons of React libraries, the way to use libraries is now tinier and safer with webpack, in short, coding with Jenkins plugin can be much easier.\n\nFeatures\n\nFeature\nSummary\n\nReact Integrated\nReact is integrated, you can take full control of the UI\n\nUsing Iframe\nUsing iframe can create a new javascript env, we can get rid of some side effects of some polyfills which was added globally.(such as Prototype.js)\n\nMaven Lifecycle\nnpm commands are integrated into Maven lifecycle with help of Frontend Maven Plugin\n\nWebpack\nWebpack helps us reduce the size of the bundle, also avoids pollution on the global namespace.\n\nJenkins Crumb attached\nCrumb is attached to Axios client, now you can send requests in the way you used to do in React.\n\nExpress as devserver\nYou can run your react app in a standalone page so you can develop in webpack hot reload mode, also with webpack proxy, the standalone app is still accessible to the jenkins dev server.\n\nAxios as http client\nAxios hugely simplify the way to make requests.\n\nScreenshots\n\nExample Plugin UI\n\nManagement Link\n\nGetting Started\n\nClone the repo:\n\ngit clone https://github.com/jenkinsci/react-plugin-template.git\ncd react-plugin-template\n\nInstall the Maven dependencies and node modules.\n\nmvn install -DskipTests\n\nRun standalone React app with hot reload\n\nnpm run start\n\nRun plugin\n\nmvn hpi:run -Dskip.npm -f pom.xml\n\nSend HTTP requests\n\nAs Crumb Issuer is default enabled in Jenkins and each ajax request is required to contain a Jenkins Crumb in request header, so be sure to use the axiosInstance which is already set up with Jenkins Crumb and exported at src/main/react/app/api.js.\n\nexport const apiGetData = () => {\n  return axiosInstance.post(\"/data\");\n};\n\nOr if you want to use your own http client, remember to add the Jenkins Crumb to your request’s header, the Crumb’s key and content could be found at src/main/react/app/utils/urlConfig.js, then you can set the header like below.\n\nconst headers = {};\nconst crumbHeaderName = UrlConfig.getCrumbHeaderName();\n\nif (crumbHeaderName) {\n  headers[crumbHeaderName] = UrlConfig.getCrumbToken();\n}\n\nWrite your own request handler\n\nNow you can customize your request pattern as you want, also we need to write a handler.\n\nJenkins is using stapler to preprocess the requests, so if you need a request handler. For example and also in this template, you can use an Action class to create a sub-url, and then a StaplerProxy to proxy the request like a router. More info about handlers can be found in the Stapler Reference.\n\nExample handler\n\nManagementLink would get the request and then hand it off to the PluginUI\n\n@Extension\npublic class PluginManagementLink extends ManagementLink implements StaplerProxy {\n\n    PluginUI webapp;\n\n    public Object getTarget() {\n        return webapp;\n    }\n\n    public String getUrlName() {\n        return \"react-plugin-template\";\n    }\n}\n\nPluginUI, stapler would then find methods in the target class, in this case, it finds doDynamic, then we can choose the next handler by return the methods result, in this case, getTodos or setTodos, and PluginUI just function like a url router.\n\npublic class PluginUI{\n    public HttpResponse doDynamic(StaplerRequest request) {\n        ...\n\n        List params = getRequestParams(request);\n\n        switch (params.get(0)) {\n        case \"get-todos\":\n            return getTodos();\n        case \"set-todos\":\n            return setTodos(request);\n        }\n        ...\n    }\n}\n\nData Persistence\n\nYou can save your data with a descriptor\n\n@Extension\npublic class PluginConfig extends Descriptor implements Describable\n\nAnd after each time you change data, call save() to persist them.\n\npublic void setTodos(\n            @CheckForNull List value) {\n        this.todos = value;\n        save();\n    }\n\nAnd in your handler, you can get the config class by calling\n\nconfig = ExtensionList.lookup(PluginConfig.class).get(0);\n\nCustomize your plugin\n\nBe sure to modify all the occurrence of react-template\n\nAt org/jenkinsci/plugins/reactplugintemplate/PluginUI/index.jelly, change the iframe’s id and its source url.\n\nAt src/main/react/app/utils/urlConfig.js change\n\nAt src/main/react/server/config.js, change the proxy route.\n\nAt src/main/react/package.json, change the start script’s BASE_URL\n\nAt pom.xml, change the artifactId\n\nAt org/jenkinsci/plugins/reactplugintemplate/PluginManagementLink.java, change names.\n\nAlso use the same value to modify the occurrence in src\\main\\react\\app\\utils\\urlConfig.js.\n\nCustomize a page for your plugin\n\nA management Link is recommended, which would get your plugin a standalone page, along with a entry button in the /manage system manage page.\n\nHow does this template work?\n\nThis template is putting a webpack project inside a Maven project, and this template is just chaining the build result by copy the webpack output to the plugin’s webapp folder to make it accessible from the iframe, then Jelly render the iframe and the client gets the Plugin UI.\n\nWhy iframe?\n\nOver time, Jenkins has added a lot of various javascript libraries to every regular page, which now causes problems for using modern Javascript tooling and as such, we decided to inline the new react based pages in their own sandbox which prevents collisions with other libraries, and maybe the iframe is a good sandbox case.\n\nLinks\n\nGithub: React Plugin Template\n\nGithub: Working Hours Plugin","title":"Introduce React Plugin Template","tags":["react","plugins","template","gsoc","gsoc2019"],"authors":[]}},{"node":{"date":"2019-08-23T00:00:00.000Z","id":"eddbf0dc-37bf-5f4d-8a6e-0bef8711db73","slug":"/blog/2019/08/23/introducing-gitlab-branch-source-plugin/","strippedHtml":"The GitLab Branch Source Plugin has come out of its beta stage and has been released to the Jenkins update center. It allows you to create job based on GitLab user or group or subgroup project(s). You can either:\n\nImport a single project’s branches as jobs from a GitLab user/group/subgroup (Multibranch Pipeline Job)\n\nImport all or a subset of projects as jobs from a GitLab user/group/subgroup (GitLab Group Job or GitLab Folder Organization)\n\nThe GitLab Group project scans the projects, importing the pipeline jobs it identifies based on the criteria provided. After a project is imported, Jenkins immediately runs the jobs based on the Jenkinsfile pipeline script and notifies the status to GitLab Pipeline Status. This plugin unlike other Branch Source Plugins provides GitLab server configuration which can be configured in Configure System. Jenkins Configuration as Code (JCasC) can also be used to configure the server. To learn more about server configuration see my previous blog post.\n\nRequirements\n\nJenkins - 2.176.2 (LTS)\n\nGitLab - v11.0+\n\nCreating a Job\n\nTo create a Multibranch Pipeline Job (with GitLab branch source) or GitLab Group Job, you must have GitLab Personal Access Token added to the server configuration. The credentials is used to fetch meta data of the project(s) and to set up hooks on GitLab Server. If the token has admin access you can also set up System Hooks while Web Hooks can be set up from any user token.\n\nCreate a Multibranch Pipeline Job\n\nGo to Jenkins > New Item > Multibranch Pipeline > Add Source > GitLab Project\n\nServer - Select your desired GitLab server from the dropdown, needs to be configured before creating this job.\n\nCheckout Credentials - Add credentials of type SSHPrivateKey or Username/Password if there are any private projects to be built by the plugin. If all projects are public then no checkout credentials required. Checkout credential is different from the credential (of type GitLab Personal Access Token) setup in GitLab server config.\n\nOwner - Can be a user, group or subgroup. Depending on this the Projects field is populated.\n\nProjects - Select the project you want to build from the dropdown.\n\nBehaviours - These traits are very powerful tool to configure the build logic and post build logic. We have defined new traits. You can see all the information in repository documentation.\n\nSave and wait for the branches indexing. You are free to navigate from here, the job progress is displayed to the left hand side.\n\nAfter the indexing, the imported project listed all the branches, merge requests and tags as jobs.\n\nOn visiting each job, you will find some action items on the left hand side:\n\nYou can trigger the job manually by selecting Build Now.\n\nYou can visiting the particular branch/merge request/tag on your GitLab Server by selecting the corresponding button.\n\nCreate a GitLab Group Job Type\n\nGo to Jenkins > New Item > GitLab Group\n\nYou can notice the configuration is very similar to Multibranch Pipeline Job with only Projects field missing. You can add all the projects inside your Owner i.e. User/Group/Subgroup. The form validation will check with your GitLab server if the owner is valid. You can add Discover subgroup project trait which allows you to discover this child projects of all subgroups inside a Group or Subgroup but this trait is not applicable to User. While indexing, web hook is created in each project. GitLab Api doesn’t support creation of Group web hooks so this plugin doesn’t support that feature which is only available in GitLab EE.\n\nYou can now explore your imported projects, configuring different settings on each of those folders if needed.\n\nGitLab Pipeline Status Notification\n\nGitLab is notified about build status from the point of queuing of jobs.\n\nSuccess - the job was successful\n\nFailure - the job failed and the merge request is not ready to be merged\n\nError - something unexpected happened; example: the job was aborted in Jenkins\n\nPending - the job is waiting in the build queue\n\nOn GitLab Pipeline status are hyperlinks to the corresponding Jenkins job build. To see the Pipeline Stages and the console output you will be required to visit your Jenkins server. We also planned to notify the pipeline stages to GitLab but it came with some drawbacks which has been addressed so far but there is future plan to add it as trait.\n\nYou can also skip notifying GitLab about the pipeline status by selecting Skip pipeline status notifications from the traits list.\n\nMerge Requests\n\nImplementing support for Merge Requests for the projects was challenging. First, MRs are of 2 types i.e. Origin branches and Forked Project branches so there had to be different implementation for each head. Second, MRs from forks can be from untrusted sources, so a new strategy Trust Members was implemented which allows CI to build MRs only from trusted users who have accesslevel of Developer / Maintainer / Owner.\n\nThird, MRs from forks do not support pipeline status notification due to GitLab issue, see this. You can add a trait Log Build Status as Comment on GitLab that allows you to add a sudo user (leave empty if you want owner user) to comment on the commit/tag/mrs the build result. To add a sudo user your token must have admin access. By default only failure/error are logged as comment but you can also enable logging of success build by ticking the checkbox.\n\nSometimes, Merge Requests fail due to external errors so you want to trigger rebuild of mr by commenting jenkins rebuild. To enable this trigger add the trait Trigger build on merge request comment. The comment body can be changed in the trait. For security reasons, commentor should have Developer / Maintainer / Owner accesslevel in the project.\n\nHooks\n\nWeb hooks are automatically created on your projects if configured to do so in server configuration. Web hooks are ensured to pass through a CSRF filter. Jenkins listens to web hooks on the path /gitlab-webhook/post. On GitLab web hooks are triggered on the following events:\n\nPush Event - when a commit or branch is pushed\n\nTag Event - when a new tag is created\n\nMerge Request Event - when a merge request is created/updated\n\nNote Event - when a comment is made on a merge request\n\nYou can also set up System Hooks on your GitLab server if your token has admin access. System hooks are triggered when new projects are created, Jenkins triggers a rescan of the new project based on the configuration and sets up web hook on it. Jenkins listens to system hooks on the path /gitlab-systemhook/post. On GitLab system hooks are triigered on Repository Update Events.\n\nYou can also use Override Hook Management mode trait to override the default hook management and choose if you want to use a different context (say Item) or disable it altogether.\n\nJob DSL and JCasC\n\nYou can use Job DSL to create jobs. Here’s an example of Job DSL script:\n\norganizationFolder('GitLab Organization Folder') {\n    description(\"GitLab org folder created with Job DSL\")\n    displayName('My Project')\n    // \"Projects\"\n    organizations {\n        gitLabSCMNavigator {\n            projectOwner(\"baymac\")\n            credentialsId(\"i<3GitLab\")\n            serverName(\"gitlab-3214\")\n            // \"Traits\" (\"Behaviours\" in the GUI) that are \"declarative-compatible\"\n            traits {\n                subGroupProjectDiscoveryTrait() // discover projects inside subgroups\n                gitLabBranchDiscovery {\n                    strategyId(3) // discover all branches\n                }\n                originMergeRequestDiscoveryTrait {\n                    strategyId(1) // discover MRs and merge them with target branch\n                }\n                gitLabTagDiscovery() // discover tags\n            }\n        }\n    }\n    // \"Traits\" (\"Behaviours\" in the GUI) that are NOT \"declarative-compatible\"\n    // For some 'traits, we need to configure this stuff by hand until JobDSL handles it\n    // https://issues.jenkins.io/browse/JENKINS-45504\n    configure {\n        def traits = it / navigators / 'io.jenkins.plugins.gitlabbranchsource.GitLabSCMNavigator' / traits\n        traits\n\nYou can also use JCasC to directly create job from a Job DSL script. For example see the plugin repository.\n\nHow to talk to us about bugs or new features?\n\nThis project uses Jenkins JIRA to track issues. You can file issues under gitlab-branch-source-plugin component.\n\nSend your mail in the Developer Mailing list.\n\nJoin our Gitter channel.\n\nFuture work\n\nActively maintain GitLab Branch Source Plugin and take feedbacks from users to improve the plugin’s user experience.\n\nExtend support for GitLab Pipeline to Blueocean.\n\nResources\n\nGitLab API Plugin\n\nGitLab API Plugin Wiki\n\nGitLab Branch Source Plugin\n\nProject Summary\n\nGitHub Branch Source Plugin Release\n\nThank you Jenkins and Google Summer of Code :)","title":"Introducing new GitLab Branch Source Plugin","tags":["gitlab","plugins","pipeline","multibranch","gsoc","gsoc2019"],"authors":[]}}]}},"pageContext":{"tag":"gsoc2019","limit":8,"skip":0,"numPages":3,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}