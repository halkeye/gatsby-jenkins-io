{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/feedback/page/7",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2010-03-01T00:00:00.000Z","id":"82b8bb39-7fe3-52fe-872c-2b156b820fec","slug":"/blog/2010/03/01/learn-about-ci-with-hudson-sf-java-user-group/","strippedHtml":"A few weeks ago our fearless leader Kohsuke Kawaguchi joined the San Francisco Java Users Group to talk about continuous integration with Hudson. Thanks to Marakana for organizing the meetup, and Aleksandar Gargenta for posting the video and slides, embedded below.\n\nLearn About Continuous Integration With Hudson Directly From the Source","title":"Learn about CI with Hudson (SF Java User Group)","tags":["feedback","jobs","just for fun"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-26T00:00:00.000Z","id":"fb7fbd3d-e506-5ad9-a631-1be7975ed7a0","slug":"/blog/2010/02/26/this-week-in-plugins/","strippedHtml":"This week we had 18 plugin releases, with the xUnit plugin managing to have a release almost every day. For this edition of TWiP I was actually able to generate the log of releases mostly automatically thanks to rpetti who contributed the script to the contiuous-blog-tools repository on GitHub.\n\nThis past week saw two new plugins, the SSH plugin and the Global Build Stats plugin, the latter of which is still in \"alpha\".\n\nFeb 19th, 2010\n\nPerforce Plugin 1.0.21\n\nFeb 20th, 2010\n\nMonitoring 1.12.0\n\nFeb 21st, 2010\n\nHudson global-build-stats plugin 0.1-alpha1\n\nHudson Gallio plugin 0.70\n\nHudson cppunit plugin 1.2\n\nHudson Emma plugin 1.12\n\nHudson Backup plugin 1.4.1\n\nFeb 23rd, 2010\n\nHudson Sonar Plugin 1.3\n\nHudson Gradle plugin 1.3\n\nHudson Sectioned View Plugin 1.10\n\nHudson xUnit plugin 0.6.1\n\nFeb 24th, 2010\n\nHudson Cpptest plugin 0.3\n\nHudson SSH plugin 1.0\n\nHudson ClearCase UCM Baseline Plug-in 1.3\n\nFeb 25th, 2010\n\nHudson NAnt Plugin 1.3.1\n\nHudson Ivy plugin 1.1\n\nHudson Bazaar plugin 1.4\n\nDimensions SCM plugin 0.7.0","title":"This Week in Plugins","tags":["infrastructure","feedback"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-25T00:00:00.000Z","id":"eb0ddec5-9099-58de-bd48-3059769cc380","slug":"/blog/2010/02/25/spotlight-on-springsource/","strippedHtml":"For this week’s user spotlight segment, I’m talking with Doug MacEachern of Hyperic, part of SpringSource, a division of VMware, hoping I got that dependency chain correct. Hyperic builds enterprise systems monitoring and management software and also contributes to a number of open source projects, many of which are built with Hudson.\n\nTo date I must say that Doug’s use of Hudson is one of the largest and more impressive installations I’ve seen. I don’t want to spoil the interview, but they’re testing on platforms that don’t even run Java. Madness! If you think you can out-do him, you can find my email information at the bottom of the interview, I’d love to hear about it!\n\nWithout further ado, Doug from SpringSource.\n\nDoug We started using Hudson in early 2008 to automate the build and testing of our SIGAR library.  The SIGAR API implements a portable interface in C for gathering system information related to memory, processors, file systems, network interfaces, network connection tables, the process table and more.  We support dozens of OS + version + architecture combinations, along with several language bindings.  SIGAR is a key component of the Hyperic HQ agent and is used in other projects including Hypertable, Terracotta, GridGain and MySQL enterprise.\n\nHudson Was SpringSource using continuous integration before Hudson? If so, what caused you guys to switch?\n\nDoug The SIGAR project actually started back in late 2002 and our initial CI system for the project was a good old-fashioned Perl script / ssh for-loop.  It was good enough to get by in the early years, but a proper replacement was long overdue.  We were (and still are) using Bamboo to build and test Hyperic HQ.  We looked at using Bamboo for SIGAR, but at the time the \"Remote Agent\" feature was new to Bamboo and was not in the version we were running. Rather than disrupt HQ’s CI along with taking on an additional licensing cost, we gave Hudson a shot and haven’t looked back.\n\nHudson Might be a bit of personal bias, but I think you guys made the right choice there! Checking out the public Hudson server, I see that SpringSource is building/testing products on AIX, the BSDs, various flavors of Linux, Solaris, Windows and Mac OS X, what kinds of languages/build systems are being built by Hudson? How varied are the environments that Hudson executes jobs in?\n\nDoug And HP-UX! The matrix of SIGAR’s supported OS + kernel version + architecture + distribution is north of 100 combinations.  So, Hudson is covering a very heterogeneous collection of systems with most jobs tied to a specific node.  Our primary focus has been the C API and Java JNI bindings, using an Ant based build system and a JUnit test suite.  SIGAR also has language bindings for Perl, Ruby, Python, Erlang, PHP, C# and Lua.  So, Hudson is also driving each language’s extension build system of choice, respectively: MakeMaker, Rake, distutils, emake, phpize, Nant and autotools.\n\nHudson What do you consider to be noteworthy about your Hudson implementation? Besides, clearly, that you’re running Hudson agents on just about every OS that will run Java :)\n\nDoug The majority of our x86/x64 nodes are virtualized on VMware ESX and VMware Server.  We also have a fine collection of PPC, PA-RISC and Sparc hardware in house, with IA-64 and s390x hosted elsewhere by third parties.  Some of these systems are too old to support Java 1.5 and/or Git.  As a simple work-around, the nodes share an NFS workspace where the agent node takes care of 'SCM' and 'Post-build Actions', but the 'Build' step in between is invoked via ssh. The SIGAR distribution includes about two dozen native binaries that are compatible with most of the supported platform matrix.  There’s a Hudson job for each Git branch that rolls these binaries into a release bundle. Another job flavor uses the Hudson URL SCM plugin to download and unit test the binary releases on the rest of the platform matrix.  This is key to testing binary compatibility.  Similar for the collectd project, each Git branch has a job that runs automake, autoconf, etc. and 'make dist' into the collectd release flavor tarball.  So a push to git.verplant.org by octo in Germany triggers an update of the collectd release artifact, which in turn triggers the URL SCM jobs to download the tarball, unpack and build over here at our west coast locations. We have four Hudson servers in different locations, three of which are managing most of the jobs behind firewalls.  Select jobs use the Build Publisher plugin to post the job and its artifacts to our public Hudson server. This makes it easy for us to provide platform specific bug fixes in binary form, share build logs with external projects and host a central repository of artifacts reachable by all of the URL SCM based jobs. Our public Hudson server also provides CI for the HQApi project and jobs to build HQ plugins, again making it easier to distribute patch fixes in binary form between releases.\n\nHudson I’ve very impressed! I’m glad the fact that Java won’t run on some of the platforms you want to support hasn’t stopped you from testing anyways. Clearly you folks have written some addition tools behind the scenes, mind discussing them a bit?\n\nDoug Other than some Hudson plugin tweaks and additions, the Perl script I mentioned earlier was converted to generate the majority of our Hudson jobs and includes a simple templating system.  The same script generates jobs to build collectd and a few other projects.  We’ve outgrown this flavor of the script and have started working on integrating Opscode Chef to automate our Hudson configration along with the systems we build and test on. And of course, we’re using Hyperic HQ to monitor our Hudson server instances, agent and node machines.\n\nHudson But of course, I’d say dog-fooding is an important part of any continuous testing set up. It appears that SpringSource has bought in pretty deeply to a Hudson-oriented workflow, given the amount of time and resources you all have invested in getting the massive farm set up that you have. That said, on a scale from 1-10, how important would you rate Hudson to your day-to-day workflow?\n\nDoug I’d say at least an 8, although my daily workflow doesn’t always directly involve Hudson.  Most of those points go to Hudson for automating what otherwise would be interrupting my workflow on a daily basis.\n\nI'd like to thank Doug again for giving us a peek behind the curtains at SpringSource and how they're using Hudson. If you would like to discuss your organization or company's use of Hudson for Continuous Blog, you can contact me at `tyler` at `linux.com`\n\nEditor’s note: Doug was the primary author of mod_perl for many years until he was tricked into \"helping out\" with a new project.  This project turned into Hyperic HQ which shifted his focus to systems and application management for the past ~7 years and counting.  He occasionally rambles on Twitter as @dougmaceachern.","title":"Spotlight on: SpringSource","tags":["general","feedback","interview"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-24T00:00:00.000Z","id":"2dac8f54-6f5e-50f9-9277-4b98073d0146","slug":"/blog/2010/02/24/hudson-at-pycon/","strippedHtml":"This past week PyCon has been going on in Atlanta, where Titus Brown gave a talk titled:\n\nWhy not run all your tests all the time? A study of continuous integration systems\n\nTitus has some notable quotes \"just use Hudson\" but overall a good introduction of CI and a breakdown of some of the challenges behind continuous integration. He also does a good job going over getting started with Hudson, setting up a basic Python project that incorporates JUnit XML reporting and agents.\n\n\"Yeah, we used Buildbot until recently, then I switched us to Hudson and my life got a lot better\"\n\nIf you’re using Python with Hudson, I highly recommend watching the talk (embedded below).","title":"Hudson at PyCon","tags":["core","feedback"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-22T00:00:00.000Z","id":"f3a9b5ed-57ae-5584-924b-67bf0b9b498a","slug":"/blog/2010/02/22/hudson-1-347-released/","strippedHtml":"The release of Hudson 1.347 last friday, February 19th, was a relatively \"minor\" one insofar that it contained an assortment of smaller fixes instead of fixes to major regressions (they weren’t any to be fixed) or major features added. There were however some notable commits in this release cycle that didn’t make the changelog just yet, for example https://twitter.com/ godin [godin] committed an ebuild which will allow for a native package of Hudson for Gentoo Linux, joining the ranks of the existing packages for Debian/Ubuntu, FreeBSD, OpenSolaris, openSUSE and RedHat/Fedora Linux. The bundled Subversion plugin was updated and thanks to sogabe and wyukawa the Japanese translations for Hudson got some updates as well.\n\nFor Hudson developers, both plugin and core, this release contains some notable changes from mindless (a.k.a Alan Harder), a number of calls which have been deprecated for over two years have finally been pruned from the code base:\n\nHudson.addListener(JobListener), Hudson.removeListener(JobListener)\n\nEntire listeners.JobListener class (replaced by ItemListener)\n\nOne form of DirectoryBrowser constructor\n\nOne form of Descriptor.configure() (with HttpServletRequest param)\n\nDescriptor.convert(Map) and 4 implementations of this method, and code calling it in Descriptor.readResolve() (this code called save() whenever updating data, so there should be no remaining cases out there)\n\nAlan’s quest for removing deprecated code will likely continue for a while, but this is a good step in the right direction, keeping Hudson’s internals in good working order. Worth mentioning, the influx of plugin releases in the This Week in Plugins from a couple weeks ago, was driven largely by Alan, rummaging through the code of older plugins, updating plugins left and right.\nNow the breakdown for this release:\n\nBugs fixed\n\nFix javascript problem showing test failure detail for test name with a quote character. ( issue 1544)\n\nHudson can incorrectly configure labels for the controller when bleeding edge EC2 plugin is used.\n\nFixed the regression wrt the whitespace trimming caused by 1.346. ( issue 5633)\n\nUnder some circumstances, Hudson can incorrectly delete the temporary directory itself. ( issue 5642)\n\nNewlines in MAVEN_OPTS environment variable can cause problems in other contexts. ( issue 5651)\n\nEnhancements\n\nImproved the form validation mechanism to support multiple controls. ( issue 5610)\n\nAdded message to agent log when it has successfully come online. ( issue 5630)\n\nContributors\n\nThis release of Hudson contained 36 commits from 7 different contributors to \"core\":\n\nabayer\n\nhttps://twitter.com/ godin [godin]\n\nhuybrechts\n\nkohsuke\n\nmindless\n\nsogabe\n\nwyukawa\n\nAs usual, you can go grab the latest .war file straight from hudson-ci.org or if you’re using a native package, use your package manager to upgrade.","title":"Hudson 1.347 Released","tags":["development","feedback","just for fun","links"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-19T00:00:00.000Z","id":"b2019f50-9069-58bc-a953-a153928b72e7","slug":"/blog/2010/02/19/this-week-in-plugins/","strippedHtml":"Last week’s TWIP enumerated the release of 26 different plugin, this past week has seen 19 unique releases in comparison. You might be tempted to assume that less plugin development has occurred over the past week, which isn’t the case. Last week a number of the releases were \"code updates\", i.e. plugins being rebuilt against the latest Hudson plugin API as opposed to new features or bug-fixes. With the releases of plugins this past week, it seems a large number of the releases contained new features and bug fixes, including three new plugins!\n\nMaking their Hudson debut are the following\n\nAgent Monitor for system load average\n\nTool Environment plugin\n\nIvy plugin\n\nIf you’re interested in contributing to an existing plugin, or building your own, I highly recommend checking out the plugin tutorial and joining the dev@ mailing list. That said, here are this week’s releases, starting with last Friday.\n\nFeb 12th, 2010\n\nFile System SCM 1.6 released\n\nJIRA plugin 1.19 released\n\nJob Configuration History Plugin 1.2 released\n\nMSTest plugin 0.6 released\n\nAgent Monitor for system load average 1.1 released\n\nTemplate Project plugin 1.2 released\n\nFeb 13th, 2010\n\nxUnit plugin 0.5.2 released\n\nFeb 14th, 2010\n\nAmazon EC2 plugin 1.6 released\n\nDependency Analyzer Plugin 0.5 released\n\nDocLinks plugin 0.3 released\n\nTool Environment plugin 1.0 released\n\nFeb 15th, 2010\n\nArtifactory Plugin 1.0.6 released\n\nDimensions SCM plugin 0.6.8 released\n\nFeb 16th, 2010\n\nHTML Publisher plugin 0.2.2 released\n\nFeb 17th, 2010\n\nIvy plugin 1.0 released\n\nJBoss Management Plugin 1.0.2 released","title":"This Week in Plugins","tags":["infrastructure","feedback"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-18T00:00:00.000Z","id":"31ee437f-9e98-5ac2-b284-4a71fe1a1813","slug":"/blog/2010/02/18/spotlight-on-visfleet/","strippedHtml":"For this week’s user spotlight, I’m talking to Rasheed Abdul-Aziz of\nVisFleet Ltd. out of New Zealand. This being our second \"spotlight\" on a particular company, the format can still be considered beta; if you have any additional questions for Rasheed, feel free to ask them in the comments and I’ll try to get Rasheed to answer.\n\nSimilar to the spotlight on ITA Software from last week, VisFleet builds business software helping their customers operate their businesses more effectively through web applications in tandem with mobile applications. While I could endlessly discuss the power and flexibility of Hudson, particularly for building web software, I’ll let Rasheed do the majority of the talking, so let’s get to it.\nintroducing VisFleet, would you mind explaining a bit more of what you guys do and some of the challenges it presents?\n\nRasheed It’s a pleasure. VisFleet has changed it’s direction somewhat, moving from\nservices into product development. As we move into product, we want to be\nresponsive to our customers. Agile development is becoming core to how we\noperate, and as such, continuous builds and integration became a major\nfactor. We now plan to offer two products for work planning and and vehicle\ntracking. We want to present these systems with a SaaS model. The world of\nonline, pay as you go software, has a culture of frequent improvements and\nresponsiveness to user feedback. If we want to do well in this space, it’s\nimportant that we can code, test, release and feed back in\ntight iterations.\n\nHudson How long has VisFleet been using Hudson?\n\nRasheed About 14 months now.\n\nHudson Did you guys work with continuous integration prior to starting to use\nHudson? If so, what system was VisFleet using and what compelled the switch\nto\nHudson?\n\nRasheed We didn’t actually, but certainly everyone I knew who was doing continuous\nintegration recommended Hudson.\n\nHudson That’s good to hear! How lucky you are to know so many smart people :)\nWhat kinds of projects is VisFleet building with Hudson?\n\nRasheed We build and test Ruby On Rails service layer applications. We also build Flex applications using the Flex SDK for our web-deployed RIA offering. Lastly, we build our iPhone applications using Hudson.\n\nHudson I’d say building and testing web applications alone with Hudson would be quite notable, but to add Flex and iPhone applications into the mix as well is certainly interesting! Anything specific that’s interesting about VisFleet’s use of Hudson?\n\nRasheed It runs multiple agent types, and automates deploys to different cloud\ninfrastructures. At the moment we have 2 Flex build agents running Ubuntu, A\nMac Mini building our iPhone app, and several Ubuntu Servers testing our web\ntier. We currently deploy to Citrix Xen servers, and soon to Rackspace Cloud as well.\n\nIn the near future, we will automate integration by first updating an\nintegration system on the cloud, deploying our system and then running our\ntests. All very quickly.\n\nWe have very little metric and reporting output from Hudson, and this is\nnoteworthy in it’s absence. It’s very important  to use to provide clear\ndevelopment metrics and integrate those into our Scrum / Kanban approach. What\nHudson has done for us is educate us about the possibilities in\nvisualisation and reporting, and is informing the way we structure our\ncodebase going forward. Soon, we expect to have a premium test driven\ndevelopment environment and workflow.\n\nHudson We all know Hudson isn’t perfect but there’s a lot of room for extending it to meet your demands if need be, what additional tools have you written to glue everything together behind\nthe scenes?\n\nRasheed We are using ' Vlad the Deployer ' and in legacy, ' Capistrano ' for a lot of\nour deployment and build tasks. These are merely infrastructure specific\nscripts to ensure we can bring up live environments in the shortest amount\nof time possible.\n\nHudson So it sounds like you guys are all on board with Hudson, on a 1-10 scale, how important would you rate Hudson’s importance to VisFleet’s workflow?\n\nRasheed 7, aiming at 10. The missing points are just a matter of time :)\n\nThanks again to Rasheed for chatting with me about how Hudson helps VisFleet keep cranking on what they do best. If you would like to discuss your company’s use of Hudson for Continuous Blog, you can contact me at tyler at linux.com\n\nEditor’s Note: Rasheed Abdul-Aziz is a Software Architect at VisFleet Ltd. Rasheed specializes in Flex RIA development, but also loves a good build script and manages Hudson for VisFleet. Find out more about VisFleet and Rasheed on the VisFleet devblog and Rasheed’s blog","title":"Spotlight on: VisFleet","tags":["general","feedback","interview"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-15T00:00:00.000Z","id":"14568d6a-fed2-5300-b85e-0b16bfc36af4","slug":"/blog/2010/02/15/hudson-1-346-released/","strippedHtml":"After some scrambling earlier in the week to get 1.345 out the door, correcting some regressions in 1.344, the Hudson team still rolled out a 1.346 release last Friday, February 12th, 2010. Similar to the past couple releases, 1.346 had a good number of bug fixes, including a a performance fix when dealing with larger build submissions and a substantial revision of the SCM polling code to fix a long-standing issue with the quiet period blocking the build from running ( issue 2180), there were also some additionally memory improvements made to Jelly, the library with which the majority of Hudson’s web interface is rendered, that Kohsuke will detail in a later post.\n\nHere’s the breakdown:\n\nBugs fixed\n\nMaven modules should not be buildable when the parent project is disabled. ( issue 1375)\n\nFixed the broken quiet period implementation when polling interval is shorter than the quiet period. (Changes in SCM impls are needed for this to take effect.) ( issue 2180)\n\nEscape username in URLs in case it contains special characters such as \"#\". ( issue 2610)\n\nFix sidepanel link for People to be visible and show view-specific info when appropriate. ( issue 5443)\n\nImproved HTML rendering, not using closing tags that do not exist in HTML. ( issue 5458)\n\nShow better error message for missing view type selection when creating a view. ( issue 5469)\n\nHudson wasn’t properly streaming a large external build submission, which can result in OOME and unresponsiveness.\n# Enhancements\n\nUse fixed-width font in text area for shell/batch build steps. ( issue 5471)\n\nUse user selected icon size on People page. ( issue 5447)\n\nSpeed/footprint improvement in the HTML rendering.\n\n# Contributors This release of Hudson contained 37 commits from 3 different contributors to \"core\": * kohsuke * mindless * sogabe\nAs usual, you can go grab the [latest .war file]( http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from hudson-ci.org or if you’re using a native package, use your package manager to upgrade. ---- Updated: Added the \"official\" changelog notes","title":"Hudson 1.346 Released","tags":["development","feedback","just for fun","links"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"/blog/author/rtyler","twitter":"agentdero"}]}}]}},"pageContext":{"tag":"feedback","limit":8,"skip":48,"numPages":8,"currentPage":7}},
    "staticQueryHashes": ["3649515864"]}