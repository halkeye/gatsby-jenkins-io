{
    "componentChunkName": "component---src-templates-tag-blog-list-template-js",
    "path": "/node/tags/jupyter",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2020-08-27T00:00:00.000Z","id":"c3c50d8e-f813-526e-9f03-e29284122a65","slug":"/blog/2020/08/27/machine-learning-plugin-coding-phase3/","strippedHtml":"Good to see you all again !\n\nThis is my final blog post about coding phase 3 in Jenkins Machine Learning Plugin for GSoC 2020.\nBeing at the end of GSoC 2020, we had to finish all the pending issues and testing before a stable release in the main repository. Throughout this program, there were lots of learning and hard work will make this plugin valuable to the Data Science and Jenkins community.\n\nSummary\n\nWith combining all of the work in phase 1, 2 and 3, initial version of Machine learning plugin( 1.0 ) was successfully released in Jenkins plugin repository.\nAn interesting feature which allows users to connect to their existing programming language kernels more than connecting to only IPython kernel was introduced in this phase. It can be selected in multiple steps with different kernel.\nImages and graphs produced by Jupyter notebooks will be saved in user preferred folder in the workspace that can be used for reporting/analytic purposes later. Hoping this blog summarizes the Machine Learningâ€™s features and future contributions. Thank you for your interest and support !!!\n\nMain features of Machine Learning plugin\n\nExecute Jupyter notebooks directly\n\nRun different language scripts using multiple build steps\n\nConvert Jupyter Notebooks to Python\n\nConfigure Jupyter kernels( IPython, IRKernel, IJulia etc) properties\n\nSupport to execute Notebooks/scripts on Agent\n\nExtract graph/map/images from the code\n\nEach build step can be associated with a machine learning task\n\nSupport for Windows and Linux\n\nFuture improvements\n\nImproving performance of the plugin\n\nTry to implement jira:JENKINS-63377[]\n\nSupport parameterized definitions in Notebooks jira:JENKINS-63478[]\n\nIncreasing testing code coverage\n\nMultiple language kernel support\n\nIf there are existing kernels in the system, user will be able to configure in the global configurations in order to apply in the builder/step configuration.\n\nSome popular interactive kernels\n\nIPython for python\n\nIRKernel for R\n\nIJulia for Julia\n\nIJavascript for javascript\n\nMore kernels and installation guides are found here. https://github.com/jupyter/jupyter/wiki/Jupyter-kernels\n\nDump images and graphs\n\nText output will be displayed in the console log. At the same time images/graphs/heat maps and HTMLs will be saved in the workspace. An action is shown in the left panel to display images in realtime. Due to the Content Security Policy of jenkins, some HTMLs which contain harmful javascript may not render in jenkins UI.\n\nFixed bugs\n\nThere were more bugs identified and fixed with many interactive testings. Setting the working directory of kernels was a big issue while getting datasets/files by script. Zeppelin process launcher was bypassed to fix this issue.\n\nPatch version released\n\nA major bug which was created while setting the process working directory had patched in the v1.0.1. The latest release is more stable now.\n\nAcknowledgement\n\nMachine Learning plugin had been developed under GSoC 2020 program. A huge thanks to Bruno P. Kinoshita, Marky Jackson, Shivay Lamba, Ioannis Moutsatsos and Org admins for this wonderful experience.\nI would be grateful for contributing this plugin continuously and more in Jenkins.\n\nResources\n\nCommunity Bonding blog post\n\nPhase 1 blog post\n\nPhase 2 blog post\n\nGithub\n\nProject page\n\nPlugin page\n\nDesign document","title":"Machine Learning Plugin project - Coding Phase 3 blog post","tags":["machinelearning","datascience","jupyter","plugins","gsoc","gsoc2020"],"authors":[]}}]}},"pageContext":{"tag":"jupyter","limit":8,"skip":0,"numPages":1,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}