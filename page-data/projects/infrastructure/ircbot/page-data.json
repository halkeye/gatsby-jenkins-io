{
    "componentChunkName": "component---src-templates-simplepage-js",
    "path": "/projects/infrastructure/ircbot",
    "result": {"data":{"simplePage":{"html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#available-actions\">Available actions</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#irc-management\">IRC Management</a></li>\n<li><a href=\"#github-repo-management\">GitHub Repo Management</a></li>\n<li><a href=\"#issue-tracker-management\">Issue Tracker Management</a></li>\n<li><a href=\"#hosting-requests\">Hosting Requests</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>The primary Jenkins IRC Channel (<code>#jenkins</code> on the\n<a href=\"https://libera.chat/\">Libera Chat</a>\nnetwork) uses an administrator bot \"jenkins-admin\" so that some of the project\noperation work can be done by the community. This bot is available for anyone\nin the channel with \"voice\", which is an IRC jargon for those users who are\ntrusted.</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"available-actions\"><a class=\"anchor\" href=\"#available-actions\"></a>Available actions</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Actions should be addressed to the <code>jenkins-admin</code> bot as if you are speaking\ndirectly to the robot.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"irc-management\"><a class=\"anchor\" href=\"#irc-management\"></a>IRC Management</h3>\n<div class=\"paragraph\">\n<p><strong>Grant voice to a user</strong></p>\n</div>\n<div class=\"paragraph\">\n<p>Any of the following variations will work for granting voice to a user named\n<code>USER</code>:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Make USER voice\njenkins-admin: Give USER voice\njenkins-admin: Grant USER voice\njenkins-admin: Add USER voice</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Ungrant voice to a user</strong></p>\n</div>\n<div class=\"paragraph\">\n<p>Any of the following variations will work for removing voice from a user named\n<code>USER</code>:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Remove USER voice\njenkins-admin: Delete USER voice\njenkins-admin: Ungrant USER voice</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Get help</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: help</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Get the version of the bot</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: version</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Kick a user</strong></p>\n</div>\n<div class=\"paragraph\">\n<p>Only should be used when dealing with spammers or otherwise highly abusive\nparticipants to the IRC channel.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: kick USER</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Set channel topic</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: set topic &lt;TOPIC HERE&gt;</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"github-repo-management\"><a class=\"anchor\" href=\"#github-repo-management\"></a>GitHub Repo Management</h3>\n<div class=\"paragraph\">\n<p>The following actions are used for managing repositories in the\n<a href=\"https://github.com/jenkinsci\">jenkinsci organization</a>\non GitHub.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Grant a committer access</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Make USER a committer of/to REPO\njenkins-admin: Give USER a commit access of/to REPO\njenkins-admin: Grant USER a commit access of/to REPO</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This adds the user to the per-repo team in the specified repository, typically granting admin access.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Grant maintainer access to a team</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Make USER a maintainer on TEAM\njenkins-admin: Give USER a maintainer on TEAM\njenkins-admin: Grant USER a maintainer on TEAM</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>For example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Make some-user a maintainer on blueocean-plugin Developers</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This adds the user to the specified team with the maintainer role.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Make team visible</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Make TEAM team visible</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This makes the specified team 'visible' (still requires organisation membership to see it),\nwhich makes the team show up in reviewers when using CODEOWNERS, and allows non members of the team\nto mention it.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Fork an existing repository on GitHub</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Fork USER/REPO [on github]\njenkins-admin: Fork USER/REPO [on github] as NEW_REPO_NAME\njenkins-admin: Fork GITHUB_REPO_URL [on github] as NEW_REPO_NAME</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This will fork a repository into Jenkins. The said user will be added as a\ncommitter to all the Jenkins repositories.</p>\n</div>\n<div class=\"paragraph\">\n<p>By convention, plugin repositories in Jenkins has the \"PLUGINID-plugin\" name,\nso please use the \"as NEW_REPO_NAME\" clause to adjust the repository name. A\nprefix of \"jenkins\" or any other irrelevant information should be removed.</p>\n</div>\n<div class=\"paragraph\">\n<p>For example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: fork example/jenkins-foobar as foobar-plugin\njenkins-admin: fork https://github.com/somebody/foobar-plugin</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Create a new repository on GitHub</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Create REPO on github\njenkins-admin: Create REPO on github for SOMEONE</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>In the latter form, the specified someone will get the commit access to the\nrepository right away.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"issue-tracker-management\"><a class=\"anchor\" href=\"#issue-tracker-management\"></a>Issue Tracker Management</h3>\n<div class=\"paragraph\">\n<p><strong>Create an issue tracker component</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Create COMPONENT in the issue tracker for USER\njenkins-admin: Create COMPONENT in the bug database for USER</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Where COMPONENT is the subcomponent name in the issue tracker (normally the\nname of the plugin), and USER is the jenkins-ci.org user ID who gets the\ninitial notification when a new bug is filed.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Set default assignee of issue tracker component</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Set USER as default assignee of COMPONENT\njenkins-admin: Make USER the lead of COMPONENT</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Where COMPONENT is the subcomponent name in the issue tracker (normally the\nname of the plugin), and USER is the jenkins-ci.org user ID who gets the\ninitial notification when a new bug is filed.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Remove the default assignee</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Remove the default assignee of COMPONENT\njenkins-admin: Remove lead of COMPONENT</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Rename the component</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Rename component COMPONENT to NEW_NAME</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Modify the component description</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Set description of COMPONENT to \"DESCRIPTION\"\njenkins-admin: Set the description for component COMPONENT to \"DESCRIPTION\"</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Remove the component</strong></p>\n</div>\n<div class=\"paragraph\">\n<p>The command removes the specified component. All its issues will be moved to COMPONENT2</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: Remove component COMPONENT1 and move its issues to COMPONENT2\njenkins-admin: Delete component COMPONENT1 and move its issues to COMPONENT2</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"hosting-requests\"><a class=\"anchor\" href=\"#hosting-requests\"></a>Hosting Requests</h3>\n<div class=\"paragraph\">\n<p>The IRC Bot provides hosting management commands which are used by the <a href=\"/project/teams/hosting/\">Jenkins Hosting Team</a> to process the\nhosting requests for new Jenkins plugins, libraries and other components.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Verify the plugin/library hosting request from Jira</strong></p>\n</div>\n<div class=\"paragraph\">\n<p>This command will launch the automatic hosting request checker.\nIt will verify the hosting ticket in Jira and check the links supplied in the <code>HOSTING</code> tickets.\nThen it will also verify the Maven and Gradle settings and existence of the expected files in the repository.\nOther verification steps (e.g. security audit) should be done manually by contributors.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: check hosting-XXXX</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>Approve and initiate a plugin/library request from Jira</strong></p>\n</div>\n<div class=\"paragraph\">\n<p>This command will fork the repository on GitHub, add all listed users as committers and create a JIRA component with the issue submitter as the default assignee. (hosting-XXXX is the JIRA item that was submitted for hosting)</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>jenkins-admin: host hosting-XXXX</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>","id":"projects/infrastructure/ircbot.adoc","title":"IRC Bot"}},"pageContext":{"id":"projects/infrastructure/ircbot.adoc"}},
    "staticQueryHashes": ["3649515864"]}