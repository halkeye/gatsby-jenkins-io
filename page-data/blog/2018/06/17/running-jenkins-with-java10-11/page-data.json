{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2018/06/17/running-jenkins-with-java10-11/",
    "result": {"data":{"blog":{"html":"<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-warning\" title=\"Warning\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>Please refer to <a href=\"/doc/administration/requirements/jenkins-on-java-11\">Running Jenkins on Java 11</a> documentation to have the up-to-date details on how to run Jenkins on Java 11.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-warning\" title=\"Warning\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>Guidelines in this blogpost are rendered obsolete <a href=\"/blog/2018/12/14/java11-preview-availability/\">by the Java 11 Support Preview Availability\nannouncement</a> on Dec 13, 2018 and by the Java 11 GA release on Sep 25, 2018.\nSee the <a href=\"/doc/administration/requirements/java/\">Java support page</a>\nfor up-to-date information about running Jenkins with Java 11.\nThe Jenkins project also no longer ships preview versions for Java 10.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>As you probably know, we will have a\n<a href=\"/blog/2018/06/08/jenkins-java10-hackathon/\">Jenkins and Java 10+ online hackathon</a> this week.\nIn order to enable early adopters to try out Jenkins with new Java versions,\nwe have updated Jenkins core and Docker packages.\nStarting from <a href=\"/changelog/#v2.127\">Jenkins 2.127</a>,\nweekly releases can be launched with Java 10 and Java 11 (preview).\nAlthough there are some known compatibility issues,\nthe packages are ready for evaluation and exploratory testing.</p>\n</div>\n<div class=\"paragraph\">\n<p>This article explains how to run Jenkins with Java 10 and 11 using Docker images and WAR files.\nIt also lists known issues and provides contributor guidelines.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"running-in-docker\"><a class=\"anchor\" href=\"#running-in-docker\"></a>Running in Docker</h3>\n<div class=\"paragraph\">\n<p>In order to simplify testing, we have created a new\n<a href=\"https://hub.docker.com/r/jenkins/jenkins-experimental/\">jenkins/jenkins-experimental</a>\nrepository on DockerHub.\nThis repository includes various Jenkins Core images, including Java 10 and Java 11 images.\nWe have also set up development branches and continuous delivery flows for Jenkins core,\nso now we can deliver patches for these images without waiting for weekly releases.</p>\n</div>\n<div class=\"paragraph\">\n<p>You can run the image simply as:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>docker run -p 8080:8080 -p 50000:50000 jenkins/jenkins-experimental:latest-jdk11</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The following tags are available:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>2.127-jdk10</code>, <code>2.128-jdk10</code> - Weekly releases packaged with Java 10</p>\n</li>\n<li>\n<p><code>2.127-jdk11</code>, <code>2.128-jdk11</code> - Weekly releases packaged with Java 11</p>\n</li>\n<li>\n<p><code>latest-jdk10</code> - Jenkins core build from the <a href=\"https://github.com/jenkinsci/jenkins/tree/java10-support\">java10-support</a> branch</p>\n</li>\n<li>\n<p><code>latest-jdk11</code> - Automatic build from the core&#8217;s <a href=\"https://github.com/jenkinsci/jenkins/tree/java11-support\">java11-support</a> branch.</p>\n</li>\n<li>\n<p><code>blueocean-jdk10</code>, <code>blueocean-jdk11</code> - Experimental build, which bundles all Jenkins Pipeline and\nBlue Ocean patches required to run on Java 11.\nIf you want to try Pipeline, use this image</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Java 10/11 images are fully compatible with the official\n<a href=\"https://github.com/jenkinsci/docker/blob/master/README.md\">jenkins/jenkins</a>\nDocker image documentation,\ne.g. you can use <code>plugins.txt</code> to install plugins, mount volumes and pass extra options via environment variables.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"running-jenkins-without-docker\"><a class=\"anchor\" href=\"#running-jenkins-without-docker\"></a>Running Jenkins without Docker</h3>\n<div class=\"sect3\">\n<h4 id=\"java-10\"><a class=\"anchor\" href=\"#java-10\"></a>Java 10</h4>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Download Jenkins WAR for 2.127 or above\n(or build the <a href=\"https://github.com/jenkinsci/jenkins/tree/java10-support\">experimental branch</a>)</p>\n</li>\n<li>\n<p>Run WAR with the following command:</p>\n</li>\n</ol>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-shell\" data-lang=\"shell\">${JAVA10_HOME}/bin/java --add-modules java.xml.bind -jar jenkins.war \\\n    --enable-future-java --httpPort=8080 --prefix=/jenkins</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"java-11\"><a class=\"anchor\" href=\"#java-11\"></a>Java 11</h4>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Download Jenkins WAR for 2.127 or above\n(or build the <a href=\"https://github.com/jenkinsci/jenkins/tree/java11-support\">experimental branch</a>)</p>\n</li>\n<li>\n<p>Download the following libraries to the same directory as jenkins.war</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://central.maven.org/maven2/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar\">jaxb-api-2.3.0.jar</a> (save as jaxb-api.jar)</p>\n</li>\n<li>\n<p><a href=\"https://central.maven.org/maven2/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-core-2.3.0.1.jar\">jaxb-core-2.3.0.1.jar</a> (save as jaxb-core.jar)</p>\n</li>\n<li>\n<p><a href=\"https://central.maven.org/maven2/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-impl-2.3.0.1.jar\">jaxb-impl-2.3.0.1.jar</a> (save as jaxb-impl.jar)</p>\n</li>\n<li>\n<p><a href=\"https://github.com/javaee/activation/releases/download/JAF-1_2_0/javax.activation.jar\">javax.activation v.1.2.0</a>  (save as javax.activation.jar)</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Run the following command:</p>\n</li>\n</ol>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-shell\" data-lang=\"shell\">Run Jenkins with ${JAVA11_HOME}/bin/java \\\n    -p jaxb-api.jar:javax.activation.jar --add-modules java.xml.bind,java.activation \\\n    -cp jaxb-core.jar:jaxb-impl.jar \\\n    -jar jenkins.war --enable-future-java --httpPort=8080 --prefix=/jenkins</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"current-state\"><a class=\"anchor\" href=\"#current-state\"></a>Current state</h3>\n<div class=\"paragraph\">\n<p>As of June 17, we have achieved the following state:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Jenkins 2.127+ starts up successfully with\n<a href=\"https://www.oracle.com/technetwork/java/javase/10-0-1-relnotes-4308875.html\">OpenJDK 10.0.1</a> and\nOpenJDK 11+17-Debian-2 (preview)</p>\n</li>\n<li>\n<p>It is possible to configure and run simple Freestyle jobs</p>\n</li>\n<li>\n<p>Jenkins agents are able to start on Java 10, to connect to the controller and to execute Freestyle jobs</p>\n</li>\n<li>\n<p>Agents can be connected using <a href=\"https://plugins.jenkins.io/docker-plugin\">Docker Plugin</a> and <a href=\"https://plugins.jenkins.io/yet-another-docker-plugin\">Yet Another Docker Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/job-dsl\">Job DSL plugin</a> works well on demo projects</p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/maven-plugin\">Maven Integration plugin</a> can build\n<a href=\"https://github.com/jenkinsci/plugin-pom\">plugin-pom</a>-based\nJenkins plugins when running on agents with JDK 8</p>\n</li>\n<li>\n<p>It is possible to create <a href=\"https://plugins.jenkins.io/cloudbees-folder\">Folders</a> and manage items in them</p>\n</li>\n<li>\n<p>It is possible to configure Jenkins using <a href=\"https://github.com/jenkinsci/configuration-as-code-plugin\">Configuration-as-Code plugin</a></p>\n</li>\n<li>\n<p>Jenkins is able to execute Groovy scripts in <em>Script Console</em> and\n<a href=\"https://wiki.jenkins.io/display/JENKINS/Groovy+Hook+Script\">Groovy Hooks</a></p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"known-issues\"><a class=\"anchor\" href=\"#known-issues\"></a>Known issues</h3>\n<div class=\"paragraph\">\n<p>So far we know about the following issues:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Pipeline crashes immediately on Java 10 and 11 (<a href=\"https://issues.jenkins.io/browse/JENKINS-46602\">JENKINS-46602</a>)</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Workaround: <em>Pipeline: Support</em> plugin should be updated to version 3.0-java11-alpha-1-rc684.d802f5d9aeed from the Incrementals repo\n(<a href=\"https://repo.jenkins-ci.org/incrementals/org/jenkins-ci/plugins/workflow/workflow-support/2.19-rc295.e017dc58c0a3/\">download</a>)</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><strong>FIXED</strong> - Git Client plugin 2.7.2 cannot be installed when running with Java 11 build 18ea</p>\n</li>\n<li>\n<p>There are many warnings about Illegal reflective access during execution\n(linked in <a href=\"https://issues.jenkins.io/browse/JENKINS-40689\">JENKINS-40689</a>).</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>In current Java 10 and 11 releases it does not lead to failures,\nbut we want to cleanup these warnings anyway</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><strong>FIXED</strong> - <a href=\"https://github.com/jenkinsci/configuration-as-code-plugin\">Configuration-as-Code plugin</a> fails to export configurations on Java 10\n(<a href=\"https://issues.jenkins.io/browse/JENKINS-51991\">JENKINS-51991</a>)</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>We anticipate to discover and report more issues during the hackathon this week.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"contributing\"><a class=\"anchor\" href=\"#contributing\"></a>Contributing</h3>\n<div class=\"paragraph\">\n<p>If you discover incompatibilities in plugins, please\n<a href=\"https://wiki.jenkins.io/display/JENKINS/How+to+report+an+issue\">report issues in our bugtracker</a>.\nWe have <code>java10</code> and <code>java11</code> labels for such issues.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you are interested to try out Jenkins with Java 10 and 11 before June 22nd,\nyou may be interested to sign-up to the <a href=\"/blog/2018/06/08/jenkins-java10-hackathon/\">Jenkins and Java 10+ online hackathon</a>.\nEverybody is welcome to join, independently of their Jenkins experience and amount of time they have available.\nExploratory testing is also within the hackathon&#8217;s scope.\nDuring this event, please also use the <code>java10_hackathon</code> label.\nIt will help us to track contributions and send folks some small \"thank you\" gifts for participating (details will be figured out during the hackathon).</p>\n</div>\n<div class=\"paragraph\">\n<p>If you want to contribute patches to the core,\nplease submit pull requests to <a href=\"https://github.com/jenkinsci/jenkins/tree/java10-support\">java10-support</a> or\n<a href=\"https://github.com/jenkinsci/jenkins/tree/java11-support\">java11-support</a> branches.\nIf the patches are compatible with Java 8, we will try to upstream them to weekly releases.\nFor plugin patches please create pull requests against main branches and then follow guidelines from plugin maintainers.\nIf you need additional reviews and you are a member of the <code>jenkinsci</code> organization,\nfeel free to mention the <code>@jenkinsci/java10-support</code> team in your PRs.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"links\"><a class=\"anchor\" href=\"#links\"></a>Links:</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://hub.docker.com/r/jenkins/jenkins-experimental/tags/\">Docker: jenkins/jenkins-experimental images</a></p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-40689\">JIRA: Java 10 compatibility</a></p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-51805\">JIRA: Java 11 compatibility</a></p>\n</li>\n<li>\n<p><a href=\"/blog/2018/06/08/jenkins-java10-hackathon/\">Jenkins and Java 10+ online hackathon</a></p>\n</li>\n</ul>\n</div>\n</div>","id":"2a47e8d0-b919-50d2-9fe2-b9937f8d85bc","title":"Running Jenkins with Java 10 and 11 (experimental support)","date":"2018-06-17T00:00:00.000Z","slug":"/blog/2018/06/17/running-jenkins-with-java10-11/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":null},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"blog/author/oleg_nenashev","twitter":"oleg_nenashev"}]}},"pageContext":{"next":"/blog/2018/06/18/remoting-over-message-bus/","previous":"/blog/2018/06/15/simple-pull-request-plugin/","id":"2a47e8d0-b919-50d2-9fe2-b9937f8d85bc"}},
    "staticQueryHashes": ["1271460761","3649515864"]}