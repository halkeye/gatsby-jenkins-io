{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2018/07/02/new-api-token-system/",
    "result": {"data":{"blog":{"html":"<div class=\"sect1\">\n<h2 id=\"about-api-tokens\"><a class=\"anchor\" href=\"#about-api-tokens\"></a>About API tokens</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Jenkins API tokens are an authentication mechanism that allows a tool (script, application, etc.) to impersonate a user\nwithout providing the actual password for use with the Jenkins API or CLI.\nThis is especially useful when your security realm is based on a central directory, like Active Directory or LDAP,\nand you don&#8217;t want to store your password in scripts.\nRecent versions of Jenkins also make it easier to use the remote API when using API tokens to authenticate,\nas no CSRF tokens need to be provided even with CSRF protection enabled.\nAPI tokens are not meant to&#8201;&#8212;&#8201;and cannot&#8201;&#8212;&#8201;replace the regular password for the Jenkins UI.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"previous-problems\"><a class=\"anchor\" href=\"#previous-problems\"></a>Previous problems</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>We addressed two major problems with the existing API token system in Jenkins 2.129:</p>\n</div>\n<div class=\"paragraph\">\n<p>First, reported in <a href=\"https://issues.jenkins.io/browse/JENKINS-32442\">JENKINS-32442</a>,\nuser accounts in Jenkins have an automatically generated API token by default.\nAs these tokens can be used to authenticate as a given user, they increase the attack surface of Jenkins.</p>\n</div>\n<div class=\"paragraph\">\n<p>The second problem was reported in <a href=\"https://issues.jenkins.io/browse/JENKINS-32776\">JENKINS-32776</a>:\nThe tokens were previously stored on disk in an encrypted form.\nThis meant that they could be decrypted by unauthorized users by leveraging another security vulnerability,\nor obtained, for example, from improperly secured backups, and used to impersonate other users.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"new-approach\"><a class=\"anchor\" href=\"#new-approach\"></a>New approach</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The main objective of this new system is to provide API tokens that are stored in a unidirectional way on the disk,\ni.e. using a hashing algorithm (in this particular case SHA-256).</p>\n</div>\n<div class=\"paragraph\">\n<p>While this means that you will not be able to see the actual API tokens anymore after you&#8217;ve created them,\nseveral features were added to mitigate this potential problem:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>You can have multiple active API tokens at the same time.\nIf you don&#8217;t remember an API token&#8217;s value anymore, just revoke it.</p>\n</li>\n<li>\n<p>You can name your tokens to know where they are used (and rename them after creation if desired).\nWe recommend that tokens use a name that indicates where (for example the application, script, or host) where it will be used.</p>\n</li>\n<li>\n<p>You can track the usage of your tokens.\nEvery token keeps a record of the number of uses and the date of the last use.\nThis will allow you to better know which tokens are really used and which are no longer actively required.\nJenkins also encourages users to rotate old API tokens by highlighting their creation date in orange after six months, and in red after twelve months.\nThe goal is to remind the user that tokens are more secure when you regenerate them often:\nThe longer a token is around, perhaps passed around in script files and stored on shared drives,\nthe greater the chance it&#8217;s going to be accessed by someone not authorized to use it.</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock text-center\">\n<div class=\"content\">\n<a class=\"image\" href=\"/images/post-images/2018-07-02-new-api-token-system/token_usage.png\"><img src=\"/images/post-images/2018-07-02-new-api-token-system/token_usage.png\" alt=\"token usage\" width=\"800\"></a>\n</div>\n<div class=\"title\">Figure 1. Token usage tracking</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>You can revoke API tokens.\nWhen you know that you are not using a given token anymore, you can revoke it to reduce the risk of it getting used by unauthorized users.\nSince you can have multiple API tokens, this allows fine-grained control over which scripts, hosts, or applications are allowed to use Jenkins as a given user.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"migrating-to-new-api-tokens\"><a class=\"anchor\" href=\"#migrating-to-new-api-tokens\"></a>Migrating to new API tokens</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>To help administrators migrate their instances progressively, the legacy behavior is still available, while new system is also usable.</p>\n</div>\n<div class=\"paragraph\">\n<p>On the user configuration page, the legacy token is highlighted with a warning sign,\nexplaining that users should revoke it and generate a new one (if needed) to increase security.</p>\n</div>\n<div class=\"imageblock text-center\">\n<div class=\"content\">\n<a class=\"image\" href=\"/images/post-images/2018-07-02-new-api-token-system/legacy_renewal.gif\"><img src=\"/images/post-images/2018-07-02-new-api-token-system/legacy_renewal.gif\" alt=\"legacy renewal\" width=\"800\"></a>\n</div>\n<div class=\"title\">Figure 2. Legacy token renewal still possible</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"new-options-for-administrators\"><a class=\"anchor\" href=\"#new-options-for-administrators\"></a>New options for administrators</h3>\n<div class=\"paragraph\">\n<p>In order to let administrators control the pace of migration to the new API token system,\nwe added two global configuration options in the \"Configure Global Security\" page in the brand new \"API Token\" section:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>An option to disable the creation of legacy API tokens on user creation.</p>\n</li>\n<li>\n<p>An option to disable the recreation of legacy API tokens by users, forcing them to only use the new, unrecoverable API tokens.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Both options are disabled by default for new installations (the safe default), while they&#8217;re enabled when Jenkins is upgraded from before 2.129.</p>\n</div>\n<div class=\"imageblock text-center\">\n<div class=\"content\">\n<a class=\"image\" href=\"/images/post-images/2018-07-02-new-api-token-system/security_configuration_options.png\"><img src=\"/images/post-images/2018-07-02-new-api-token-system/security_configuration_options.png\" alt=\"security configuration options\"></a>\n</div>\n<div class=\"title\">Figure 3. Security Configuration options</div>\n</div>\n<div class=\"imageblock text-center\">\n<div class=\"content\">\n<a class=\"image\" href=\"/images/post-images/2018-07-02-new-api-token-system/legacy_removal.gif\"><img src=\"/images/post-images/2018-07-02-new-api-token-system/legacy_removal.gif\" alt=\"legacy removal\" width=\"800\"></a>\n</div>\n<div class=\"title\">Figure 4. Remove legacy token and disable the re-creation</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"new-administrator-warnings\"><a class=\"anchor\" href=\"#new-administrator-warnings\"></a>New administrator warnings</h3>\n<div class=\"paragraph\">\n<p>When upgrading to Jenkins 2.129, an administrative monitor informs admins about the new options described above, and recommend disabling them.</p>\n</div>\n<div class=\"paragraph\">\n<p>Another administrative warnings shows up if at least one user still has a legacy API token.\nIt provides central control over legacy tokens still configured in the Jenkins instance, and allows revoking them all.</p>\n</div>\n<div class=\"imageblock text-center\">\n<div class=\"content\">\n<a class=\"image\" href=\"/images/post-images/2018-07-02-new-api-token-system/monitor_screen.png\"><img src=\"/images/post-images/2018-07-02-new-api-token-system/monitor_screen.png\" alt=\"monitor screen\" width=\"800\"></a>\n</div>\n<div class=\"title\">Figure 5. Legacy token monitoring page</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"summary\"><a class=\"anchor\" href=\"#summary\"></a>Summary</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Jenkins API tokens are now much more flexible: They allow and even encourage better security practices.\nWe recommend you revoke legacy API tokens as soon as you can, and only use the newly introduced API tokens.</p>\n</div>\n</div>\n</div>","id":"0c991121-dfec-5b10-a945-33a402cf3ddd","title":"Security Hardening: New API token system in Jenkins 2.129+","date":"2018-07-02T00:00:00.000Z","slug":"/blog/2018/07/02/new-api-token-system/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"wadeck","html":"<div class=\"paragraph\">\n<p>Wadeck is a member of the <a href=\"/security/#team\">Jenkins security team</a>, working on fixes and improvements to Jenkins security.\nHe likes to provide solutions that are both useful and easy to use.</p>\n</div>","id":"wadeck","irc":null,"linkedin":null,"name":"Wadeck Follonier","slug":"/blog/author/wadeck","twitter":null}]}},"pageContext":{"next":"/blog/2018/07/02/whats-new-declarative-piepline-13x-sequential-stages/","previous":"/blog/2018/06/27/new-login-page/","id":"0c991121-dfec-5b10-a945-33a402cf3ddd"}},
    "staticQueryHashes": ["1271460761","3649515864"]}