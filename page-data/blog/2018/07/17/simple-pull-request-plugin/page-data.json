{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2018/07/17/simple-pull-request-plugin/",
    "result": {"data":{"blog":{"html":"<div class=\"sect2\">\n<h3 id=\"about-me\"><a class=\"anchor\" href=\"#about-me\"></a>About me</h3>\n<div class=\"paragraph\">\n<p>I am Abhishek Gautam, 3rd year student from Visvesvaraya National Institute of\ntechnology, India, Nagpur. I was a member of ACM Chapter and Google student developer club of my\ncollege. I am passionate about automation.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"project-summary\"><a class=\"anchor\" href=\"#project-summary\"></a>Project Summary</h3>\n<div class=\"paragraph\">\n<p>This is a GSoC 2018 project.</p>\n</div>\n<div class=\"paragraph\">\n<p>This project aims to develop a pull request Job Plugin. Users should be able to\nconfigure job type using YAML file placed in root directory of the\nGit repository being the subject of the pull request. The plugin should interact with various\nplatforms like Bitbucket, Github, Gitlab, etc whenever a pull request is created or updated.</p>\n</div>\n<div class=\"paragraph\">\n<p>Plugin detects the presence of certain types of reports at conventional locations,\nand publish them automatically. If the reports are not present at their respective conventional\nlocation, the location of the report can be configured in the YAML file.</p>\n</div>\n<div class=\"paragraph\">\n<p>My mentors are\n<a href=\"https://github.com/oleg-nenashev\">Oleg Nenashev</a> (Org Admin),\n<a href=\"https://github.com/martinda\">Martin d&#8217;Anjou</a>,\n<a href=\"https://github.com/kwhetstone\">Kristin Whetstone</a>,\n<a href=\"https://github.com/grandvizier\">Jeff Knurek</a></p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"benefits-to-the-community\"><a class=\"anchor\" href=\"#benefits-to-the-community\"></a>Benefits to the community</h4>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Project administrators will be able to handle pull request builds more easily.</p>\n</li>\n<li>\n<p>Build specifications for pull requests can be written in a concise declarative format.</p>\n</li>\n<li>\n<p>Build reports will be automatically published to Github, Bitbucket, etc.</p>\n</li>\n<li>\n<p>Build status updates will be sent to git servers automatically.</p>\n</li>\n<li>\n<p>Users will not have to deal with pipeline code.</p>\n</li>\n<li>\n<p>If there will be no merge conflicts or build failures, the PR can be merged into target branch.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"phase-1-blog-post\"><a class=\"anchor\" href=\"#phase-1-blog-post\"></a>Phase 1 blog post</h3>\n<div class=\"paragraph\">\n<p>Please see <a href=\"https://jenkins.io/blog/2018/06/15/simple-pull-request-plugin/\">Phase 1 blog post</a></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"implementations-till-now\"><a class=\"anchor\" href=\"#implementations-till-now\"></a>Implementations till now</h3>\n<div class=\"paragraph\">\n<p>Alpha version of the plugin is released. It supports all features of Multi-Branch Pipeline and offers the following features.</p>\n</div>\n<div class=\"paragraph\">\n<p>Build description is defined via YAML file stored within the SCM repo. This plugin\nwill depend on GitHub plugin, Bitbucket plugin, Gitlab plugin if users will be\nusing respective platforms for their repositories.</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Conversion of YAML to Declarative Pipeline: A class YamlToPipeline\nis written which will load the \"Jenkinsfile.yaml\" and make use of PipelineSnippetGenerator class\nto generate Declarative pipeline code.</p>\n</li>\n<li>\n<p>Reporting of results, only xml report types is supported for now.</p>\n</li>\n<li>\n<p>Use of Yaml file (Jenkinsfile.yaml) from target branch.</p>\n</li>\n<li>\n<p>Git Push step: To push the changes of pull request to the target branch. This is implemented\nusing git-plugin, PushCommand is used for this from git-plugin. credentialId,\nbranch name and repository url for interacting with Github, Bitbucket, etc\nwill be taken automatically from \"Branch-Source\" (Users have to fill this\ndetails of branch source in job configuration UI). (You can see\n<a href=\"https://github.com/Jenkinsci/simple-pull-request-job-plugin/blob/master/README.md\">How to run the demo</a>)</p>\n</li>\n<li>\n<p>StepConfigurator: To generate pipeline code for all supported steps in Jenkins. This is using\nJenkins configuration-as-code plugin (JCasC plugin) to configure a particular step object and\nthen that step object is passed to <code>Snippetizer.object2Groovy()</code> method to generate the script of that step.</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"jenkinsfile-yaml-example\"><a class=\"anchor\" href=\"#jenkinsfile-yaml-example\"></a>Jenkinsfile.yaml example</h3>\n<div class=\"paragraph\">\n<p>For the phase 1 prototype demonstration, the following yaml file was used.\nNote that this format is subject to change in the next phases of the project,\nas we formalise the yaml format definition.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-yaml\" data-lang=\"yaml\">#  Docker image agent example\nagent:\n label: my_label\n customWorkspace: path_to_workspace\n dockerImage: maven:3-alpine\n args: -v /tmp:/tmp\n\n  tools:\n    maven : maven_3.0.1\n    jdk : jdk8\n\nconfiguration:\n  # Push PR changes to the target branch if the build succeeds.\n  # default value is false\n  pushPrOnSuccess: false\n\n  # Trusted user to approve pull requests\n  prApprovers:\n    - username1\n    - username2\n    - username3\n\nenvironment:\n  variables:\n    variable_1: value_1\n    variable_2: value_2\n\n  # Credentials contains only two fields. credentialId must be present in the Jenkins Credentials\n  credentials:\n    - credentialId : fileCredentialId\n      variable : FILE\n\n      # In user scripts Username and Password can be accessed by LOGIN_USR and LOGIN_PSW\n      # respectively as environment variales\n    - credentialId : dummyGitRepo\n      variable : LOGIN\n\nstages:\n  - name: stage1\n    agent: any\n    steps:\n      - sh: \"scripts/hello\"\n      - sleep:\n          time: 2\n          unit: SECONDS\n      - sleep: 2\n      - junit:\n          testResults: \"target/**.xml\"\n          allowEmptyResults: true\n          testDataPublishers:\n            - AutomateTestDataPublisher\n            - JunitResultPublisher:\n                urlOverride: \"urlOverride\"\n    # Post section for \"stage1\". All Conditions which are available in Jenkins\n    # declarative pipeline are supported\n    post:\n      failure:\n        - sh: \"scripts/hello\"\n\n# Outer post section. Just like declarative pipeline.\npost:\n  always:\n    - sh: \"scripts/hello\"</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"coding-phase-2-plans-completed\"><a class=\"anchor\" href=\"#coding-phase-2-plans-completed\"></a>Coding Phase 2 plans (Completed)</h3>\n<div class=\"ulist checklist\">\n<ul class=\"checklist\">\n<li>\n<p><i class=\"fa fa-check-square-o\"></i> Decide a proper YAML format to use for Jenkinsfile.yaml</p>\n</li>\n<li>\n<p><i class=\"fa fa-check-square-o\"></i> Create Step Configurator for SPRP plugin. <a href=\"https://issues.jenkins.io/browse/JENKINS-51637\">JENKINS-51637</a>.\nThis will enable users to use Pipeline steps in Jenkinsfile.yaml.</p>\n</li>\n<li>\n<p><i class=\"fa fa-check-square-o\"></i> Automatic indentation generation in the generated PipelineSnippetGenerator class.</p>\n</li>\n<li>\n<p><i class=\"fa fa-check-square-o\"></i> Write tests for the plugin.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"coding-phase-3-plans\"><a class=\"anchor\" href=\"#coding-phase-3-plans\"></a>Coding Phase 3 plans</h3>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Test Multi-Branch Pipeline features support:</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>Support for webhooks (<a href=\"https://issues.jenkins.io/browse/JENKINS-51941\">JENKINS-51941</a>)</p>\n</li>\n<li>\n<p>Check if trusted people have approved a pull request and start build accordingly (<a href=\"https://issues.jenkins.io/browse/JENKINS-52517\">JENKINS-52517</a>)</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Finalize documentation (<a href=\"https://issues.jenkins.io/browse/JENKINS-52518\">JENKINS-52518</a>)</p>\n</li>\n<li>\n<p>Release 1.0 (<a href=\"https://issues.jenkins.io/browse/JENKINS-52519\">JENKINS-52519</a>)</p>\n</li>\n<li>\n<p>Plugin overview blog post</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"coding-phase-3-plans-after-release\"><a class=\"anchor\" href=\"#coding-phase-3-plans-after-release\"></a>Coding Phase 3 plans after release</h3>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Support the “when” Declarative Pipeline directive (<a href=\"https://issues.jenkins.io/browse/JENKINS-52520\">JENKINS-52520</a>)</p>\n</li>\n<li>\n<p>Nice2have: Support hierarchical report types (<a href=\"https://issues.jenkins.io/browse/JENKINS-52521\">JENKINS-52521</a>)</p>\n</li>\n<li>\n<p>Add unit tests, JenkinsRule tests, and ATH tests (<a href=\"https://issues.jenkins.io/browse/JENKINS-52495\">JENKINS-52495</a>, <a href=\"https://issues.jenkins.io/browse/JENKINS-52496\">JENKINS-52496</a>)</p>\n</li>\n<li>\n<p>Automatic Workspace Cleanup when PR is closed (<a href=\"https://issues.jenkins.io/browse/JENKINS-51897\">JENKINS-51897</a>)</p>\n</li>\n<li>\n<p>Refactor snippet generator to extensions (<a href=\"https://issues.jenkins.io/browse/JENKINS-52491\">JENKINS-52491</a>)</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-52452\">Phase 3 Jira Epic</a></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"phase-2-evaluation-presentation-video\"><a class=\"anchor\" href=\"#phase-2-evaluation-presentation-video\"></a>Phase 2 evaluation presentation video</h3>\n<div class=\"paragraph\">\n<p>Video:</p>\n</div>\n<center>\n  <iframe width=\"720\" height=\"400\" src=\"https://www.youtube.com/embed/tuTODhJOTBU?start=3229\"\n  frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n</center>\n</div>\n<div class=\"sect2\">\n<h3 id=\"phase-2-evaluation-presentation-slides\"><a class=\"anchor\" href=\"#phase-2-evaluation-presentation-slides\"></a>Phase 2 evaluation presentation slides</h3>\n<center>\n    <iframe width=\"720\" height=\"400\" frameborder=\"0\"\n      src=\"https://speakerdeck.com/player/e7073ad74ee941b0b604d403462da1d3\"></iframe>\n</center>\n</div>\n<div class=\"sect2\">\n<h3 id=\"how-to-reach-me\"><a class=\"anchor\" href=\"#how-to-reach-me\"></a>How to reach me</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Email: <a href=\"mailto:gautamabhishek46@gmail.com\">gautamabhishek46@gmail.com</a></p>\n</li>\n<li>\n<p>Gitter room: <a href=\"https://gitter.im/Jenkinsci/simple-pull-request-job-plugin\" class=\"bare\">https://gitter.im/Jenkinsci/simple-pull-request-job-plugin</a></p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"references\"><a class=\"anchor\" href=\"#references\"></a>References</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/jenkinsci/simple-pull-request-job-plugin\">Project repository</a></p>\n</li>\n<li>\n<p><a href=\"https://jenkins.io/projects/gsoc/2018/simple-pull-request-job-plugin/\">Project page</a></p>\n</li>\n<li>\n<p><a href=\"https://gitter.im/jenkinsci/simple-pull-request-job-plugin?utm_source=share-link&amp;utm_medium=link&amp;utm_campaign=share-link\">Gitter chat</a></p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/issues/?jql=project%20%3D%20Jenkins%20AND%20component%20%3D%20simple-pull-request-job-plugin\">Bug Tracker</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/gautamabhishek46/dummy\">Demo Repository</a></p>\n</li>\n<li>\n<p><a href=\"https://www.youtube.com/watch?v=tuTODhJOTBU&amp;t=3229s\">Phase 2 Presentation video</a>(July 12, 2018)</p>\n</li>\n<li>\n<p><a href=\"https://www.slideshare.net/AbhishekGautam185/yaml-as-pipeline-gsoc-218-phase-2-evaluation\">Phase 2 Presentation Slides</a>(July 12, 2018)</p>\n</li>\n</ul>\n</div>\n</div>","id":"2629d18c-2a10-59b8-8b11-b24bb8b2b87d","title":"Pipeline as YAML: Alpha release","date":"2018-07-17T00:00:00.000Z","slug":"/blog/2018/07/17/simple-pull-request-plugin/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/e91e42ab16b3d1ec82ed0c692425a50e/19e71/abhishek_gautam.jpg","srcSet":"/gatsby-jenkins-io/static/e91e42ab16b3d1ec82ed0c692425a50e/77b35/abhishek_gautam.jpg 32w,\n/gatsby-jenkins-io/static/e91e42ab16b3d1ec82ed0c692425a50e/d4a57/abhishek_gautam.jpg 64w,\n/gatsby-jenkins-io/static/e91e42ab16b3d1ec82ed0c692425a50e/19e71/abhishek_gautam.jpg 128w,\n/gatsby-jenkins-io/static/e91e42ab16b3d1ec82ed0c692425a50e/68974/abhishek_gautam.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/e91e42ab16b3d1ec82ed0c692425a50e/ef6ff/abhishek_gautam.webp 32w,\n/gatsby-jenkins-io/static/e91e42ab16b3d1ec82ed0c692425a50e/8257c/abhishek_gautam.webp 64w,\n/gatsby-jenkins-io/static/e91e42ab16b3d1ec82ed0c692425a50e/6766a/abhishek_gautam.webp 128w,\n/gatsby-jenkins-io/static/e91e42ab16b3d1ec82ed0c692425a50e/22bfc/abhishek_gautam.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"gautamabhishek46","html":"<div class=\"paragraph\">\n<p>Abhishek is a 3rd year Computer Science student from Visvesvaraya National\nInstitute of Technology, Nagpur, India. He has done some website projects for\nhis college technical festival. He is also a regular competitive programmer\n(abhishekg1128 at codechef). He has done two internships as a Game Programmer\nas well. He was a member of ACM Chapter and Google student developer club of his\ncollege. His interest in automation motivated his participation in the Jenkins\nGSOC 2018 program.</p>\n</div>","id":"abhishek_gautam","irc":"abhishekg","linkedin":null,"name":"Abhishek Gautam","slug":"/blog/author/abhishek_gautam","twitter":null}]}},"pageContext":{"next":"/blog/2018/07/18/security-updates/","previous":"/blog/2018/07/13/jenkins-user-conference-china.adoc/","id":"2629d18c-2a10-59b8-8b11-b24bb8b2b87d"}},
    "staticQueryHashes": ["1271460761","3649515864"]}