{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2018/07/19/jenkins-x-accelerate/",
    "result": {"data":{"blog":{"html":"<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/jenkins-x/accelerate/book.jpg\" alt=\"Accelerate\" width=\"300\">\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"jenkins-x-uses-capabilities-identified-by-the-accelerate-the-science-behind-devops\"><a class=\"anchor\" href=\"#jenkins-x-uses-capabilities-identified-by-the-accelerate-the-science-behind-devops\"></a>Jenkins X uses Capabilities identified by the \"Accelerate:  The Science Behind Devops\"</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://jenkins-x.io/\">Jenkins X</a> is a reimagined CI/CD implementation for the Cloud which is heavily influence by the\n<a href=\"https://puppet.com/resources/whitepaper/state-of-devops-report\">State of DevOps reports</a> and more recently the book\n\"Accelerate: The Science Behind Devops\" by\n<a href=\"https://twitter.com/nicolefv\">Nicole Forsgren</a>,\n<a href=\"https://twitter.com/jezhumble\">Jez Humble</a> and\n<a href=\"https://twitter.com/RealGeneKim\">Gene Kim</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Years of gathering data from real world teams and organisations which has been analyzed by inspiring thought leaders and data\nscientists from the DevOps world, \"Accelerate\" recommends a number of capabilities that Jenkins X is implementing so\nusers gain the scientifically proven benefits, out of the box. Weâ€™ve started documenting the capabilities that are available\ntoday and will continue as more become available.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/jenkins-x/accelerate/JenkinsX_capabilities.png\" alt=\"Jenkins X Capabilities\" width=\"400\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p><em>Credit: thanks to tracymiranda for the image</em></p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"use-version-control-for-all-artifacts\"><a class=\"anchor\" href=\"#use-version-control-for-all-artifacts\"></a>Use version control for all artifacts</h3>\n<div class=\"paragraph\">\n<p>The Weaveworks folks coined the term GitOps which we love.  Any change to an environment, whether it be a new application,\nversion upgrade, resource limit change or simple application configuration should be raised as a Pull Request to Git, have\nchecks run against it like a form of CI for environments and approved by a team that has control over what goes into the\nrelated environment.  We can now enable governance and have full traceability for any change to an environment.</p>\n</div>\n<div class=\"paragraph\">\n<p><em>Related Accelerate capability:  Use version control for all production artifacts</em></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"automate-your-deployment-process\"><a class=\"anchor\" href=\"#automate-your-deployment-process\"></a>Automate your deployment process</h3>\n<div class=\"sect3\">\n<h4 id=\"environments\"><a class=\"anchor\" href=\"#environments\"></a>Environments</h4>\n<div class=\"paragraph\">\n<p>Jenkins X will automatically create Git backed environments during installation and makes it easy to add new ones using\n<code>jx create environment</code>.  Additionally when creating new applications via a quickstart (<code>jx create quickstart</code>), Java based\nSpringBoot (<code>jx create spring</code>) or importing existing applications (<code>jx import</code>), Jenkins X will both automatically add\nCI / CD pipelines and setup the jobs, git repos and webhooks to enable an automated deployment process.</p>\n</div>\n<div class=\"paragraph\">\n<p>Out of the box Jenkins X creates Staging and Production (this is customisable) permanent environments as well as temporary\nenvironments for preview applications from Pull Requests.</p>\n</div>\n<div class=\"sect4\">\n<h5 id=\"previews-environments\"><a class=\"anchor\" href=\"#previews-environments\"></a>Previews Environments</h5>\n<div class=\"paragraph\">\n<p>We are trying to move as much testing, security, validation and experimentation for a change before it&#8217;s merged to master.\nWith the use of temporary dynamically created Preview Environments any pull request can have a preview version built and\ndeployed, including libraries that feed into a downstream deployable application.  This means we can code review, test,\ncollaborate better with all teams that are involved in agreeing that change can go live.</p>\n</div>\n<div class=\"paragraph\">\n<p>Ultimately Jenkins X wants to provide a way that developers, testers, designers and product managers can be as sure as they\ncan that when a change is merged to master it works as expected.  We want to be confident the proposed change does not\nnegatively affect any service or feature as well as deliver the value it is intended to.</p>\n</div>\n<div class=\"paragraph\">\n<p>Where Preview Environments get really interesting is when we are able to progress a PR through various stages of maturity and\nconfidence where we begin to direct a percentage of real production traffic like beta users to it.  We can then analyse the\nvalue of the proposed change and possible run multiple automated experiments over time using Hypothesis Driven Development.\nThis helps give us better understanding of how the change will perform when released to all users.</p>\n</div>\n<div class=\"paragraph\">\n<p><em>Related Accelerate capability: Foster and enable team experimentation</em></p>\n</div>\n<div class=\"paragraph\">\n<p>Using preview environments is a great way to introduce better test automation.  While Jenkins X enables this we don&#8217;t yet\nhave examples of automated tests being run against a preview environment.  A simple test would be to ensure the application\nstarts ok and Kubernetes liveness check pass for an amount of time. This relates to</p>\n</div>\n<div class=\"paragraph\">\n<p><em>Related Accelerate capability: Implement Test Automation</em>\n<em>Related Accelerate capability: Automate your deployment process</em></p>\n</div>\n</div>\n<div class=\"sect4\">\n<h5 id=\"permanent-environments\"><a class=\"anchor\" href=\"#permanent-environments\"></a>Permanent Environments</h5>\n<div class=\"paragraph\">\n<p>In software development we&#8217;re used to working with multiple environments in the lead up to a change being promoted to a live\nproduction environment.  Whilst this seems business as usual it can cause significant delays to other changes if for any\nreason that it is deemed not fit via some process that didn&#8217;t happen pre merge to master.  Subsequent commits then become\nblocked and can cause delay of urgent changes being promoted to production.</p>\n</div>\n<div class=\"paragraph\">\n<p>As above Jenkins X wants any changes and experiments to be validated before it is merged to master.  We would like changes in\na staging environment to be held there for a short amount of time before being promoted, ideally in an automated fashion.</p>\n</div>\n<div class=\"paragraph\">\n<p>The default Jenkins X pipelines provide deployment automation via environments.  These are customisable to suite your own\nCI / CD pipeline requirements.</p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins X recommends Staging should act as a near as possible reflection on production, ideally with real production data\nshadowed to it using a service mesh to understand the behaviour.  This also helps when developing changes in preview where we\ncan link to non production services in staging.</p>\n</div>\n<div class=\"paragraph\">\n<p><em>Related Accelerate capability: Automate your deployment process</em></p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"use-trunk-based-development\"><a class=\"anchor\" href=\"#use-trunk-based-development\"></a>Use trunk-based development</h3>\n<div class=\"paragraph\">\n<p>The Accelerate book found that teams which use trunk based development with short lived branches performed better.  This has\nalways worked for the Jenkins X core team members so this was an easy capability for Jenkins X to implement when setting up\nGit repositories and CI/CD jobs.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"implement-continuous-integration\"><a class=\"anchor\" href=\"#implement-continuous-integration\"></a>Implement Continuous Integration</h3>\n<div class=\"paragraph\">\n<p>Jenkins X sees CI as the effort of validating a proposed change via pull requests before it is merged to controller.  Jenkins X\nwill automatically configure source code repositories, Jenkins and Kubernetes to provide Continuous Integration of the box.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"implement-continuous-delivery\"><a class=\"anchor\" href=\"#implement-continuous-delivery\"></a>Implement Continuous Delivery</h3>\n<div class=\"paragraph\">\n<p>Jenkins X sees CD as the effort of taking that change after it&#8217;s been merged to controller through to running in a live\nenvironment.  Jenkins X automates many parts in a release pipeline:</p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins X advocates the use of semantic versioning.  We use git tags to calculate the next release version which means we\ndon&#8217;t need to store the latest release version in the controller branch.  Where release systems do store the last or next version\nin Git repos it means CD becomes hard, as a commit in a release pipeline back to controller triggers a new release.  This results\nin a recursive release trigger.  Using a Git tag helps avoid this situation which Jenkins X completely automates.</p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins X will automatically create a released version on <em>every</em> merge to master which can then potentially progress\nthrough to production.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"use-loosely-coupled-architecture\"><a class=\"anchor\" href=\"#use-loosely-coupled-architecture\"></a>Use loosely coupled architecture</h3>\n<div class=\"paragraph\">\n<p>By targeting Kubernetes users of Jenkins X can take advantage of many of the cloud features that help design and develop\nloosely coupled solutions.  Service discovery, fault tolerance, scalability, health checks, rolling upgrades, container\nscheduling and orchestration to name just a few examples of where Kubernetes helps.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"architect-for-empowered-teams\"><a class=\"anchor\" href=\"#architect-for-empowered-teams\"></a>Architect for empowered teams</h3>\n<div class=\"paragraph\">\n<p>Jenkins X aims to help polyglot application developers.  Right now Jenkins X has quickstarts and automated CI/CD setup with\nlanguage detection for Golang, Java, NodeJS, .Net, React, Angular, Rust, Swift and more to come.  What this also does is\nprovide a consistent Way of Working so developers can concentrate on developing.</p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins X also provides many addons, for example Grafana and Prometheus for automated metrics collection and visualisation.\nIn this example centralised metrics help understand how your applications behave when built and deployed on Kubernetes.</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://jenkins-x.io/developing/devpods\">DevPods</a> are another feature which enables developers to edit source code in their\nlocal IDE, behind the scenes it is then synced to the cloud and rapidly built and redeployed.</p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins X believes providing developers automation that helps them experiment in the cloud, with different technologies and\nfeedback empowers them to make the best decisions - faster.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"fancy-a-closer-look\"><a class=\"anchor\" href=\"#fancy-a-closer-look\"></a>Fancy a closer look?</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://twitter.com/jdrawlings\">Myself</a>, <a href=\"https://twitter.com/jstrachan/\">James Strachan</a> and\n<a href=\"https://twitter.com/rajdavies\">Rob Davies</a> are going to be presenting and running workshops at\n<a href=\"https://www.cloudbees.com/devops-world\">DevOps World  | Jenkins World</a>.  We&#8217;ll also be hanging out at the Jenkins X demo\narea so come and say hello and see what&#8217;s the latest cool and exiting things to come out of Jenkins X.  Use <strong>JWFOSS</strong> for 30%\ndiscount off registration</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"want-to-get-involved\"><a class=\"anchor\" href=\"#want-to-get-involved\"></a>Want to get involved?</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Jenkins X is open source, the community mainly hangs out in the\n<a href=\"https://jenkins-x.io/community/\">Jenkins X Kubernetes slack channels</a> and for tips on being more involved with Jenkins X\ntake a look at our <a href=\"https://jenkins-x.io/contribute\">contributing docs</a>.  We&#8217;ve been helping lots of folks get into open source, learn\nnew technoligies and languages like golang.  Why not get involved?</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"demo\"><a class=\"anchor\" href=\"#demo\"></a>Demo</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>If youâ€™ve not already seen it hereâ€™s a video showing a spring boot quickstart with automatic CI/CD pipelines and preview environments.</p>\n</div>\n<div class=\"videoblock\">\n<div class=\"content\">\n<iframe src=\"https://www.youtube.com/embed/kPes3rvT1UM?rel=0\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n</div>\n</div>\n</div>","id":"e791a263-9144-5400-9cc7-12e369131b87","title":"Accelerate with Jenkins X","date":"2018-07-19T00:00:00.000Z","slug":"/blog/2018/07/19/jenkins-x-accelerate/","authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#c8e8f8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/19e71/jrawlings.jpg","srcSet":"/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/77b35/jrawlings.jpg 32w,\n/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/d4a57/jrawlings.jpg 64w,\n/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/19e71/jrawlings.jpg 128w,\n/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/68974/jrawlings.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/ef6ff/jrawlings.webp 32w,\n/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/8257c/jrawlings.webp 64w,\n/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/6766a/jrawlings.webp 128w,\n/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/22bfc/jrawlings.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/8f3e9e2f521cb211e3ccac77dc47d04f/jrawlings.jpeg"},"blog":null,"github":"rawlingsj","html":"<div class=\"paragraph\">\n<p>James has a passion for continuous delivery and software automation in general.  Continually looking at\nways to help improve developers experience for the cloud.  James works on the OSS project <a href=\"https://jenkins-x.io/\">Jenkins X</a></p>\n</div>","id":"jrawlings","irc":null,"linkedin":null,"name":"James Rawlings","slug":"/blog/authors/jrawlings/","twitter":"jdrawlings"}]}},"pageContext":{"id":"e791a263-9144-5400-9cc7-12e369131b87"}},
    "staticQueryHashes": ["1271460761","3649515864"]}