{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2018/03/19/password-audit/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>Last year, <a href=\"https://thenewstack.io/npm-password-resets-show-developers-need-better-security-practices/\">news of compromised passwords being used for accounts able to distribute NPM packages</a> made the rounds.</p>\n</div>\n<div class=\"paragraph\">\n<p>Their system looks similar to how publishing of plugins works in the Jenkins project:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Accounts are protected by passwords chosen by users.</p>\n</li>\n<li>\n<p>Individual contributors have permission to release the components they maintain.</p>\n</li>\n<li>\n<p>The components they release are used by millions of developers around the world to deliver their software.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>In other words, weak passwords are a problem for us just as much as for NPM, and what happened to them could happen to us.</p>\n</div>\n<div class=\"paragraph\">\n<p>To address this problem, the Jenkins security and infra teams have recently collaborated on a password audit.\nThe audit covered all accounts with permissions to upload plugins and components, and on accounts with other levels of privileged infrastructure access.\nWe ran brute force tools on salted password hashes of those accounts looking for \"weak\" passwords&#8201;&#8212;&#8201;passwords present in a set of publicly available password lists we chose for this audit.</p>\n</div>\n<div class=\"paragraph\">\n<p>We checked the password of every qualifying account for every unsafe password rather than trying to match them to any previous password leaks' email/password pairs.\nUsers with weak account passwords were notified via email a few weeks ago and were asked to change their password to something stronger.</p>\n</div>\n<div class=\"paragraph\">\n<p>We performed the same checks over the previous weekend, but this time we only checked the passwords of accounts whose passwords were deemed weak during our first check.\nWe then invalidated the password of any account whose password was still not considered \"strong\" (i.e. their password was unchanged or had been changed to another weak password).\nUsers of those accounts will need to request a password reset before signing in again.</p>\n</div>\n<div class=\"paragraph\">\n<p>We plan to implement further safeguards, including improving the account management app at <a href=\"https://accounts.jenkins.io\" class=\"bare\">https://accounts.jenkins.io</a> to reject weak passwords.\nIf you&#8217;re interested in helping the security team make Jenkins more secure, let us know on the <a href=\"/mailing-lists\">jenkinsci-dev mailing list</a>, or <a href=\"/security/#team\">request to join the security team</a>.</p>\n</div>","id":"38e42feb-38b4-5fe4-a4e2-04f6086cd0bc","title":"Jenkins community account password audit","date":"2018-03-19T00:00:00.000Z","slug":"/blog/2018/03/19/password-audit/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"daniel-beck","html":"<div class=\"paragraph\">\n<p>Daniel is a Jenkins core maintainer and, as security officer, leads the <a href=\"/security/#team\">Jenkins security team</a>.\nHe sometimes contributes to developer documentation and project infrastructure.</p>\n</div>","id":"daniel-beck","irc":null,"linkedin":null,"name":"Daniel Beck","slug":"/blog/authors/daniel-beck/","twitter":null}]}},"pageContext":{"id":"38e42feb-38b4-5fe4-a4e2-04f6086cd0bc"}},
    "staticQueryHashes": ["1271460761","3649515864"]}