{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2018/04/27/essentials-versions-are-numbered/",
    "result": {"data":{"blog":{"html":"<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\"></i>\n</td>\n<td class=\"content\">\n<em>Jenkins Essentials</em> has been renamed to <em>Jenkins <strong>Evergreen</strong></em> since this was written.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>A couple weeks ago, I\n<a href=\"/blog/2018/04/06/jenkins-essentials/\">wrote about the Jenkins Essentials</a>\neffort, on which we&#8217;ve been making steady progress. Personally, the most\nexciting challenge of this project is defining the machinery to drive\n<a href=\"/blog/2018/04/06/jenkins-essentials/#auto-update\">automatic updates</a>\nof Jenkins Essentials, which viewed from a high level, are <em>classic</em> continuous\ndelivery challenges.</p>\n</div>\n<div class=\"paragraph\">\n<p>In this post, I wanted to dive into a bit of the gritty details of how we&#8217;re\ngoing to be delivering Jenkins Essentials with automatic updates, which has\nsome really interesting requirements for the development of Jenkins itself.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image right\"><img src=\"/images/logos/magician/256.png\" alt=\"Jenkins Essentials\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>The traditional Jenkins core and plugin development workflow involves a\ndeveloper working on changes for some amount of time, then when they&#8217;re ready,\nthey \"create a release\" which typically involves publishing artifacts to our\nArtifactory, and then on a timer (typically every 15 minutes) the Update Center will\nre-generate a file called <code>update-center.json</code>. Once the new Update Center has\nbeen generated, it is published and consumed by Jenkins installations within\n24 hours. Of course, only after Jenkins administrators recognize that there is\nan update available, can they install it. All in all, it can take quite a long\ntime from when a developer publishes a release, to when it is successfully used\nby an end-user.</p>\n</div>\n<div class=\"paragraph\">\n<p>With our desire to make Jenkins Essentials updates seamless and automatic, the\nstatus quo clearly was not going to work. Our shift in thinking has required a\ncouple simultaneous efforts to make this more continuously delivered approach\nviable.</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"developer-improvements\"><a class=\"anchor\" href=\"#developer-improvements\"></a>Developer Improvements</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Starting from the developer&#8217;s workflow,\n<a href=\"https://github.com/jglick\">Jesse Glick</a>\nhas been working on publishing \"incremental builds\" of artifacts into a\n<a href=\"https://github.com/jenkins-infra/iep/tree/master/iep-009\">special Maven repository</a>\nin Artifactory. Much of his work is described in the very thorough\n<a href=\"https://github.com/jenkinsci/jep/tree/master/jep/305\">Jenkins Enhancement Proposal 305</a>.\nThis support, which is <em>now live</em> on\n<a href=\"https://ci.jenkins.io/blue/\">ci.jenkins.io</a>\nallows plugin developers to publish versioned changes from <em>pull requests</em> and\n<em>branches</em> to the <code>incrementals</code> repository. Not only does this make it much\neasier for Jenkins Essentials to deliver changes closer to the <code>HEAD</code> of\n<code>master</code> branches, it also unlocks lots of flexibility for Jenkins developers\nwho coordinate changes across matrices of plugins and core, as occasionally is\nnecessary for Jenkins Pipeline, Credentials, Blue Ocean, and a number of other\nfoundational components of a modern Jenkins install.</p>\n</div>\n<div class=\"paragraph\">\n<p>In a follow-up blog post, Jesse is going to go into much more detail on some of\nthe access control and tooling changes he had to solve to make this\nincrementals machinery work.</p>\n</div>\n<div class=\"paragraph\">\n<p>Of course, incremental builds are only a piece of the puzzle, with those\nartifacts, Jenkins Essentials has to be able to do something useful with them!</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"update-improvements\"><a class=\"anchor\" href=\"#update-improvements\"></a>Update Improvements</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The number one requirement, from my perspective, for the automatically updated\ndistribution is that it is <strong>safe</strong>. \"Safe\" means that a user doesn&#8217;t need to\nbe involved in the update process, and if something goes wrong, the\ninstance recovers without the user needing to do anything to remediate a\n\"bad code deploy.\"</p>\n</div>\n<div class=\"paragraph\">\n<p>In my previous post on the subject, I mentioned Baptiste&#8217;s work on\n<a href=\"https://github.com/jenkinsci/jep/tree/master/jep/302\">Jenkins Enhancement\nProposal 302</a> which describes the \"data safety\" system for safely applying\nupdates, and in case of failure, rolling back.</p>\n</div>\n<div class=\"paragraph\">\n<p>The next obvious question is \"what&#8217;s failure?\" which Baptiste spent some time\nexploring and implementing in two more designs:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p><a href=\"https://github.com/jenkinsci/jep/tree/master/jep/304\">JEP-304: Essentials Client Error Telemetry Logging</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/jep/tree/master/jep/306\">JEP-306: Essentials Instance Client Health Checking</a></p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>On the server side, of which there is substantial work for Jenkins Essentials,\nthese concepts integrate with the concept of an\n<a href=\"https://github.com/jenkinsci/jep/blob/master/jep/307\">Update Lifecycle</a>\nbetween the server and client. In essence, the server side must be able to\ndeliver the right updates to the right clients, and avoid delivering tainted\nupdates (those with known problems) to clients. While this part of the work is\nstill on-going, tremendous progress has been made over the past couple weeks\nin ensuring that updates can be safely, securely, and automatically delivered.</p>\n</div>\n<div class=\"paragraph\">\n<p>With the ability to identify \"bad code deploys\", and having a mechanism for\nsafely rolling back, not only does Jenkins Essentials allow seamless\nupdates, but it enables Jenkins developers to deliver features and bugfixes\n<em>much</em> more quickly than our current distribution model allows.</p>\n</div>\n<hr>\n<div class=\"paragraph\">\n<p>While Jenkins Essentials does not have a package ready for broad consumption\nyet, we&#8217;re rapidly closing in on the completion of our first milestone which\nties all of these automatic update components together and builds the\nfoundation for continuous delivery of all subsequent improvements.</p>\n</div>\n<div class=\"paragraph\">\n<p>You can follow our progress in the\n<a href=\"https://github.com/jenkins-infra/evergreen\">jenkins-infra/evergreen</a>\nrepository, or join us in our\n<a href=\"https://gitter.im/jenkins-infra/evergreen\">Gitter chat</a>!</p>\n</div>\n</div>\n</div>","id":"3e9f5209-666c-54d9-9dcf-8fcbc3620a51","title":"Jenkins Essentials: The days of versions are numbered","date":"2018-04-27T00:00:00.000Z","slug":"/blog/2018/04/27/essentials-versions-are-numbered/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"}]}},"pageContext":{"next":"/blog/2018/04/30/using-the-beta-annotation/","previous":"/blog/2018/04/25/configuring-jenkins-pipeline-with-yaml-file/","id":"3e9f5209-666c-54d9-9dcf-8fcbc3620a51"}},
    "staticQueryHashes": ["1271460761","3649515864"]}