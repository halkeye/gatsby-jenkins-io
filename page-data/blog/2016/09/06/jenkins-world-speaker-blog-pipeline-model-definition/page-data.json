{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2016/09/06/jenkins-world-speaker-blog-pipeline-model-definition/",
    "result": {"data":{"blog":{"html":"<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nThis is a guest post by Jenkins World speaker Andrew Bayer, Jenkins\ndeveloper at <a href=\"https://www.cloudbees.com/\">CloudBees</a>.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image right\"><img src=\"/images/conferences/Jenkins-World_125x125.png\" alt=\"Jenkins World\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Over the last couple years, Pipeline as code has very much become the future of\nJenkins - in fact, at this point, I&#8217;d say it&#8217;s pretty well established as the\n<strong>present</strong> of Jenkins. But that doesn&#8217;t mean it&#8217;s done, let alone that it&#8217;s\nperfect. While many developers enjoy the power and control that they get from\nwriting Pipelines using scripting, not everyone feels the same way. A lot of\ndevelopers want to specify their build as configuration and get on with building\nsoftware.</p>\n</div>\n<div class=\"paragraph\">\n<p>Pipeline scripts haven&#8217;t been a good way to do that&#8230;&#8203;until now.</p>\n</div>\n<div class=\"paragraph\">\n<p>With new changes to Jenkins Pipeline, you are now able to define your Pipeline\nfrom configuration in your <code>Jenkinsfile</code> by installing the new\n<a href=\"https://wiki.jenkins.io/display/JENKINS/Pipeline+Model+Definition+Plugin\">Pipeline Model Definition</a>\nplugin. It&#8217;s available today for you to try via the update center.\nBe sure to check the <a href=\"https://github.com/jenkinsci/pipeline-model-definition-plugin/wiki\">documentation</a> for examples on how to get started for a\nvariety of languages and platforms.</p>\n</div>\n<div class=\"paragraph\">\n<p>Here&#8217;s a quick example based on <a href=\"https://github.com/jenkinsci/pipeline-model-definition-plugin/blob/master/Jenkinsfile\">the plugin&#8217;s own Jenkinsfile</a>:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">pipeline {\n    // Make sure that the tools we need are installed and on the path.\n    tools {\n        maven \"Maven 3.3.9\"\n        jdk \"Oracle JDK 8u40\"\n    }\n\n    // Run on any executor.\n    agent label:\"\"\n\n    // The order that sections are specified doesn't matter - this will still be run\n    // after the stages, even though it's specified before the stages.\n    postBuild {\n        // No matter what the build status is, run these steps. There are other conditions\n        // available as well, such as \"success\", \"failed\", \"unstable\", and \"changed\".\n        always {\n            archive \"target/**/*\"\n            junit 'target/surefire-reports/*.xml'\n        }\n    }\n\n    stages {\n        // While there's only one stage here, you can specify as many stages as you like!\n        stage(\"build\") {\n            sh 'mvn clean install -Dmaven.test.failure.ignore=true'\n        }\n    }\n\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>It&#8217;s still early days for this feature, with a lot of further functionality\nplanned to make it easier and more intuitive to define your Pipelines. All of\nthat functionality lives on top of Pipeline scripting, so we&#8217;ll also keep\nimproving Pipeline steps and syntax outside of the model! And perhaps most\nexciting, the Pipeline model will be used by an in-the-works visual editor\nthat will be part of the Blue Ocean project - while the editor isn&#8217;t ready yet,\nthe Pipeline Model Definition plugin will be bundled with the Blue Ocean beta\nfor you to try out.</p>\n</div>\n<div class=\"paragraph\">\n<p>I&#8217;ll be going into all of this and more at my talk on Thursday, September 15th, at\n3:45pm at Jenkins World, and showing off the same day at the lunchtime demo\ntheater. I can&#8217;t wait to see you all there and hear what you think of all this!</p>\n</div>\n<div class=\"admonitionblock caution\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-caution\" title=\"Caution\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>Andrew will be\n<a href=\"https://www.cloudbees.com/introducing-new-way-define-jenkins-pipelines\">presenting</a>\nmore of this concept at\n<a href=\"https://www.cloudbees.com/jenkinsworld/home\">Jenkins World</a> in September.\nRegister with the code <code>JWFOSS</code> for 20% off your full conference pass.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>","id":"8ad9f6bc-3bc6-5882-82e5-d2a281d96faa","title":"Introducing a New Way to Define Jenkins Pipelines","date":"2016-09-06T00:00:00.000Z","slug":"/blog/2016/09/06/jenkins-world-speaker-blog-pipeline-model-definition/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"abayer","html":"<div class=\"paragraph\">\n<p>Andrew was a core committer to Hudson and the author of numerous plugins.</p>\n</div>","id":"abayer","irc":null,"linkedin":null,"name":"Andrew Bayer","slug":"blog/author/abayer","twitter":"abayer"}]}},"pageContext":{"next":"/blog/2016/09/07/pipeline-at-jenkins-world/","previous":"/blog/2016/09/01/jenkins-world-contributor-summit/","id":"8ad9f6bc-3bc6-5882-82e5-d2a281d96faa"}},
    "staticQueryHashes": ["1271460761","3649515864"]}