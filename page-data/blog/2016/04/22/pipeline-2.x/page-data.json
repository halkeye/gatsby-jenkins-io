{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2016/04/22/pipeline-2.x/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>Those of you who routinely apply all plugin updates may already have noticed that the version numbers of the plugins in the Pipeline suite have switched to a 2.x scheme. Besides aligning better with the upcoming Jenkins 2.0 core release, the plugins are now being released with independent lifecycles.</p>\n</div>\n<div class=\"paragraph\">\n<p>“Pipeline 1.15” (the last in the 1.x line) included simultaneous releases of a dozen or so plugins with the 1.15 version number (and 1.15+ dependencies on each other). All these plugins were built out of a single <code>workflow-plugin</code> repository. While that was convenient in the early days for prototyping wide-ranging changes, it has become an encumbrance now that the Pipeline code is fairly mature, and more people are experimenting with additions and patches.</p>\n</div>\n<div class=\"paragraph\">\n<p>As of 2.0, all the plugins in the system live in their own repositories on GitHub—named to match the plugin code name, which in most cases uses the historical <em>workflow</em> term, so for example <code>workflow-job-plugin</code>. Some complex steps were moved into their own plugins, such as <code>pipeline-build-step-plugin</code>. The 1.x changelog is closed; now each plugin keeps a changelog in its own wiki, for example <a href=\"https://wiki.jenkins.io/display/JENKINS/Pipeline+Job+Plugin\">here</a> for the Pipeline Job plugin.</p>\n</div>\n<div class=\"paragraph\">\n<p>Among other benefits, this change makes it easier to cut new plugin releases for even minor bug fixes or enhancements, or for developers to experiment with patches to certain plugins. It also opens the door for the “aggregator” plugin (called simply <em>Pipeline</em>) to pull in dependencies on other plugins that seem broadly valuable, like the stage view.</p>\n</div>\n<div class=\"paragraph\">\n<p>The original repository has been renamed <code>pipeline-plugin</code> and for now <a href=\"https://github.com/jenkinsci/pipeline-plugin/\">still holds some documentation</a>, which might later be moved to jenkins.io.</p>\n</div>\n<div class=\"paragraph\">\n<p>You need not do anything special to “move” to the 2.x line; 1.642.x and later users can just accept all Pipeline-related plugin updates. Note that if you update <em>Pipeline Supporting APIs</em> you <strong>must</strong> update <em>Pipeline</em>, or at least install/update some related plugins <a href=\"https://wiki.jenkins.io/display/JENKINS/Pipeline+Supporting+APIs+Plugin\">as noted in the wiki</a>.</p>\n</div>","id":"4e17de3e-4be0-59e9-b38e-1f1bbf9188e4","title":"Pipeline 2.x plugins","date":"2016-04-22T00:00:00.000Z","slug":"/blog/2016/04/22/pipeline-2.x/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"jglick","html":"<div class=\"paragraph\">\n<p>Jesse has been developing Jenkins core and plugins for years.\nHe is the coauthor with Kohsuke of the core infrastructure of the Pipeline system.</p>\n</div>","id":"jglick","irc":null,"linkedin":null,"name":"Jesse Glick","slug":"/blog/authors/jglick","twitter":"tyvole"}]}},"pageContext":{"next":"/blog/2016/04/26/jenkins-20-is-here/","previous":"/blog/2016/04/22/possible-infra-compromise/","id":"4e17de3e-4be0-59e9-b38e-1f1bbf9188e4"}},
    "staticQueryHashes": ["1271460761","3649515864"]}