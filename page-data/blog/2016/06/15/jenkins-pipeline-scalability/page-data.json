{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2016/06/15/jenkins-pipeline-scalability/",
    "result": {"data":{"blog":{"html":"<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nThis is a guest post by <a href=\"https://github.com/dcoraboeuf\">Damien\nCoraboeuf</a>, Jenkins project contributor and <a href=\"https://nemerosa.com/\">Continuous Delivery consultant</a>.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Implementing a CI/CD solution based on Jenkins has become very easy. Dealing\nwith hundreds of jobs? Not so much. Having to scale to thousands of jobs?\nNow this is a real challenge.</p>\n</div>\n<div class=\"paragraph\">\n<p>This is the story of a journey to get out of the jungle of jobs&#8230;&#8203;</p>\n</div>\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/jenkins-pipeline-scalability/journey.png\" alt=\"Journey out of the jungle of jobs\">\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"start-of-the-journey\"><a class=\"anchor\" href=\"#start-of-the-journey\"></a>Start of the journey</h4>\n<div class=\"paragraph\">\n<p>At the beginning of the journey there were several projects using roughly the same\ntechnologies. Those projects had several\nbranches, for maintenance of releases, for new features.</p>\n</div>\n<div class=\"paragraph\">\n<p>In turn, each of those branches had to be carefully built, deployed on different\nplatforms and versions, promoted so they could be tested for functionalities,\nperformances and security, and then promoted again for actual delivery.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, we had to offer the test teams the means to deploy any version of\ntheir choice on any supported platform in order to carry out some manual tests.</p>\n</div>\n<div class=\"paragraph\">\n<p>This represented, for each branch, around 20 jobs. Multiply this by the number of\nbranches and projects, and there you are: more than two years after the start\nof the story, we had more than 3500 jobs.</p>\n</div>\n<div class=\"paragraph\">\n<p>3500 jobs. Half a dozen people to manage them all&#8230;&#8203;</p>\n</div>\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/jenkins-pipeline-scalability/thousands.png\" alt=\"Thousands of jobs for a small team\">\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"preparing-the-journey\"><a class=\"anchor\" href=\"#preparing-the-journey\"></a>Preparing the journey</h4>\n<div class=\"paragraph\">\n<p>How did we deal with this load?</p>\n</div>\n<div class=\"paragraph\">\n<p>We were lucky enough to have several assets:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>time - we had time to design a solution before the scaling went really out of\ncontrol</p>\n</li>\n<li>\n<p>forecast - we <em>knew</em> that the scaling would occur and we were not taken by\nsurprise</p>\n</li>\n<li>\n<p>tooling - the <a href=\"https://wiki.jenkins.io/display/JENKINS/Job+DSL+Plugin\">Jenkins Job DSL</a>\nwas available, efficient and well documented</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>We also knew that, in order to scale, we&#8217;d have to provide a solution with the\nfollowing characteristics:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>self-service - we could not have a team of 6 people become a bottleneck for\nenabling CI/CD in projects</p>\n</li>\n<li>\n<p>security - the solution had to be secure enough in order for it to be used by\nremote developers we never met and didn&#8217;t know</p>\n</li>\n<li>\n<p>simplicity - enabling CI/CD had to be simple so that people having\nnever heard of it could still use it</p>\n</li>\n<li>\n<p>extensibility - no solution is a one-size-fits-all and must be flexible\nenough to allow for corner cases</p>\n</li>\n</ul>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nAll the mechanisms described in this article are available through the\n<a href=\"https://github.com/jenkinsci/seed-plugin\">Jenkins Seed plugin</a>.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Creating pipelines using the Job DSL and embedding the scripts in the code was\nsimple enough. But what about branching? We needed a mechanism to allow the\ncreation of pipelines per branch, by downloading the associated DSL and to\nrun it in a dedicated folder.</p>\n</div>\n<div class=\"paragraph\">\n<p>But then, all those projects, all those branches, they were mostly using the\nsame pipelines, give or take a few configurable items. Going this way would\nhave lead to a terrible duplication of code, transforming a job maintenance\nnightmare into a code maintenance nightmare.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"pipeline-as-configuration\"><a class=\"anchor\" href=\"#pipeline-as-configuration\"></a>Pipeline as configuration</h4>\n<div class=\"paragraph\">\n<p>Our trick was to transform this vision of \"pipeline as code\" into a \"pipeline\nas configuration\":</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>by maintaining well documented and tested \"pipeline libraries\"</p>\n</li>\n<li>\n<p>by asking projects to describe their pipeline not as code, but as property\nfiles which would:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>define the name and version of the DSL pipeline library to use</p>\n</li>\n<li>\n<p>use the rest of the property file to configure the pipeline library, using\nas many sensible default values as possible</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/jenkins-pipeline-scalability/properties.png\" alt=\"Property file\">\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"piloting-the-pipeline-from-the-scm\"><a class=\"anchor\" href=\"#piloting-the-pipeline-from-the-scm\"></a>Piloting the pipeline from the SCM</h4>\n<div class=\"paragraph\">\n<p>Once this was done, the only remaining trick was to automate the creation,\nupdate, start and deletion of the pipelines using SCM events. By enabling SCM\nhooks (in GitHub, BitBucket or even in Subversion), we could:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>automatically create a pipeline for a new branch</p>\n</li>\n<li>\n<p>regenerate a pipeline when the branch&#8217;s pipeline description was modified</p>\n</li>\n<li>\n<p>start the pipeline on any other commit on the branch</p>\n</li>\n<li>\n<p>remove the pipeline when the branch was deleted</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/jenkins-pipeline-scalability/hooks.png\" alt=\"Hooks\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Once a project wants to go in our ecosystem, the Jenkins team \"seeds\" the\nproject into Jenkins, by running a job and giving a few parameters.</p>\n</div>\n<div class=\"paragraph\">\n<p>It will create a folder for the project and grant proper authorisations, using\nActive Directory group names based on the project name.</p>\n</div>\n<div class=\"paragraph\">\n<p>The hook for the project must be registered into the SCM and you&#8217;re up and\nrunning.</p>\n</div>\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/jenkins-pipeline-scalability/jobs.png\" alt=\"Jobs\">\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"configuration-and-code\"><a class=\"anchor\" href=\"#configuration-and-code\"></a>Configuration <em>and</em> code</h4>\n<div class=\"paragraph\">\n<p>Mixing the use of strong pipeline libraries configured by properties and the\ndirect use of the Jenkins Job DSL is still possible. The Seed plugin\nsupports all kinds of combinations:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>use of pipeline libraries only - this can even be enforced</p>\n</li>\n<li>\n<p>use a DSL script which can in turn use some classes and methods defined in\na pipeline library</p>\n</li>\n<li>\n<p>use of a Job DSL script only</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Usually, we tried to have a maximum reuse, through only pipeline libraries, for\nmost of our projects, but in other circumstances, we were less strict and\nallowed some teams to develop their own pipeline script.</p>\n</div>\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/jenkins-pipeline-scalability/modes.png\" alt=\"Mixed modes\">\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"end-of-the-journey\"><a class=\"anchor\" href=\"#end-of-the-journey\"></a>End of the journey</h4>\n<div class=\"paragraph\">\n<p>In the end, what did we achieve?</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Self service</strong> ✔︎</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Pipeline automation from SCM - no intervention from the Jenkins team but for\nthe initial bootstrapping</p>\n</li>\n<li>\n<p>Getting a project on board of this system can be done in a few minutes only</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><strong>Security</strong> ✔︎</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Project level authorisations</p>\n</li>\n<li>\n<p>No code execution on the controller</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><strong>Simplicity</strong> ✔︎</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Property files</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><strong>Extensibility</strong> ✔︎</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Pipeline libraries</p>\n</li>\n<li>\n<p>Direct job DSL still possible</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/jenkins-pipeline-scalability/responsibilities.png\" alt=\"Responsibilities\">\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"seed-and-pipeline-plugin\"><a class=\"anchor\" href=\"#seed-and-pipeline-plugin\"></a>Seed and Pipeline plugin</h4>\n<div class=\"paragraph\">\n<p>Now, what about the <a href=\"/doc/pipeline/\">Pipeline plugin</a>? Both\nthis plugin and the Seed plugin have common functionalities:</p>\n</div>\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/jenkins-pipeline-scalability/seed-now.png\" alt=\"Seed now\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>What we have found in our journey is that having a \"pipeline as configuration\"\nwas the easiest and most secure way to get a lot of projects on board, with\ndevelopers not knowing Jenkins and even less the DSL.</p>\n</div>\n<div class=\"paragraph\">\n<p>The outcome of the two plugins is different:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>one pipeline job for the Pipeline plugin</p>\n</li>\n<li>\n<p>a list of orchestrated jobs for the Seed plugin</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>If time allows, it would be probably a good idea to find a way to integrate the\nfunctionalities of the Seed plugin into the pipeline framework, and to keep\nwhat makes the strength of the Seed plugin:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>pipeline as configuration</p>\n</li>\n<li>\n<p>reuseable pipeline libraries, versioned and tested</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/jenkins-pipeline-scalability/seed-pipeline.png\" alt=\"Seed and Pipeline\">\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"links\"><a class=\"anchor\" href=\"#links\"></a>Links</h4>\n<div class=\"paragraph\">\n<p>You can find additional information about the Seed plugin and its usage at the\nfollowing links:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/jenkinsci/seed-plugin\">the Seed plugin itself</a></p>\n</li>\n<li>\n<p><a href=\"https://www.cloudbees.com/jenkins/juc-2015/abstracts/europe/02-03-1515-coraboeuf\">JUC London, June 2015</a></p>\n</li>\n<li>\n<p><a href=\"https://www.slideshare.net/DamienCoraboeuf/brujug-jenkins-pipeline-scalability\">BruJUG Brussels, March 2016</a></p>\n</li>\n</ul>\n</div>\n</div>","id":"92e6efae-588c-5a80-886a-8fe7822dcea3","title":"Jenkins Pipeline Scalability in the Enterprise","date":"2016-06-15T00:00:00.000Z","slug":"/blog/2016/06/15/jenkins-pipeline-scalability/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"dcoraboeuf","html":"<div class=\"paragraph\">\n<p>I&#8217;ve started many years ago in the Java development before switching\nprogressively toward continuous delivery aspects.  I&#8217;m now a consultant\nimplementing CD solutions based on Jenkins. Implementation of the Pipeline\nas Code principles have allowed one of my clients to be able to manage more\nthan 3000 jobs, using a self service approach based on the Seed plugin.</p>\n</div>\n<div class=\"paragraph\">\n<p>I&#8217;m also a contributor for some Jenkins plugins and the author of the\nOntrack application, which allows the monitoring of continuous delivery\npipelines.</p>\n</div>","id":"dcoraboeuf","irc":null,"linkedin":null,"name":"Damien Coraboeuf","slug":"blog/author/dcoraboeuf","twitter":"DamienCoraboeuf"}]}},"pageContext":{"next":"/blog/2016/06/16/parallel-test-executor-plugin/","previous":"/blog/2016/06/14/jenkins-world-agenda/","id":"92e6efae-588c-5a80-886a-8fe7822dcea3"}},
    "staticQueryHashes": ["1271460761","3649515864"]}