{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2016/01/10/beautiful-jenkins-dashboard/",
    "result": {"data":{"blog":{"html":"<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nThis is a guest post by <a href=\"https://github.com/kj187\">Julian Kleinhans</a>,\nSoftware Architect at <a href=\"https://www.aoe.com\">AOE</a>, who is outlining some of the\nJenkins dashboard work he&#8217;s done with\n<a href=\"https://github.com/fabiocaseri/dashing-js\">dashing-js</a>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins offers a handful of third party dashboards, but none of them are really\nbeautiful and flexible enough from my point of view. For example, I could not\nfind a solution which gives me the possibility to easily decide which data\nshould be display in the widget and which not. It also doesn`t have the\npossibility to add additional widgets to the dashboard which have nothing to do\nwith Jenkins. So I came up with something interesting that includes Jenkins\ndata. But I cannot do that with the existing built-in dashboards from Jenkins\nplugins which are Jenkins-content specific.</p>\n</div>\n<div class=\"paragraph\">\n<p>So I decided to write a new, flexible and extensible dashboard. To avoid\nre-inventing the wheel I also decided to use\n<a href=\"https://github.com/fabiocaseri/dashing-js\">dashing-js</a> as a basis and not\nJenkins itself. dashing-js is a Node.js port of\n<a href=\"https://dashing.io/\">Dashing</a>, a <a href=\"https://sinatrarb.com\">Sinatra</a>-based\nframework that lets you build beautiful dashboards.</p>\n</div>\n<div class=\"paragraph\">\n<p>The key features of Dashing are:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Use pre-made widgets, or fully create your own with <a href=\"https://sass-lang.com/\">Sass</a>, HTML and <a href=\"https://coffeescript.org/\">CoffeeScript</a></p>\n</li>\n<li>\n<p>Widgets harness the power of data bindings (via <a href=\"https://web.archive.org/web/20160111000701/https://batmanjs.org/\">batman.js</a>) to keep things <a href=\"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself\">DRY</a> and simple</p>\n</li>\n<li>\n<p>Use the API to push data to your dashboards or make use of a simple Node.js script for fetching data</p>\n</li>\n<li>\n<p>Drag &amp; drop interface for re-arranging your widgets</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>The advantage over a native Java-based Jenkins plugin is that you don&#8217;t need to\nknow Java and the whole Java stack. You can also easily add other pre-made\nthird-party widgets, for example a GitHub Pull Request count widget or an AWS\nstatistic widget or whatever else. In other words, it is completely independent\nof Jenkins. All you need is Node.js and the permission to access the\n<a href=\"https://wiki.jenkins.io/display/JENKINS/Remote+access+API\">Jenkins API</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Beside dashing-js you will need my\n<a href=\"https://kj187.github.io/dashing-jenkins_job/\">Jenkins Job widget</a>. It is a\ngeneric widget for Jenkins jobs which provides a highly visible view of the\nbuild status and build progress of selected Jenkins jobs. Via configuration it\nis possible to add multiple widgets for different Jenkins jobs (as you can see\nin the screenshot below).</p>\n</div>\n<div class=\"paragraph\">\n<p>So, all you need is dashing-js, my Jenkins Job widget and some\n<a href=\"https://npmjs.org\">npm</a> packages.  The installation and the setup is really\neasy and can be found <a href=\"https://kj187.github.io/dashing-jenkins_job/\">here</a>.</p>\n</div>\n<div class=\"paragraph\">\n<div class=\"title\">Example</div>\n<p><span class=\"image\"><img src=\"/images/post-images/kj187_Dashboard_2_i4wkw6.png\" alt=\"Example\" width=\"550\"></span></p>\n</div>","id":"647db960-6a1f-5ece-9887-41eb617456d8","title":"A beautiful Jenkins dashboard","date":"2016-01-10T00:00:00.000Z","slug":"/blog/2016/01/10/beautiful-jenkins-dashboard/","links":{"discourse":""},"authors":[{"avatar":null,"blog":"http://blog.kj187.de","github":"kj187","html":"<div class=\"paragraph\">\n<p>Julian Kleinhans is working as a Software Architect at <a href=\"https://www.aoe.com\">AOE GmbH</a> in Krefeld.\nBeside his passion as a developer, he is also passionate about whiskey.\nHis blog deals with various topics such as web development and whisky tasting.</p>\n</div>","id":"kj187","irc":null,"linkedin":null,"name":"Julian Kleinhans","slug":"/blog/authors/kj187","twitter":"kj187"}]}},"pageContext":{"next":"/blog/2016/01/26/office-hour-javascript-development/","previous":"/blog/2016/01/07/official-code-of-conduct/","id":"647db960-6a1f-5ece-9887-41eb617456d8"}},
    "staticQueryHashes": ["1271460761","3649515864"]}