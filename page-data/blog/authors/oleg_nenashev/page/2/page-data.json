{
    "componentChunkName": "component---src-templates-author-blog-list-template-js",
    "path": "/blog/authors/oleg_nenashev//page/2",
    "result": {"data":{"author":{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev/","twitter":"oleg_nenashev"},"allBlog":{"edges":[{"node":{"date":"2020-07-23T00:00:00.000Z","id":"fd686e1c-3df7-5236-8624-f2cd50ed3461","slug":"/blog/2020/07/23/windows-support-updates/","strippedHtml":"In this article, I would like to announce the new Windows support policy\nwhich was introduced in the Jenkins project in June 2020.\nThis policy sets an expectation about how we handle issues and patches related to Windows support for the Jenkins server and agents, and how we organize testing of Windows support in the project.\nWe will also talk about .NET Framework 2.0 support removal in Jenkins 2.248,\nand about new Windows service management features and fixes Jenkins users get with this release.\n\nFigure 1. Jenkins on Windows\n\nWhy?\n\nIn theory, Jenkins can run everywhere where you can run Java 8 or Java 11, but, in practice, there are some limitations.\nThe Jenkins core and some plugins contain native code, and hence they rely on operating systems and platforms.\nWe use Java Native Access and Java Native Runtime libraries which provide wide platform support for low-level operations,\nbut there are platform-specific cases not covered by such generic libraries.\nIn the case of Windows platforms we use Windows Service Wrapper (WinSW) and\nWindows Process Management Library (WinP).\nThese libraries depend on particular Windows API versions and, in the case of Windows services, on .NET Framework.\n\nHistorically Jenkins had no documented support policy for Windows,\nand we were accepting patches for all versions which existed since the Hudson inception in 2004.\nIt became a serious obstacle for Windows component maintainers who had to be very conservative about incoming patches so that we could avoid breaking instances running on old platforms.\nLack of testing for older platforms did not help either.\nAnd it is not just about maintenance overhead.\nUsers were impacted as well, because it blocked us from adopting some new Windows features and making Jenkins more stable/maintainable on modern platforms.\n\nNew policy\n\nTo set proper expectations about Windows support,\nin the new policy we defined four support levels.\nSee the Windows support policy page for the actual information about the support levels and the supported platforms.\nThis blogpost captures the support state as of Jul 23, 2020:\n\nLevel 1 - Full Support\n\nWe run automated testing for these platforms, and we intend to timely fix the reported issues.\nThis support level includes 64-bit (amd-64) Windows Server versions with the latest GA update pack,\nand versions used in the official Jenkins server and agent Docker images.\n\nLevel 2 - Supported\n\nWe do not actively test these platforms, but we intend to keep compatibility.\nWe are happy to accept patches.\nThis support level includes 64-bit (amd64) Windows Server and Windows 10 versions generally supported by Microsoft.\n\nLevel 3 - Patches considered\n\nThe platforms are generally expected to work, but they may have limitations and extra requirements.\nWe do not test compatibility, and we may drop support if needed.\nWe will consider patches if they do not put Level 1/2 platforms at risk and if they do not create maintenance overhead.\nThis support level includes non-amd64 platforms like x86 (32-bit) and AArch64 (Arm).\nIt also applies to non-mainstream release lines like Windows Embedded, preview releases, and versions no longer supported by Microsoft.\n\nLevel 4 - Unsupported\n\nThese versions are known to be incompatible or to have severe limitations.\nWe do not support the listed platforms, and we will not accept patches.\nAt the moment this level applies to platforms released before 2008.\n\nWhen the policy was introduced, there were questions raised about platforms listed in the Level 3 support category.\nFirst of all, these platforms are still supported.\nUsers are welcome to run Jenkins on these platforms.\nWe recognize the importance of the platforms listed there, and we intend to keep compatibility with them.\nAt the same time, particular functionality may break there due to the lack of testing when we update Jenkins or upstream dependencies.\nIt may take a while until a fix is submitted by a user or contributor,\nbecause we do not maintain development environments for these platforms.\nBy setting a Level 3 support level, we want to set an explicit expectation about those limitations.\n\nIf you are interested in expanding the official Windows support policy and adding more platforms there,\nwe invite you to participate in quality assurance of Jenkins.\nYou may contribute by expanding test automation for Jenkins,\ncontributing test environments for your platforms,\nor participating in the LTS release candidate testing and reporting results.\nPlease contact us via Platform SIG channels if you are interested.\n\nWindows Service Management changes in Jenkins 2.248\n\nFigure 2. WinSW Logo\n\nAlthough the policy was introduced more than 1 month ago,\nJenkins 2.248 is the first release where the new policy is applied.\nStarting from this release, we won’t support .NET Framework 2.0 for launching the Jenkins server or agents as Windows services.\n .NET Framework 4.0 or above is now required for using the default service management features.\n\nThis release also upgrades Windows Service Wrapper (WinSW) from 2.3.0 to 2.9.0 and replaces the bundled binary from .NET Framework 2.0 to 4.0.\nThere are many improvements and fixes in these versions,\nbig thanks to NextTurn and all other contributors.\nYou can find the full WinSW changelog here,\njust a few highlights important to Jenkins users:\n\nPrompt for permission elevation when administrative access is required.\nNow Jenkins users do not need to run the agent process as Administrator to install the agent as a service from GUI.\n\nEnable TLS 1.1/1.2 in .NET Framework 4.0 packages on Windows 7 and Windows Server 2008 R2.\n\nEnable strong cryptography when running .NET Framework 4.0 binaries on .NET 4.6.\n\nSupport security descriptor string in the Windows service definition.\n\nSupport 'If-Modified-Since' and proxy settings for automatic downloads.\n\nFix Runaway Process Killer extension so that it does not kill wrong processes with the same PID on startup.\n\nFix the default domain name in the serviceaccount parameter (jira:JENKINS-12660[])\n\nFix archiving of old logs in the roll-by-size-time mode.\n\nAs you may see, there are many improvements available with this version,\nand we hope that it will make Windows service installation even more reliable.\nSome of the changes in WinSW also replaced old workarounds in the Jenkins core,\nmaking the code more maintainable.\n\nUse-cases affected by .NET Framework 2.0 support removal\n\nIf you use .NET Framework 2.0 to run the Jenkins Windows services,\nthe following use-cases are likely to be affected:\n\nInstalling the Jenkins server as a Windows service from Web UI.\nThe official MSI Installer supports .NET Framework 2.0 for the moment, but it will be changed in future versions.\n\nInstalling agents as Windows services from GUI.\nThis feature is provided by in Windows Agent Installer Module from the Jenkins core.\n\nInstalling agents over Windows Management Instrumentation (WMI) via the WMI Windows Agents plugin\n\nAuto-updating of Windows service wrappers on agents installed from GUI.\n\nUpgrade guidelines\n\nIf all of your Jenkins server and agent instances already use .NET Framework 4.0 or above,\nthere are no special upgrade steps required.\nPlease enjoy the new features!\n\nIf you run the Jenkins server as a Windows Service with .NET Framework 2.0,\nthis instance will require an upgrade of .NET Framework to version 4.0 or above.\nWe recommend running with .NET Framework 4.6.1 or above,\nbecause this .NET version provides many platform features by default\n(e.g. TLS 1.2 encryption and strong cryptography),\nand Windows Service Wrapper does not have to apply custom workarounds.\n\nIf you want to continue running some of your agents with .NET Framework 2.0,\nthe following extra upgrade steps are required:\n\nDisable auto-upgrade of Windows Service Wrapper on agents by setting the\n-Dorg.jenkinsci.modules.windows_slave_installer.disableAutoUpdate=true flag on the Jenkins server side.\n\nUpgrade agents with .NET Framework 4.0+ by downloading the recent Windows Service Wrapper 2.x\nversion from WinSW GitHub Releases\nand manually replacing the wrapper \".exe\" files in the agent workspaces.\n\nWhat’s next?\n\nWe plan to continue expanding the Windows support in Jenkins,\nincluding providing official Docker images for newer Windows versions.\nFor example, there is already a pull request which will introduce official agent images for Windows Server Core LTSC 2019 and\nfor Windows Server Core and Nano Server 1909.\nWe are also interested to keep expanding test coverage for Windows platforms.\nAny contributions and feedback will be appreciated!\n\nWe also keep working on improving Windows Services.\nBuddhika Chathuranga, a Google Summer of Code 2020 student, is working on support for YAML Configurations in Windows Service Wrapper,\nand on better verification of XML and YAML Configurations.\nSee the details on the project page and in the\nCoding Phase 1 Report.\nIn addition to that, there is ongoing work on a new Windows Service Wrapper 3.0 release which will redesign CLI and introduce a lot more improvements.\nIf you are interested in contributing to Windows Service Wrapper,\nsee the guidelines here.\nWe will also appreciate your feedback on the WinSW Gitter channel.","title":"Jenkins 2.248: Windows Support Updates","tags":["announcement","windows","platform","winsw"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev/","twitter":"oleg_nenashev"}]}},{"node":{"date":"2020-06-26T00:00:00.000Z","id":"1590b5a3-15e6-5bc9-a980-1e26f0ff3deb","slug":"/blog/2020/06/26/ui-ux-hackfest-ui-track/","strippedHtml":"In this article, I would like to share some highlights from the User Interface track of the\nJenkins UI/UX Hackfest we held on May 25..29.\nThis blog post has been slightly delayed by the infrastructure issues we had in the project,\nbut, as for improving the Jenkins UI, it is better late than never.\nKey highlights from the event:\n\nWe delivered a preview of Jenkins read-only configuration.\nDuring the hackfest we discovered and fixed many compatibility issues.\n\nWe created a new Dark Theme for Jenkins.\nWe also improved theming support in the core, and fixed compatibility in many plugins.\n\nWe contributed to the Jenkins UI accessibility, including UX testing and fixing the reported issues.\njira:JENKINS-62437[Configuration UI: Tables to divs migration] testing was the dominant story there.\n\nWe worked on a New Script Security approvals management UI\n\nWe had 54 contributors at the hackfest.\n22 of them have contributed to the user interface track as committers, testers and reviewers:\nTim Jacomb,\nUllrich Hafner,\nRaihaan Shouhell,\nSumit Sarin,\nDaniel Beck,\nRomén Rodríguez-Gil,\nwadeck Follonier,\nRunxia Ye,\nFélix Queiruga,\nAytunc Beken,\nPeter Jonsson,\nAntonio Muniz,\nKseniia Nenasheva,\nSladyn Nuner,\nAbhyudaya Sharma,\nOleg Nenashev,\nNimish Bongale,\nEsther Álvarez Feijoo,\nDenys Digtiar,\nSlavo,\nLiam Newman, and\nGavin Mogan.\nThanks to all contributors!\n\nSee the blog post below to know more about these and other user interface improvements.\n\nRead-only Jenkins Configuration\n\nQuick access:\ndemo,\nfeature preview announcement,\npresentation materials\n\nA read-only view of Jenkins configurations, jobs and agents is important to Jenkins Configuration-as-Code users.\nIt would allow them to access configuration and diagnostics information about their Jenkins instances while having no opportunity to occasionally change it.\nThis story is a part of the Jenkins roadmap,\nand it was featured as an area for contribution during the UI/UX hackfest.\n\nOn May 25th we have released a preview for Read-only Jenkins Configuration.\nRead the announcement by Tim Jacomb in this blogpost.\nDuring the hackfest we kept testing the change and fixing compatibility in the Jenkins plugins,\nincluding the Cloud Stats Plugin, Role Strategy Plugin, Simple Disk Usage Plugin and others.\n\nWe would appreciate feedback and testing from the Jenkins users!\nSee the blogpost for the guidelines.\n\nDark Theme\n\nQuick access:\ndemo,\nproject repository\n\nDark user interface themes are very popular among developers: in IDE, communication tools, etc.\nAnd there is an interest to have one for Jenkins.\nThere were a few of implementations before the hackfest, most notably camalot/jenkins-dark-stylish and a dark version of the Neo2 Theme.\nThese themes were difficult to maintain, and finally they were either removed or abandoned.\nWhat if Jenkins had an official theme?\n\nDuring the event a group of contributors focused on creating a new Dark Theme for Jenkins.\nThis effort included:\n\nPatches to the Jenkins core which simplified development and maintenance of UI themes.\nSupport for CSS variables was added, as well as PostCSS processing which helps to simplify browser compatibility.\n\nDark Theme itself.\n\nUI Testing and compatibility fixes in the core and multiple Jenkins plugins.\n\nDark theme demo with support for the development mode.\n\nYou can try out this theme starting from Jenkins 2.239.\nIt is available as a plugin from the Jenkins Update Center.\nAn example screenshot of the main page:\n\nIf you discover any Dark theme compatibility issues,\nplease report them here.\n\nJenkins Configuration UI Accessibility\n\nQuick access:\ndemo,\nproject page\n\nJenkins Web UI accessibility was one of the suggested topics at the event.\nWe would like to make Jenkins usable by as many people as possible.\nIt includes multiple groups of users: people with disabilities, ones using mobile devices, or those with slow network connections.\nIn general, all Jenkins users would benefit from better navigation and layouts.\nSome of the accessibility improvements we implemented during the event:\n\nAdded aria-labels to username & password input fields\n\nIndicate the language of the page in the footer (not merged yet)\n\nRemove page generation timestamp from the footer\n\nAt the UI/UX hackfest the major focus was on migrating configuration pages from tables to divs\n(jira:JENKINS-62437[]).\nIt will make them more user-friendly on narrow and especially mobile screens.\nThe change will also help users to navigate complex forms with multiple levels of nesting.\nOur progress:\n\nUser Experience testing.\nThanks to the contributors, we discovered several compatibility issues in plugins.\n\nBug fixes in several plugins\n\nA new Dockerized demo which allows to evaluate the change with a set of pre-configured plugins.\n\nHere is an example of a job configuration page using the new layout:\n\nWe will keep working on this change in the coming weeks,\nand we invite Jenkins users and Contributors to help us with testing the change!\nTesting guidelines are available in the jira:JENKINS-62437[] ticket.\n\nNew Script Security approvals management UI\n\nQuick access:\ndemo,\npull request\n\nDuring the hackfest Wadeck Follonier redesigned the script approval interface in the Script Security Plugin.\nThe new UI allows viewing the list of approved scripts, shows the last access timestamp, and allows managing the approvals individually.\nBefore, it was not possible to do it from the Web interface.\nOnce the pull request is released,\nthe feature will become available to Jenkins users.\n\nOther UI improvements\n\nIn addition to the major improvements listed above,\nthere were also many smaller patches in the Jenkins core and various plugins.\nYou can find a full list of contributions to the user interface here,\nsome important improvements:\n\nImproved navigation in the Credentials plugin.\n\nSupport for wide screens in the Autograding plugin.\n\nUI Improvements in the Folder-based Authorization Strategy plugin.\n\nImproved Fingerprint listing in the Jenkins core\n\nContributing\n\nWe invite Jenkins users and contributors to join the effort and to improve the user interface together.\nThe Jenkins project gradually adopts modern frontend stacks (JavaScript, React, Gatsby, Vue.js, etc.) and design methodologies.\nFor example, see the presentation about beautifying the UI of Jenkins reporter plugins by Ullrich Hafner.\nIt is a great opportunity for frontend developers to join the project, share their experiences, experiment with new technologies, and improve the Jenkins user interface and user experience.\nJoin us!\n\nSee this page for more information about contributing to the Jenkins codebase.\nIf you want to know more, join us in the Jenkins User Experience SIG channels.\n\nReferences\n\nYou can find more information about the Hackfest here:\n\nJenkins UI/UX Hackfest Page\n\nUI/UX Hackfest Closing Demos\n\nAll presentations and demos\n\nFull list of contributions to the user interface","title":"UI/UX Hackfest: Jenkins User Interface track highlights","tags":["community","event","ui","outreach-programs","jenkins-is-the-way"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev/","twitter":"oleg_nenashev"}]}},{"node":{"date":"2020-05-12T00:00:00.000Z","id":"96c5da12-e5e0-51af-86a5-d619e4901dae","slug":"/blog/2020/05/12/uiux-hackfest-announcement/","strippedHtml":"This event is over, thanks a lot to all contributors!\nPlease the event page for results.\n\nOn behalf of the Jenkins User Experience, Documentation and Advocacy and Outreach special interest groups,\nwe are happy to announce the online UI/UX hackfest on May 25-29!\nEveryone is welcome to participate, regardless of their Jenkins development experience.\n\nThe goal is to get together and work on improving Jenkins user experience,\nincluding but not limited to user interface and user documentation.\nWe also invite you to share experiences about Jenkins and to participate in UX testing.\nThe event follows the Jenkins is the Way theme and the\nmost active contributors will get special edition swag and prizes!\n\nEvent plan\n\nThis hackfest is NOT a hackathon.\nWe do not expect participants to dedicate all their time during the event timeframe, but hop-in/hop-out as their time allows.\nEverybody can spend as much time as they are willing to dedicate.\nSpending a few days or just a few hours is fine, any contributions matter regardless of their size.\nJenkins development experience is not required,\nwe have newcomer-friendly stories for those who want to start contributing to the project.\nWe will also have a 24/7 jenkinsci/hackfest Gitter chat for Q&A and coordination between contributors.\n\nThere will be 3 main tracks :\n\nUser Interface -\nImprove look&feel and accessibility for Jenkins users,\nwork on new read-only interface for instances managed with configuration as code,\ncreate and update Jenkins themes,\nand many other topics.\nThis track is coordinated by the UX SIG.\n\nUser Documentation -\nImprove and create new user documentation, tutorials and solution pages.\nAlso, there is ongoing documentation migration from Wiki to jenkins.io and plugin repositories.\nThis track is coordinated by the Documentation SIG.\n\nSpread the word -\nWrite user stories for Jenkins Is The Way site and the Jenkins blog,\npost about your Jenkins user experience and new features,\nrecord overview and HOWTO videos, etc.\nThis track is coordinated by the Advocacy and Outreach SIG.\n\nWe are working on publishing project ideas and issues for the listed tracks.\nThe current list can be found on the UI / UX hackfest event page,\nthis list will be finalized by the beginning of the hackfest.\nYou are welcome to propose your own projects within the User Experience theme.\n\nDuring the event, we will organize online meetups and ad-hoc training sessions in different timezones.\nAll these sessions will be recorded and shared on our YouTube channel.\nThere are no mandatory sessions you must attend, you are welcome to join ones remotely or watch the recordings.\nAfter the event we will invite participants to demo their projects at online meetings or recorded sessions.\n\nRegistration\n\nThis event is over, thanks a lot to all contributors!\n\nP.S: Note that the registration form has a question top 3 things we could change in Jenkins to improve your user experience.\nWe would appreciate your response there!\n\nContacts\n\nPlease use the following contacts to contact organizers:\n\nGitter chat\n\nMailing list\n\nResources\n\nEvent Page\n\nRegistration form.\n\nProject ideas (work-in-progress).\nThe full list will be published by the beginning of the event.\n\nFrequently Asked Questions\n\nContributing to Jenkins\n\nCode of Conduct\n\nSwag and Prizes\n\nThanks to our sponsors ( CloudBees, Inc. and Continuous Delivery Foundation),\nwe are happy to offer swag to active contributors!\n\n50 most-active contributors will get an exclusive \"Jenkins Is The Way\" T-shirt and stickers\n\nActive contributors will get Jenkins stickers and socks\n\nWe are working on special prizes for top contributors, to be announced later\n\nAcknowledgements\n\nWe thank all contributors who participate in this event as committers!\nWe especially thank all reviewers, organizers and those who participated in the initial program reviews and provided invaluable feedback.\nIn particular, we thank User Experience, Documentation and Advocacy and Outreach SIG members who heavily contributed to this event.\n\nWe also thank sponsors of the event who make the swag and prizes possible:\nCloudBees, Inc. and\nContinuous Delivery Foundation (CDF).\nIn addition to swag, CloudBees donates working time for event hosts and reviewers.\nCDF also sponsors our online meetup platform which we will be using for the event.\n\n.","title":"Join us for online UI/UX hackfest on May 25-29!","tags":["announcement","event","ui","ux","documentation","outreach-programs","advocacy-and-outreach","jenkins-is-the-way","community"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev/","twitter":"oleg_nenashev"}]}},{"node":{"date":"2020-05-06T00:00:00.000Z","id":"4e4838ee-bab2-53c0-b338-e2fa90ee89b2","slug":"/blog/2020/05/06/docker-agent-image-renaming/","strippedHtml":"We would like to announce the renaming of the official Docker images for Jenkins agents.\nIt does not have any immediate impact on Jenkins users, but they are expected to gradually upgrade their instances.\nThis article provides information about the new official names, upgrade procedure, and the support policy for the old images.\nWe will also talk about what’s next for the Docker packaging in Jenkins.\n\nNew image names\n\njenkins/agent is the new name of the old jenkins/slave image,\nstarting from 4.3-2\n\njenkins/inbound-agent is the new name of the jenkins/jnlp-slave image,\nstarting from 4.3-2\n\njenkins/ssh-agent is the new name of the old jenkins/ssh-slave image,\nstarting from 2.0.0\n\nSee the upgrade guidelines below.\n\nWhy?\n\nThe \"slave\" term is widely considered inappropriate in open source communities.\nIt has been officially deprecated in Jenkins 2.0 in 2016, but there are remaining usages in some Jenkins components.\nThe jira:JENKINS-42816[Slave to Agent renaming leftovers] EPIC tracks cleanup of such usages.\nOfficial Docker agent images were a glaring case, it was not easy to fix that with the previous versions of the image release Pipelines on DockerHub.\nIt is great to have the image naming issue finally fixed by this update.\n\nAnother notable change is replacing the JNLP agent term with inbound agent.\nHistorically \"JNLP\" has been used as a name of Remoting protocols.\nJNLP stands for Java Network Launch Protocol which is a part of the Java Web Start.\nJenkins supports Java Web Start mode for agents when running agents on Java 1.8,\nbut our networking protocols are based on TCP and have nothing to do with Java Network Launch Protocol.\nThis name has been very confusing since the beginning\nand became worse with the introduction of WebSocket support in Jenkins 2.217 (jep:222[]).\nDocker agent images support WebSockets, so we decided to change the image name to jenkins/inbound-agent so that it prevents further confusion.\nInbound agent term refers to agent protocols in which the agent initiates the connection to the Jenkins controller through different protocols.\n\nThanks a lot to Alex Earl and krufab for the repository restructuring groundwork which made the renaming possible!\nAlso thanks to Tim Jacomb, Marky Jackson, Mark Waite, Ivan Fernandez Calvo and other contributors for their reviews and testing.\n\nUpgrading and Compatibility Notes\n\nGood news, there are no breaking changes caused by this renaming.\nAll images have been already modified to use the new terminology internally.\nIf you use the recent versions of the previous images,\nyou can just replace the old names with the new ones.\nThese names may be referenced in your Dockerfiles, scripts, and Jenkins configurations.\n\nWe will keep updating the old images on DockerHub for at least 3 months (until August 05, 2020).\nThere will be no new configurations and platforms added to the old images,\nbut all existing ones will remain available (Debian for Java 1.8 and 11, Alpine for Java 1.8, etc.).\nAfter August 05, 2020, the old images will no longer receive updates, but previous versions will remain available to users on DockerHub.\n\nWhat’s next?\n\nWe will continue renaming of the Docker images in Jenkins components which reference old image names.\nThere is also a set of convenience Docker images which include build tools like Maven or Gradle which will be renamed later.\nThe jenkins/ssh-agent image might be renamed again in the future as well;\nsee the ongoing discussion in this developer mailing list thread.\n\nIf you are rather interested in new features in Jenkins Docker packaging,\nstay tuned for future announcements!\nThere are multiple ongoing initiatives which you can find on the public Jenkins roadmap\n(in the draft stage, see jep:14[]).\nSome stories:\n\nGeneral availability of Windows images.\n\nSupport for more platforms (AArch64, IBM s390x, PowerPC).\n\nSwitching to AdoptOpenJDK.\n\nIntroducing multi-platform Docker images.\n\nIf you are interested in any of these projects and would like to contribute,\nplease reach out to the Platform Special Interest Group which coordinates initiatives related to Jenkins in Docker.\n\nRegarding the agent terminology cleanup outside Docker images,\nwe will keep working on this project in the Advocacy & Outreach SIG.\nIf you see the usage of the obsolete \"slave\" term anywhere in the Jenkins organization (Web UI, documentation, etc.),\nplease feel free to submit a pull request or to report an issue in the jira:JENKINS-42816[Slave to Agent renaming leftovers] EPIC.\nThere are \"just\" 3000 occurences left in the jenkinsci GitHub organization, but we will get there.\nAny contributions will be appreciated!","title":"Docker images for agents: New names and What's next","tags":["announcement","docker","platform-sig"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev/","twitter":"oleg_nenashev"}]}},{"node":{"date":"2020-01-29T00:00:00.000Z","id":"63429a32-68ab-54b9-ad78-3e5643129e68","slug":"/blog/2020/01/29/gsoc-report/","strippedHtml":"Google Summer of Code is much more than a summer internship program, it is a year-round effort for the organization and some community members.\nNow, after the DevOps World | Jenkins World conference in Lisbon and final retrospective meetings, we can say that GSoC 2019 is officially over.\nWe would like to start by thanking all participants: students, mentors, subject matter experts and all other contributors who proposed project ideas, participated in student selection, in community bonding and in further discussions and reviews.\nGoogle Summer of Code is a major effort which would not be possible without the active participation of the Jenkins community.\n\nIn this blogpost we would like to share the results and our experience from the previous year.\n\nResults\n\nFive GSoC projects were successfully completed this year:\nRole Strategy Plugin Performance Improvements,\nPlugins Installation Manager CLI Tool/Library,\nWorking Hours Plugin - UI Improvements,\nRemoting over Apache Kafka with Kubernetes features,\nMulti-branch Pipeline support for Gitlab SCM.\nWe will talk about the projects a little later in the document.\n\nProject details\n\nWe held the final presentations as Jenkins Online Meetups in late August and Google published the results on Sept 3rd.\nThe final presentations can be found here:\nPart 1,\nPart 2,\nPart 3.\nWe also presented the\n2019 Jenkins GSoC report\nat the DevOps World | Jenkins World San Francisco\nand at the\nDevOps World | Jenkins World 2019 Lisbon conferences.\n\nIn the following sections, we present a brief summary of each project, links to the coding phase 3 presentations, and to the final products.\n\nRole Strategy Plugin Performance Improvements\n\nRole Strategy Plugin is one of the most widely used authorization plugins for Jenkins,\nbut it has never been famous for performance due to architecture issues and regular expression checks for project roles.\nAbhyudaya Sharma was working on this project together with hist mentors:\nOleg Nenashev, Runze Xia and Supun Wanniarachchi.\nHe started the project from creating a new Micro-benchmarking Framework for Jenkins Plugins based on JMH,\ncreated benchmarks and achieved a 3501% improvement on some real-world scenarios.\nThen he went further and created a new Folder-based Authorization Strategy Plugin which offers even better performance for Jenkins instances where permissions are scoped to folders.\nDuring his project Abhyudaya also fixed the Jenkins Configuration-as-Code support in Role Strategy and contributed several improvements and fixes to the JCasC Plugin itself.\n\nProject page\n\nBlog posts: Micro-benchmarking Framework for Jenkins Plugins,\nIntroducing new Folder Authorization Plugin, Performance Improvements to Role Strategy Plugin\n\nFinal evaluation: slides, video\n\nSource code: Role Strategy Plugin, Folder Authorization Plugin\n\nPlugins Installation Manager CLI Tool/Library\n\nNatasha Stopa was working on a new CLI tool for plugin management,\nwhich should unify features available in other tools like install-plugins.sh in Docker images.\nIt also introduced many new features like YAML configuration format support, listing of available updates and security fixes.\nThe newly created tool should eventually replace the previous ones.\nNatasha’s mentors: Kristin Whetstone, Jon Brohauge and Arnab Banerjee.\nAlso, many contributors from Platform SIG and JCasC plugin team joined the project as a key stakeholders and subject-matter experts.\n\nProject page\n\nBlog posts: alpha release announcement,\ncoding phase 2 updates\n\nFinal evaluation: slides,\nvideo\n\nSource code: Plugin installation manager tool\n\nWorking Hours Plugin - UI Improvements\n\nJenkins UI and frontend framework are a common topic in the Jenkins project,\nespecially in recent months after the new UX SIG was established.\nJack Shen was working on exploring new ways to build Jenkins Web UI together with his mentor Jeff Pearce.\nJack updated the Working Hours Plugin to use UI controls provided by standard React libraries.\nThen he documented his experienced and created template for plugins with React-based UI.\n\nProject page\n\nBlog posts: Updates on Working Hours Plugin UI,\nReact Plugin Template\n\nFinal evaluation: slides, video\n\nSource code: Working Hours Plugin, Template for Jenkins plugins with React-based UI\n\nRemoting over Apache Kafka with Kubernetes features\n\nLong Le Vu Nguyen was working on extended Kubernetes support in the Remoting over Apache Kafka Plugin.\nHis mentors were Andrey Falco and Pham vu Tuan who was our GSoC 2018 student and the plugin creator.\nDuring this project Long has added a new agent launcher which provisions Jenkins agents in Kubernetes and connects them to the controller.\nHe also created a Cloud API implementation for it and a new Helm chart which can provision Jenkins as entire system in Kubernetes,\nwith Apache Kafka enabled by default.\nAll these features were released in Remoting over Apache Kafka Plugin 2.0.\n\nProject page\n\nBlog post for [Remoting over Apache Kafka Plugin 2.0\n\nFinal evaluation: slides, video\n\nPlugin source code\n\nMulti-branch Pipeline support for Gitlab SCM\n\nParichay Barpanda was working on the new GitLab Branch Source Plugin with Multi-branch Pipeline Jobs and Folder Organisation support.\nHis mentors were\nMarky Jackson-Taulia,\nJustin Harringa,\nZhao Xiaojie and\nJoseph Petersen.\nThe plugin scans the projects, importing the pipeline jobs it identifies based on the criteria provided.\nAfter a project is imported, Jenkins immediately runs the jobs based on the Jenkinsfile pipeline script and notifies the status to GitLab Pipeline Status.\nThis plugin also provides GitLab server configuration which can be configured in Configure System or via Jenkins Configuration as Code (JCasC).\nread more about this project in the GitLab Branch Source 1.0 announcement.\n\nProject page\n\nCoding phase 3 presentation\n\nGitlab Branch Source Plugin, Gitlab API plugin\n\nProjects which were not completed\n\nNot all projects have been completed this year.\nWe were also working on Artifact Promotion plugin for Jenkins Pipeline\nand on Cloud Features for External Workspace Manager Plugin,\nbut unfortunately both projects were stopped after coding phase 1.\nAnyway, we got a lot of experience and takeaways in these areas (see linked Jira tickets!.\nWe hope that these stories will be implemented by Jenkins contributors at some point.\nGoogle Summer of Code 2020 maybe?\n\nRunning the GSoC program at our organization level\n\nHere are some of the things our organization did before and during GSoC behind the scenes.\nTo prepare for the influx of students, we updated all our GSoC pages and wrote down all the knowledge we accumulated over the years of running the program.\nWe started preparing in October 2018, long before the official start of the program.\nThe main objective was to address the feedback we got during GSoC 2018 retrospectives.\n\nProject ideas.\nWe started gathering project ideas in the last months of 2018.\nWe prepared a list of project ideas in a Google doc, and we tracked ownership of each project in a table of that document.\nEach project idea was further elaborated in its own Google doc.\nWe find that when projects get complicated during the definition phase, perhaps they are really too complicated and should not be done.\n\nSince we wanted all the project ideas to be documented the same way, we created a template to guide the contributors.\nMost of the project idea documents were written by org admins or mentors, but occasionally a student proposed a genuine idea.\nWe also captured contact information in that document such as GitHub and Gitter handles, and a preliminary list of potential mentors for the project.\nWe embedded all the project documents on our website.\n\nMentor and student guidelines.\nWe updated the mentor information page with details on what we expect mentors to do during the program,\nincluding the number of hours that are expected from mentors,\nand we even have a section on preventing conflict of interest.\nWhen we recruit mentors, we point them to the mentor information page.\n\nWe also updated the student information page.\nWe find this is a huge time saver as every student contacting us has the same questions about joining and participating in the program.\nInstead of re-explaining the program each time, we send them a link to those pages.\n\nApplication phase.\nStudents started to reach out very early on as well, many weeks before GSoC officially started.\nThis was very motivating.\nSome students even started to work on project ideas before the official start of the program.\n\nProject selection. This year the org admin team had some very difficult decisions to make.\nWith lots of students, lots of projects and lots of mentors, we had to request the right number of slots and try to match the projects with the most chances of success.\nWe were trying to form mentor teams at the same time as we were requesting the number of slots, and it was hard to get responses from all mentors in time for the deadline.\nFinally we requested fewer slots than we could have filled.\nWhen we request slots, we submit two numbers: a minimum and a maximum. The GSoC guide states that:\n\nThe minimum is based on the projects that are so amazing they really want to see these projects occur over the summer,\n\nand the maximum number should be the number of solid and amazing projects they wish to mentor over the summer.\n\nWe were awarded minimum. So we had to make very hard decisions: we had to decide between \"amazing\" and \"solid\" proposals.\nFor some proposals, the very outstanding ones, it’s easy.\nBut for the others, it’s hard.\nWe know we cannot make the perfect decision, and by experience, we know that some students or some mentors will not be able to complete the program due to uncontrollable life events, even for the outstanding proposals.\nSo we have to make the best decision knowing that some of our choices won’t complete the program.\n\nCommunity Bonding.\nWe have found that the community bonding phase was crucial to the success of each project.\nUsually projects that don’t do well during community bonding have difficulties later on.\nIn order to get students involved in the community better, almost all projects were handled under the umbrella of Special Interest Groups so that there were more stakeholders and communications.\n\nCommunications.\nEvery year we have students who contact mentors via personal messages.\nStudents, if you are reading this, please do NOT send us personal messages about the projects, you will not receive any preferential treatment.\nObviously, in open source we want all discussions to be public, so students have to be reminded of that regularly.\nIn 2019 we are using Gitter chat for most communications, but from an admin point of view this is more fragmented than mailing lists.\nIt is also harder to search.\nChat rooms are very convenient because they are focused, but from an admin point of view, the lack of threads in Gitter makes it hard to get an overview.\nGitter threads were added recently (Nov 2019) but do not yet work well on Android and iOS.\nWe adopted Zoom Meetings towards the end of the program and we are finding it easier to work with than Google Hangouts.\n\nStatus tracking.\nAnother thing that was hard was to get an overview of how all the projects were doing once they were running.\nWe made extensive use of Google sheets to track lists of projects and participants during the program\nto rank projects and to track statuses of project phases (community bonding, coding, etc.).\nIt is a challenge to keep these sheets up to date, as each project involves several people and several links.\nWe have found it time consuming and a bit hard to keep these sheets up to date, accurate and complete, especially up until the start of the coding phase.\n\nPerhaps some kind of objective tracking tool would help.\nWe used Jenkins Jira for tracking projects, with each phase representing a separate sprint.\nIt helped a lot for successful projects.\nIn our organization, we try to get everyone to beat the deadlines by a couple of days, because we know that there might be events such as power outages,\nbad weather (happens even in Seattle!), or other uncontrolled interruptions, that might interfere with submitting project data.\nWe also know that when deadlines coincide with weekends, there is a risk that people may forget.\n\nRetrospective.\nAt the end of our project, we also held a retrospective and captured some ideas for the future.\nYou can find the notes here.\nWe already addressed the most important comments in our documentation and project ideas for the next year.\n\nRecognition\n\nLast year, we wanted to thank everyone who participated in the program by sending swag.\nThis year, we collected all the mailing addresses we could and sent to everyone we could the 15-year Jenkins special edition T-shirt, and some stickers.\nThis was a great feel good moment.\nI want to personally thank Alyssa Tong her help on setting aside the t-shirt and stickers.\n\nMentor summit\n\nEach year Google invites two or more mentors from each organization to the Google Summer of Code Mentor Summit.\nAt this event, hundreds of open-source project maintainers and mentors meet together and have unconference sessions targeting GSoC, community management and various tools.\nThis year the summit was held in Munich,\nand we sent Marky Jackson and Oleg Nenashev as representatives there.\n\nApart from discussing projects and sharing chocolate, we also presented Jenkins there, conducted a lightning talk and hosted the unconference session about automation bots for GitHub.\nWe did not make a team photo there, so try to find Oleg and Marky on this photo:\n\nGSoC Team at DevOps World | Jenkins World\n\nWe traditionally use GSoC organization payments and travel grants to sponsor student trips to major Jenkins-related events.\nThis year four students traveled to the DevOps World | Jenkins World conferences in San-Francisco and Lisbon.\nStudents presented their projects at the community booth and at the contributor summits,\nand their presentations got a lot of traction in the community!\n\nThanks a lot to Google and CloudBees who made these trips possible.\nYou can find a travel report from Natasha Stopa here,\nmore travel reports are coming soon.\n\nConclusion\n\nThis year, five projects were successfully completed.\nWe find this to be normal and in line with what we hear from other participating organizations.\n\nTaking the time early to update our GSoC pages saved us a lot of time later because we did not have to repeat all the information every time someone contacted us.\nWe find that keeping track of all the mentors, the students, the projects, and the meta information is a necessary but time consuming task.\nWe wish we had a tool to help us do that.\nCoordinating meetings and reminding participants of what needs to be accomplished for deadlines is part of the cheerleading aspect of GSoC, we need to keep doing this.\n\nLastly, I want to thank again all participants, we could not do this without you.\nEach year we are impressed by the students who do great work and bring great contributions to the Jenkins community.\n\nGSoC 2020?\n\nYes, there will be Google Summer of Code 2020!\nWe plan to participate, and we are looking for project ideas, mentors and students.\nJenkins GSoC pages have been already updated towards the next year, and we invite everybody interested to join us next year!\n\nMain page with all contacts\n\nGSoC 2020 Project Ideas\n\nGSoC 2020 Call for Mentors and Project Ideas\n\nInformation for students and mentors","title":"Google Summer of Code 2019 Report","tags":["gsoc","gsoc2019","jenkins","community","events"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#7898d8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/7b80f/martinda.png","srcSet":"/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/4c2a5/martinda.png 32w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/8bef2/martinda.png 64w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/7b80f/martinda.png 128w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/2864c/martinda.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/5abcf/martinda.webp 32w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/410d2/martinda.webp 64w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/6f814/martinda.webp 128w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/ca864/martinda.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":136}},"publicURL":"/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/martinda.png"},"blog":null,"github":"martinda","html":"<div class=\"paragraph\">\n<p>Martin is a Jenkins community member. He participates since 2016 in the Jenkins GSoC program as a mentor, and more recently as an organization admin.\nHe currrently works in ASIC/FPGA Development Automation, using Jenkins, Gradle, Make, Artifactory, and a million other tools and languages.</p>\n</div>","id":"martinda","irc":"martinda","linkedin":null,"name":"Martin d'Anjou","slug":"/blog/authors/martinda/","twitter":"martindanjou14"},{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/9a74a/jeffpearce.png","srcSet":"/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/c5deb/jeffpearce.png 32w,\n/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/9749a/jeffpearce.png 64w,\n/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/9a74a/jeffpearce.png 128w,\n/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/17c17/jeffpearce.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/0465c/jeffpearce.webp 32w,\n/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/89767/jeffpearce.webp 64w,\n/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/40d97/jeffpearce.webp 128w,\n/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/5028e/jeffpearce.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":166}},"publicURL":"/gatsby-jenkins-io/static/3f5190ddeb5b249babe4d25138729512/jeffpearce.png"},"blog":null,"github":"jeffpearce","html":"<div class=\"paragraph\">\n<p>Jeff is a Jenkins community member, co-maintainer of the <a href=\"https://github.com/jenkinsci/cobertura-plugin\">Cobertura Code Coverage plugin</a>,\nand the author of the <a href=\"https://github.com/jenkinsci/github-autostatus-plugin\">Job and Stage monitoring plugin</a> and\n<a href=\"https://github.com/jenkinsci/working-hours-plugin\">Working Hours plugin</a>. He participated in the Jenkins GSoC as a mentor in 2018, and is currently a mentor and\norganization admin for GSoC 2019.</p>\n</div>","id":"jeffpearce","irc":null,"linkedin":"jeffpea","name":"Jeff Pearce","slug":"/blog/authors/jeffpearce/","twitter":"jeff_pearce"},{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev/","twitter":"oleg_nenashev"},{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/bf8e1/markyjackson-taulia.png","srcSet":"/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/914ee/markyjackson-taulia.png 32w,\n/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/1c9ce/markyjackson-taulia.png 64w,\n/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/bf8e1/markyjackson-taulia.png 128w,\n/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/acb7c/markyjackson-taulia.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/ef6ff/markyjackson-taulia.webp 32w,\n/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/8257c/markyjackson-taulia.webp 64w,\n/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/6766a/markyjackson-taulia.webp 128w,\n/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/22bfc/markyjackson-taulia.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/2513553514518e745b05cc49f8778553/markyjackson-taulia.png"},"blog":null,"github":"markyjackson-taulia","html":"<div class=\"paragraph\">\n<p>Hi! Super happy you found me here. I’m Marky Jackson and I am a lover of family, friends and a die-hard San Francisco Giants fan. I left my heart in San Francisco in the summer of 2020 and now reside in San Diego, California.\nI am a senior software engineer at Equinix Metal working on the Tinkerbell project.\nI am a graduate student studying Data Science &amp; Machine Learning under Michal Fabinger.\nI was previously a Jenkins Goverence Board as well as the Jenkins Events Officer, a Kubernetes Org member, a Kubernetes Release Manager Associate, a Continuous Delivery Foundation Ambassador, a Jenkins core contributor, a Jenkins Google Summer of Code org admin and mentor, a Google Summer of Docs org admin and mentor, and helped with software development and community management on the Ortelius Project.\nI have had profiles in the CNCF and other mediums. In the past I have spoken publicly and enjoyed writing blogs on technical topics. Previously, I was named the Most Valuable Jenkins Advocate.\nFinally, I was previously a mentoring lead within the Kubernetes project as well as a previous Kubernetes Outreachy coordinator for the Kubernetes project.</p>\n</div>\n<div class=\"paragraph\">\n<p>You can find me on Twitter @markyjackson5\nIn January 2021, I decided to step back from open-source projects for the foreseeable future and focus on mental health, family, work and graduate school.</p>\n</div>","id":"markyjackson-taulia","irc":"markyjackson_","linkedin":"markyjackson5","name":"Marky Jackson","slug":"/blog/authors/markyjackson-taulia/","twitter":"markyjackson5"}]}},{"node":{"date":"2020-01-07T00:00:00.000Z","id":"30b969d7-465b-5cae-b8a9-9a72456f49e4","slug":"/blog/2020/01/07/happy-new-year/","strippedHtml":"Jenkins project congratulates all users and contributors with the New Year!\nLet’s take a look at some changes this year.\n\nHighlights\n\nWe celebrated 15 years of Jenkins\n\nWe had first ever Governance Board and Officer elections\n\nJenkins project joined the Continuous Delivery Foundation (CDF)\n\nWe released Java 11 support in Jenkins\n\nJenkins X has graduated as a Jenkins sub-project and became a new project under umbrella of CDF\n\nIn October 2019 we reached the record high number of contributions: 915 unique contributors, 124 of them were first-timers\n\nWe started new special interest groups for Documentation and User Experience.\n\nA new position of the Documentation officer was introduced to highlight an important role of documentation in the project\n\nWe ran multiple mentorship programs with 12 mentees in total: Google Summer of Code, Hacktoberfest and Outreachy\n\nIf you are interested to know more about Jenkins features introduced in 2019,\nstay tuned for a separate blog post about it (coming soon!).\n\nProject updates\n\nHighlights above do not cover all advancements we had in the project.\nBelow you can find slides from the Jenkins contributor summit in Lisbon.\nThere we had project updates by officers, SIG and sub-project leaders.\nSee the slide deck to know about: Jenkins Core, Pipeline, Configuration-as-Code, Security, UX Overhaul, Jenkins Infrastructure, platform support and documentation.\n\nSome stats and numbers\n\nIf this section seems to be too long for you, here is some infographic prepared by Tracy Miranda.\nAs you may see, Jenkins is pretty big :)\n\nCommunity.\nOver the past year we had 5433 contributors in GitHub repositories (committers, reviewers, issue submitters, etc.).\nWe had 1892 unique committers who created 7122 pull requests and 45484 commits, bots excluded.\nContributors represent 273 companies and 111 countries, 8% of contributors are recognized as independent.\nThe most active repositories were Jenkins Core and jenkins.io.\nThe most active month was October 2019 when we reached the record high number of contributions: 915 unique contributors, 124 of them were first-timers, thanks to Hacktoberfest!.\n\nJenkins core.\nIn 2019 Jenkins core had 54 weekly and 13 LTS releases with several hundreds of notable fixes/enhancements.\nThere was a login screen extensibility rework, many update manager and administrative monitors improvements.\nWe also introduced support for user timezones, not speaking of emojis support 🥳.\nThere was also a lot of housekeeping work: better APIs, codebase refresh, cleaning up static analysis warnings and removing deprecated features like Remoting CLI.\nThe core’s components also got major updates.\nOnly Jenkins Remoting got 11 releases with stability improvements and new features like support of inbound connections to headless Jenkins controllers.\nThere are also major incoming features like jep:222[WebSocket Services support], UI look&feel updates, jira:JENKINS-12548[Readonly system configuration support], Docker images for new platforms like Arm.\nTo facilitate further changes we created a new Core pull request reviewers team and added 9 contributors there.\n\nPlugins.\nThere were 2654 plugin releases, and 157 NEW plugins have been hosted in the Update Center.\nJenkins ecosystem got a lot of new integrations with Development and DevOps tools.\nAlso, warm welcome back to the Scriptler Plugin which was depublished in 2017 due to security issues.\nIf you are afraid about such plugin numbers and dependency management, there is a new Plugin Installation Manager CLI Tool which should help Jenkins users to manage plugins more efficiently.\n\nSecurity.\nIt was a hot year for the Jenkins Security Team.\nThere were 5 security advisories for the core and 20 - for plugins.\nIn total we disclosed 288 vulnerabilities across the project, including some backlog cleaning for unmaintained plugins.\nScript Security Plugin was the hottest plugin with 10 critical fixes addressing various sandbox bypass vulnerabilities.\nPlain text storage and unprotected credentials were the most popular vulnerability type 120 disclosures in 2019.\nIt was made possible by hundreds of reports submitted by contributors after code surveys,\nspecial thanks to Viktor Gazdag who reported the most of the issues and became the Jenkins 2019 Security MVP (check out his story here).\n\nInfrastructure.\nGot Jenkins? If so, you rely on Jenkins update centers, website and issue tracker.\nAll these and many other services are maintained by the Jenkins Infrastructure Team.\nThis year the team handled more than 400 requests in the bugtracker, and many other informal requests.\nIn total, more than 30 people contributed to Jenkins infrastructure this year (website content is excluded).\nWe also deployed 4 new services, migrated 7 services from Azure Container Service to Azure Kubernetes Service and updated many other services.\nMore changes will happen in the next months, and we are looking for new INFRA team members!\n\nDocumentation.\nOnly last quarter we had 178 contributors to Jenkins documentation. It includes jenkins.io and other documentation hosted on GitHub, Wiki is not included.\nThere is also ongoing migration plugin documentation from Jenkins Wiki to GitHub ( announcement).\nSince the beginning of the project in Sep 2019, more than 150 plugin were migrated, and they got significant documentation revamp during the migration.\nYou can see the current status here.\nWe also work on introducing changelog automation in the project.\n123 plugins have already adopted the new changelog tools, powered by Release Drafter.\nAlso, we had more than 60 technical blog posts published on jenkins.io.\n\nConfiguration as Code was one of the most popular areas this year.\nJenkins Configuration as Code Plugin had more than 30 releases with new features and bug fixes.\nMore than 50 plugins have been also updated in order to offer better configuration-as-code support.\nAs a result, the JCasC Plugin got massive adoption this year (from 2000 to almost 8000 installations),\nand now it becomes a de-facto standard for managing Jenkins as code.\nThis year we also ran our very first CommunityBridge project devoted to JCasC Schema validation and developer tools.\n\nEvents and outreach programs.\nIn 2019 we participated in multiple conferences, including FOSDEM, DevOps World | Jenkins World, SCALE.\nMore than 40 Jenkins Area Meetups were organized across the world, and there were many other meetups devoted to Jenkins.\nWe also kept expanding our outreach programs.\nIn total we had 12 students who participated in Google Summer of Code, Outreachy and newly introduced Community Bridge.\nWe also had the biggest ever Hacktoberfest with 664 pull requests and 102 participants.\nThese outreach programs help us to deliver new features in Jenkins.\nFor example, this year we added Multi-branch Pipeline support for Gitlab and a new Plugin Installation Manager Tool during GSoC,\nand Outreachy resulted in a new Audit Log Plugin.\n\nWhere did we get those stats?\nGitHub stats came from the CDF DevStats service.\nThese stats include all repositories in the jenkinsci organization and most popular repositories in jenkins-infra, Jenkins X and other organizations/repositories within the project are not included.\nOther stats came from project reports, component changelogs, Jenkins usage statistics service, plugin releases history.\n\nWhat’s next?\n\nYear 2020 will be pretty busy for the Jenkins project.\nThere are many long-overdue changes in the project, which need to happen if we want the project to succeed.\nAs it was written Board elections blogpost,\nthere are many areas to consider: UX revamp, cloud native Jenkins, pluggable storage, etc.\nIn the coming months there will be a lot of discussions in mailing lists and special interest groups,\nand we invite all teams to work on their roadmaps and to communicate them in the community.\n\nNext month we will participate in FOSDEM, and there will be a Jenkins stand there.\nOn January 31st we will also host a traditional contributor summit in Brussels,\nwhere we will talk about next steps for the project, in terms of technical roadmaps and the project governance.\nIf you are interested in Jenkins, stop by at our community booths and join us at the summit!\nSee this thread for more information.\n\nWe also plan to continue all outreach programs.\nAt the moment we are looking for Google Summer of Code 2020 mentors and project ideas ( announcement),\nand we will be also interested to consider non-coding projects as a part of other programs like CommunityBridge.\nWe also work on improving contribution guidelines for newcomers and expert contributors.\nIf you are interested, please contact the Advocacy and Outreach SIG.\n\nAnd even more\n\nThis blog post does not provide a full overview of what changed in the project.\nThe Jenkins project consists of more than 2000 plugins and components which are developed by thousands of contributors.\nThanks to them, a lot of changes happen in the project every day.\nWe are cordially grateful to everybody who participates in the project, regardless of contribution size.\nEverything matters: new features, bug fixes, documentation, blog posts, well reported issues, Stackoverflow responses, etc.\nTHANKS A LOT FOR ALL YOUR CONTRIBUTIONS!\n\nSo, keep updating Jenkins and exploring new features.\nAnd stay tuned, there is much more to come next year!","title":"Happy New Year! 2019/2020 edition","tags":["community","new-year-blogpost","governance"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev/","twitter":"oleg_nenashev"}]}},{"node":{"date":"2019-12-16T00:00:00.000Z","id":"0695b632-9d61-5e3b-8e0a-2ff9637b97ae","slug":"/blog/2019/12/16/board-election-results/","strippedHtml":"The Jenkins community has recently completed the 2019 elections for Board and Officer positions.\nThe call for nominations concluded on Nov 25 and the election results were announced in the developer mailing list on Nov 28.\n\nOn behalf of the Jenkins community, we congratulate all elected board members and officers!\nWe also thank all contributors who participated this year: all nominees and hundreds of voters.\nThese are the first elections ever conducted by the Jenkins project, and it is a big milestone for the community.\n\nElection results:\n\nUllrich Hafner, Alex Earl and Oleg Nenashev will join Kohsuke Kawaguchi and R. Tyler Croy on the Jenkins Governance Board\n\nDaniel Beck was elected as Security Officer\n\nAlyssa Tong was elected as Events Officer\n\nNominations for Infrastructure, Release and Documentation officer positions were uncontested.\n\nOlivier Vernin was elected as Infrastructure Officer (uncontested)\n\nOliver Gondža was elected as Release Officer (uncontested)\n\nMark Waite was elected as Documentation Officer (uncontested)\n\nIf you are interested to learn more, please see the blog post below.\n\nBoard election details\n\nThe voting results are:\n\nOleg Nenashev (Condorcet winner: wins contests with all other choices)\n\nMark Waite loses to Oleg Nenashev by 181–127\n\nUllrich Hafner loses to Oleg Nenashev by 198–115, loses to Mark Waite by 171–133\n\nAlex Earl loses to Oleg Nenashev by 225–82, loses to Ullrich Hafner by 168–128\n\nOliver Gondža loses to Oleg Nenashev by 227–76, loses to Alex Earl by 151–136\n\nZhao Xiaojie (aka Rick) loses to Oleg Nenashev by 233–82, loses to Oliver Gondža by 160–131\n\nAlthough Mark Waite came second in the voting results, being on the board would violate the Corporate Involvement clause which states that \"the number of board members affiliated with one company must be less than 50%\".\nBased on that rule, the third seat Alex Earl will join the Jenkins board.\nAt the same time, Mark Waite will take the newly introduced role of Documentation officer.\n\nAll new board members are elected for a 2-year term, unless they step down earlier.\nThe estimated end of term for them is December 02, 2021.\nThe actual date will depend on the election schedule in 2021.\n\nOfficer election details\n\nWe have reelected all 5 officers for the new 1-year term, with the estimated end of term on Dec 02, 2020.\n\nAlyssa Tong won the biggest support as an Events officer ( voting results)\n\nDaniel Beck won the biggest support as a Security officer ( voting results)\n\nWhen an officer position has only one candidate that is willing to accept the nomination, there is no reason to vote on that position.\nThis year some nominees declined the nominations before the election happened, and 3 officer nominations were finally uncontested:\nOlivier Vernin - infrastructure officer,\nOliver Gondža - release officer,\nMark Waite - documentation officer.\n\nStatistics\n\nHere are some voting stats from these elections:\n\nTotal number of eligible accounts: 91,015\n\nTotal number of registered voters: 831\n\nTotal number of votes: 343\n\nThis election was hosted on the Condorcet Internet Voting Service (CIVS).\nWhile preparing for the elections, we discovered that CIVS is unable to support our large number of eligible voters.\nWe created a voter registration system to identify voters and then registered those voters with CIVS.\nThe workaround required a slight voting delay.\nSpecial thanks to Olivier Vernin and Tracy Miranda who made it possible!\n\nWhat’s next for the board?\n\nIn short term, the renewed board will focus on running the Jenkins governance processes (meetings, budget approvals, funding, etc.) and defining next steps towards improving the project.\nOne of the priorities will be to organize knowledge and permission transfers to new board members so that they can be effective in their new roles.\nThere are also pending activities like Jenkins' transition to Continuous Delivery Foundation which require attention from board members.\n\nFor longer term, there are some ideas floating around:\n  roadmap for key components,\n  long-anticipated architecture changes (UX revamp, pluggable storage, cloud native Jenkins),\n  adopting Linux Foundation best practices like Core Infrastructure Initiative,\n  contributor onboarding,\n  etc.\nSuch initiatives are instrumental for further evolvement of the Jenkins project,\nand the board could help to facilitate them in the community.\nThe ideas will be discussed in mailing lists and during governance meetings.\nIf you would like to share your vision and ideas about what’s needed in the project,\nit is definitely a great time to do so!\n\nFeedback\n\nWe will also also plan to conduct a public retrospective at one of the next Advocacy and Outreach SIG meetings.\n\nJenkins project plans to conduct elections every year.\nWe appreciate and welcome any feedback regarding the election process.\nPlease use the following channels for feedback and suggestions:\n\nThere is a Retrospective document in Google Docs.\nEveryone can suggest changes in this document, and we will integrate them.\n\nFor ideas about the project improvements and next steps for the board,\nplease use the Jenkins Developers mailing list.\n\nFor private feedback, please send an email to the Jenkins Board or to Tracy Miranda.\n\nReferences\n\nJenkins Governance Board\n\nJenkins Board Election Process\n\nJenkins Officers\n\n2019 election announcement\n\n2019 election updates on Nov 08\n\nRetrospective document","title":"2019 Jenkins Board and Officer Elections Results","tags":["community","governance","governance-board","elections"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev/","twitter":"oleg_nenashev"}]}},{"node":{"date":"2019-11-25T00:00:00.000Z","id":"726986a7-4dcd-5c99-8b23-e199566c8eea","slug":"/blog/2019/11/25/macos-native-installer-deprecation/","strippedHtml":"In addition to WAR files and Docker images, the Jenkins project provides native installers for each weekly and LTS release.\nThere are installers available for Linux distributions, Windows, macOS and other operating systems.\nThere are also installers provided by third parties.\nYou can find the list of these installers on the Downloads page.\n\nIn this blog post, we announce the upcoming deprecation of the macOS native installer.\nWe will review the replacement options and the rollout plan.\n\nWhy?\n\nMaintaining installers is a significant maintenance effort for the project\nbecause installers require testing and, sometimes, specific platforms and environments for packaging.\nWhen installers lose relevance for the majority of the Jenkins audience, we remove them or handover maintenance to third parties on other areas.\nFor macOS, there are currently two types of packages: native installers with GUI for desktop versions and Homebrew packages.\nSince Homebrew is now a defacto standard package manager for macOS users, from the Jenkins standpoint it made sense to deprecate the native installers.\n\nWhy now?\nThere is ongoing work on automating Jenkins Core releases within the Jenkins infrastructure.\nLong story short, we are moving Jenkins release pipelines to Kubernetes on Microsoft Azure.\nThis environment does not offer macOS machines that are needed to produce native installers.\nIf you are interested to know more, there will be a How Jenkins Builds and Delivers Jenkins in the Cloud talk presented by Olivier Vernin at DevOps World | Jenkins World 2019 Europe in Lisbon (use the JWFOSS code for a 30% discount!).\n\nWe could have used an external service for building macOS installers,\nbut it would have added an additional point of failure and implementation/maintenance overhead.\nSo we discussed it in the developer mailing list and agreed that it is better to just deprecate and then remove the packages.\n\nReplacing native installers\n\nIn the case of macOS, there are two main alternatives available: managing the service manually or migrating to Homebrew packages.\nBefore doing a migration, we highly recommend backing up your instance.\n\nManaging Jenkins with WAR file on macOS\n\nIf your Jenkins instance was previously set up with a native installer,\nto update Jenkins it will be enough to replace the jenkins.war file in the installation directory and restart the instance.\nThe services will keep running as it was configured before the migration.\nThe default installation directory is /Applications/Jenkins/jenkins.war\n\nManaging Jenkins with Homebrew\n\nInstalling Jenkins with Homebrew is a way to go for those who want to install Jenkins using a package manager.\nThere are two Homebrew formulas for Jenkins: jenkins for Weekly releases and jenkins-lts for LTS ones.\nThese packages are supported by a third party (Homebrew community),\nand they may be not as frequently updated as packages supported by the Jenkins project directly.\n\nBefore doing a migration from macOS Native installers to HomeBrew, please make sure to backup your Jenkins instance.\nThere are no automatic migration tools available, and the installation may corrupt your JENKINS_HOME or service configuration files in edge cases.\n\nIf you switch to Homebrew, you will need to properly migrate the JENKINS_HOME data to the new location.\nWe do not provide an official migration guide, but it is possible to find some guidelines on the Web.\n\nSample commands:\n\nInstall the latest Weekly version: brew install jenkins\n\nInstall a specific Weekly version: brew install jenkins@YOUR_VERSION\n\nStart the Jenkins service: brew services start jenkins\n\nRestart the Jenkins service: brew services restart jenkins\n\nUpdate the Jenkins version: brew upgrade jenkins\n\nFor more information see the documentation for Homebrew packages on the macOS Download pages.\n\nRollout plan\n\nmacOS native packaging is considered as deprecated starting from Jenkins 2.206 and Jenkins LTS 2.204.1\n\nFor Jenkins Weekly macOS native packaging will be removed with the switch to the new Jenkins release flow.\nThe exact date is to be determined.\n\nAfter the change, there will be no macOS native installers produced for new Jenkins Weekly releases\n\nReleases for previous versions will be available in this archive\n\nFor Jenkins LTS macOS will be removed with the switch to the new Jenkins release flow in the LTS baseline.\nThis change will happen only after the deployment of the new release flow in Jenkins Weekly.\n\nAfter the switch, there will be no macOS native installers produced for new Jenkins LTS releases\n\nReleases for previous versions will be available in this archive\n\nSee the discussion on the developer mailing list for more information.\n\nQuestions and feedback\n\nIf you have any questions or want to provide feedback, please use the developer mailing list thread mentioned above Platform SIG channels (chat, google group).\nAny feedback will be much appreciated because we plan more installer/ and platform deprecations in the future.","title":"Jenkins macOS native installer deprecation","tags":["announcement","deprecation","macos","platform-sig","platforms"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev/","twitter":"oleg_nenashev"}]}}]}},"pageContext":{"author":"oleg_nenashev","limit":8,"skip":8,"numPages":6,"currentPage":2}},
    "staticQueryHashes": ["3649515864"]}