{
    "componentChunkName": "component---src-templates-author-blog-list-template-js",
    "path": "/blog/authors/oleg_nenashev/page/3",
    "result": {"data":{"author":{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"},"allBlog":{"edges":[{"node":{"date":"2019-11-25T00:00:00.000Z","id":"726986a7-4dcd-5c99-8b23-e199566c8eea","slug":"/blog/2019/11/25/macos-native-installer-deprecation/","strippedHtml":"In addition to WAR files and Docker images, the Jenkins project provides native installers for each weekly and LTS release.\nThere are installers available for Linux distributions, Windows, macOS and other operating systems.\nThere are also installers provided by third parties.\nYou can find the list of these installers on the Downloads page.\n\nIn this blog post, we announce the upcoming deprecation of the macOS native installer.\nWe will review the replacement options and the rollout plan.\n\nWhy?\n\nMaintaining installers is a significant maintenance effort for the project\nbecause installers require testing and, sometimes, specific platforms and environments for packaging.\nWhen installers lose relevance for the majority of the Jenkins audience, we remove them or handover maintenance to third parties on other areas.\nFor macOS, there are currently two types of packages: native installers with GUI for desktop versions and Homebrew packages.\nSince Homebrew is now a defacto standard package manager for macOS users, from the Jenkins standpoint it made sense to deprecate the native installers.\n\nWhy now?\nThere is ongoing work on automating Jenkins Core releases within the Jenkins infrastructure.\nLong story short, we are moving Jenkins release pipelines to Kubernetes on Microsoft Azure.\nThis environment does not offer macOS machines that are needed to produce native installers.\nIf you are interested to know more, there will be a How Jenkins Builds and Delivers Jenkins in the Cloud talk presented by Olivier Vernin at DevOps World | Jenkins World 2019 Europe in Lisbon (use the JWFOSS code for a 30% discount!).\n\nWe could have used an external service for building macOS installers,\nbut it would have added an additional point of failure and implementation/maintenance overhead.\nSo we discussed it in the developer mailing list and agreed that it is better to just deprecate and then remove the packages.\n\nReplacing native installers\n\nIn the case of macOS, there are two main alternatives available: managing the service manually or migrating to Homebrew packages.\nBefore doing a migration, we highly recommend backing up your instance.\n\nManaging Jenkins with WAR file on macOS\n\nIf your Jenkins instance was previously set up with a native installer,\nto update Jenkins it will be enough to replace the jenkins.war file in the installation directory and restart the instance.\nThe services will keep running as it was configured before the migration.\nThe default installation directory is /Applications/Jenkins/jenkins.war\n\nManaging Jenkins with Homebrew\n\nInstalling Jenkins with Homebrew is a way to go for those who want to install Jenkins using a package manager.\nThere are two Homebrew formulas for Jenkins: jenkins for Weekly releases and jenkins-lts for LTS ones.\nThese packages are supported by a third party (Homebrew community),\nand they may be not as frequently updated as packages supported by the Jenkins project directly.\n\nBefore doing a migration from macOS Native installers to HomeBrew, please make sure to backup your Jenkins instance.\nThere are no automatic migration tools available, and the installation may corrupt your JENKINS_HOME or service configuration files in edge cases.\n\nIf you switch to Homebrew, you will need to properly migrate the JENKINS_HOME data to the new location.\nWe do not provide an official migration guide, but it is possible to find some guidelines on the Web.\n\nSample commands:\n\nInstall the latest Weekly version: brew install jenkins\n\nInstall a specific Weekly version: brew install jenkins@YOUR_VERSION\n\nStart the Jenkins service: brew services start jenkins\n\nRestart the Jenkins service: brew services restart jenkins\n\nUpdate the Jenkins version: brew upgrade jenkins\n\nFor more information see the documentation for Homebrew packages on the macOS Download pages.\n\nRollout plan\n\nmacOS native packaging is considered as deprecated starting from Jenkins 2.206 and Jenkins LTS 2.204.1\n\nFor Jenkins Weekly macOS native packaging will be removed with the switch to the new Jenkins release flow.\nThe exact date is to be determined.\n\nAfter the change, there will be no macOS native installers produced for new Jenkins Weekly releases\n\nReleases for previous versions will be available in this archive\n\nFor Jenkins LTS macOS will be removed with the switch to the new Jenkins release flow in the LTS baseline.\nThis change will happen only after the deployment of the new release flow in Jenkins Weekly.\n\nAfter the switch, there will be no macOS native installers produced for new Jenkins LTS releases\n\nReleases for previous versions will be available in this archive\n\nSee the discussion on the developer mailing list for more information.\n\nQuestions and feedback\n\nIf you have any questions or want to provide feedback, please use the developer mailing list thread mentioned above Platform SIG channels (chat, google group).\nAny feedback will be much appreciated because we plan more installer/ and platform deprecations in the future.","title":"Jenkins macOS native installer deprecation","tags":["announcement","deprecation","macos","platform-sig","platforms"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2019-10-21T00:00:00.000Z","id":"b2fe0751-2a13-5720-ba79-3c07e09417b5","slug":"/blog/2019/10/21/plugin-docs-on-github/","strippedHtml":"In September 2019 we announced\nsupport of GitHub as a source of documentation for the Jenkins Plugin Site.\nThanks to Zbynek Konecny and Olivier Vernin and other contributors,\nnow it is possible to store plugin documentation right inside plugin repositories instead of Jenkins Wiki which was historically difficult to maintain for plugin maintainers and for the Jenkins infrastructure team.\n\nThis blogpost may be interesting to plugin maintainers and to those who want to contribute to the Jenkins documentation.\nI will describe how to migrate plugin documentation to GitHub and to get pages like this one:\n\nWhy?\n\nBy using plugin GitHub repositories for documentation,\nplugin maintainers can follow the Documentation-as-code approach and make documentation changes a part of the pull requests so that documentation follow-ups do not get forgotten.\nIt also gives an opportunity to review the documentation changes and to add documentation contributor recognition, especially if the story is combined with Release Drafter.\n\nUnfortunately, before September 2019 usage of GitHub documentation was causing some issues.\nFirst of all, many plugin maintainers have already moved their documentation to GitHub, and it caused fragmentation of the documentation (Wiki, GitHub, jenkins.io).\nTo address it, plugin maintainers still had to maintain stub Wiki pages with redirects,\nand users had to spend some time to find out where the real documentation is located.\nBy supporting GitHub as a documentation source, we allow maintainers to phase out the plugin Wiki pages while improving the user experience.\n\nAnd there are even more pressing reasons to do the migration now…​\nIf you are subscribed to the developer mailing list,\nyou may have also seen an announcement by R. Tyler Croy about Jenkins Wiki stability issues\nand making it read-only as a temporary measure to stabilize the instance\n( mailing list thread).\nAlthough the functionality has been partially restored afterwards,\nthere is a consensus in the Infrastructure team that we should gradually move to alternate solutions.\n\nExamples\n\nSince the announcement in September, more than 50 plugins were moved from Wiki to GitHub.\nFew examples:\n\nConfiguration as Code Plugin\n\nMailer Plugin\n\nGradle Plugin\n\nRole Strategy Plugin\n\nHow to enable GitHub documentation for your plugin?\n\nConvert documentation from Wiki to GitHub Asciidoc or Markdown format if you have not done it yet.\n\nIt can be easily done in a semi-automatic way using Jenkins Wiki Exporter\n\nSee the guidelines\nhere.\n\nChange the field in pom.xml so that it points to GitHub\n( guide).\n Examples of valid links:\n\nhttps://github.com/jenkinsci/mailer-plugin - plugin site will use GitHub REST API to extract README\n\nhttps://github.com/jenkinsci/ssh-credentials-plugin/blob/master/doc/README.md - extraction of a plugin page from a custom location\n\nOptional: Add badges to the page to improve look&feel and to provide quick links for users.\nThere are standard badges for changelogs, chats, plugin site, and installation numbers.\n\nExample for Markdown\n\nExample for Asciidoc\n\nRelease the new plugin version\n\nWait a few hours till the change propagates.\nAfter that, the Jenkins Plugin Site will show the new documentation from GitHub.\n\nWhat’s next?\n\nThe story is tracked as jira:WEBSITE-406[] which is a part of the wider subproject for using GitHub as a source of data for the Jenkins plugin site and update managers (jira:WEBSITE-637[]).\nLater steps include support showing changelogs from GitHub releases, pulling plugin tags from GitHub, showing plugin logos, and using Repository Permission Updater as a source of the maintainer information.\n\nHow to contribute?\n\nOctober is a great time to contribute!\nPlugin documentation is one of the featured projects for Hacktoberfest,\nand we will welcome all contributions to the documentation and to the codebase.\n\nContributing to Documentation\n\nWe are looking for contributors who are interested to improve plugin documentation and to help us with migration from Wiki to GitHub.\nFor dozens of plugins the documentation is already in GitHub,\nand you are welcome to submit pull requests against any repository.\n\nMigrating documentation:\n\nMigrating plugin documentation from Wiki to GitHub\n\nMoving documentation from Jenkins Wiki to jenkins.io\n\njira:JENKINS-59467[Template issue for plugin docs migration]\n\nNewbie-friendly documentation tasks\n\nIf you have any questions about contributing to the documentation,\nplease see this page or reach out to us in the Docs SIG Gitter chat.\n\nCode contributions\n\nWould you like to write some code in Java or JavaScript?\nOr would you like to work on CSS styles and improve Jenkins design?\nIn such case you are welcome to contribute to the Jenkins Plugin Site.\nIt is our own plugin marketplace implementation, and we invite contributions to this area.\nThe plugin site is really easy to develop.\n\njira:WEBSITE-637[] - EPIC for Plugin site and GitHub integrations\n\njenkins-infra/plugin-site - Frontend (JavaScript, React, XSS, YARN)\n\njenkins-infra/plugin-site-api - Plugin site API and Docker packaging (Java, Maven, Docker)\n\nUseful links\n\nPlugin Documentation\n\nJenkins Plugin Site\n\nJenkins Wiki Exporter tool","title":"Plugin Documentation-as-Code: Moving docs to GitHub","tags":["hacktoberfest","developer","documentation","wiki","contributors"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2019-10-01T00:00:00.000Z","id":"352e9ec4-8e30-52da-98d7-ee02d21defd4","slug":"/blog/2019/10/01/hacktoberfest/","strippedHtml":"Once again, Hacktoberfest is back!\nDuring this October event, everyone can support open-source by contributing changes, and can earn limited edition swag.\nWe invite you to contribute to Jenkins, regardless of your experience and background.\nYou can write code, improve documentation and design, localize Jenkins or create new artwork.\nAny GitHub pull request counts!\n\nQuick start\n\nSign-up to Hacktoberfest on the event website.\n\nJoin our Gitter channel.\n\nEverything is set, just start creating pull-requests!\n\nThis year Hacktoberfest does not require labeling pull requests,\nbut please mention Hacktoberfest in your pull requests for faster reviews\n(see FAQ: Marking Pull requests)\n\nSee the details below.\n\nHow to contribute?\n\nThere are many ways to\ncontribute to Jenkins.\nIt is not just about code, any pull request in GitHub counts towards the Hacktoberfest goal.\n\nCode - Contribute to the code or automated tests.\nWe have components written in Java, JavasScript, Groovy, Go, Ruby and other languages.\n\nWrite - Improve documentation, write blogposts, create tutorials or solution pages\n\nLocalize - Help us to Localize Jenkins to other languages\n\nDesign - artwork and UI improvements also count!\n\nOrganize - Organize a local meetup for Jenkins & Hacktoberfest (see our event kit)\n\nSpread the word - Share your accomplishments in social media using the #hacktoberfest and #jenkinsci hashtags\n(or CC @jenkinsci in Twitter).\n\nWhere to contribute?\n\nThe Jenkins project is spread across multiple organizations on GitHub (jenkinsci, jenkins-infra, jenkins-zh).\nYou are welcome to contribute to any repository in any of these organizations,\nor to any other Jenkins-related repository on GitHub.\nIf you adopt Jenkins in your own open-source projects (e.g. Jenkins Pipeline or Configuration as Code),\nit counts as well! Some useful queries:\n\nJenkins JIRA issues suggested for Hacktoberfest\n\nGitHub issues suggested for Hacktoberfest\n\nNewbie-friendly issues in Jenkins JIRA\n\nGood first issues on GitHub\n\nFeatured projects. If you are a newcomer contributor, we have prepared a list of projects/components where you will get a warm welcome.\nAll these projects have newbie-friendly tasks, contributing guidelines, and active maintainers\nwho have committed to assist contributors and to quickly review pull requests.\nThe list of featured projects will be updated during the event,\nand we will make sure to create more newbie-friendly tasks if needed.\n\nIf you wonder about Jenkins X, it also part of Hacktoberfest this year!\nThey offer various topics, including hacking Jenkins X or improving its documentation.\nSee this blogpost for the announcement and links.\n\nHow to get help?\n\nIf you are stuck or have any question,\nsee our Hacktoberfest FAQ page for the common questions.\nIf it does not help, please reach out to us in our Gitter chat.\n\nAny meetups this year?\n\nThere are many events being organized by open-source communities.\nYou can join one of these events.\nWe invite to join the Jenkins Online Meetups on Oct 03\n ( APAC/EMEA - 7AM UTC,\nEMEA/Americas - 2PM UTC).\n\nThere will be also area meetups in Munich, Beijing, St. Petersburg and other cities.\nYou can find the full list here.\n\nUseful links\n\nHacktoberfest website\n\nHacktoberfest in Jenkins\n\nOur Gitter channel\n\nFrequently asked questions\n\nContributing to Jenkins\n\nHave a great hacking time!","title":"Hacktoberfest 2019. Contribute to Jenkins!","tags":["hacktoberfest","event","community","newcomer","outreach-programs"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2019-03-04T00:00:00.000Z","id":"d85f9019-be6e-5fed-9a43-5cc4d0781ec3","slug":"/blog/2019/03/04/gsoc2019-announcement/","strippedHtml":"On behalf of the Jenkins GSoC org team,\nI am happy to announce that the Jenkins project has been accepted to\nGoogle Summer of Code 2019.\nThis year we invite students and mentors to join the Jenkins community and work together\non enhancing the Jenkins ecosystem.\n\nJust to provide some numbers, this is the biggest GSoC ever, 206 organizations will participate in GSoC this year.\nAnd it will be hopefully the biggest year for Jenkins as well.\nWe have 25 project ideas\nand more than 30 potential mentors (and counting!).\nIt is already more than in 2016 and 2018 combined.\nThere are many plugins, SIGs and sub-projects which have already joined GSoC this year.\nAnd we have already received messages and first contributions from dozens of students, yey!\n\nWhat’s next?\nGSoC is officially announced, and please expect more students to contact projects in our\nGitter channels and mailing lists.\nMany communications will also happen in SIG and sub-project channels.\nWe will be working hard in order to help students to find interesting projects, to explore the area,\nand to prepare their project proposals before the deadline on April 9th.\nThen we will process the applications, select projects and assign mentor teams.\n\nAll information about the Jenkins GSoC is available on its sub-project page.\n\nI am a student. How do I apply?\n\nSee the Information for students page for full application guidelines.\n\nWe encourage interested students to reach out to the Jenkins community early and to start exploring project ideas.\nAll project ideas have chats and mailing lists referenced on their pages.\nWe will be also organizing office hours for students,\nand you can use these meetings to meet org admins and mentors and to ask questions.\nAlso, join our Gitter channel and the\nmailing list\nto receive information about such incoming events in the project.\n\nThe application period starts on March 25th, but you can prepare now!\nUse the time before the application period to discuss and improve your project proposals.\nWe also recommend that you become familiar with Jenkins and start exploring your proposal areas.\nProject ideas include quick-start guidelines and reference newbie-friendly issues\nwhich may help with initial study.\nIf you do not see anything interesting,\nyou can propose your own project idea\nor check out ideas proposed by other organizations\nparticipating in GSoC.\n\nI want to be a mentor. Is it too late?\n\nIt’s not!\nWe are looking for more project ideas and for Jenkins contributors/users\nwho are passionate about Jenkins and want to mentor students.\nNo hardcore experience required, mentors can study the project internals together with students and technical advisors.\nWe are especially interested in ideas beyond the Java stack, and in ideas focusing new technologies and areas\n(e.g. Kubernetes, IoT, Python, Go, whatever).\n\nYou can either propose a new project idea or join an existing one.\nSee the Call for Mentors post\nand Information for mentors for details.\nIf you want to propose a new project,\nplease do so by March 11th so that students have time to explore them and to prepare their proposals.\n\nThis year mentorship does NOT require strong expertise in Jenkins development.\nThe objective is to guide students and to get involved into the Jenkins community.\nGSoC org admins will help to find advisers if special expertise is required.\n\nImportant dates\n\nMar 11 - deadline for new GSoC project idea proposals\n\nApr 09 - deadline for student applications\n\nMay 06 - accepted projects announced, teams start community bonding and coding\n\nAug 26 - coding period ends\n\nSep 03 - Results announced\n\nSee the GSoC Timeline for more info.\nIn the Jenkins project we will also organize special events during and after GSoC (e.g. at Jenkins world).","title":"Jenkins is accepted to Google Summer Of Code 2019!","tags":["gsoc","gsoc2019","events","community"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-12-14T00:00:00.000Z","id":"cc052415-dba7-5a62-91d8-3f6906f485d9","slug":"/blog/2018/12/14/java11-preview-availability/","strippedHtml":"Please refer to Running Jenkins on Java 11 documentation to have the up-to-date details on how to run Jenkins on Java 11.\n\nThis is a joint blogpost prepared by the Java 11 Support Team.\nOn Dec 18 (4PM UTC) we will be also presenting the Java 11 Preview Support at the Jenkins Online Meetup\n( link)\n\nJenkins, one of the leading open-source automation servers, still supports only Java 8.\nOn September 25 OpenJDK 11 was released.\nThis is a Long-Term-Support which will stay around for years,\nand in the Jenkins project we are interested to offer a full support of this version.\nOver the last year many contributors have been working towards enabling support for Java 11 in the project (Jenkins JEP-211).\nIt was a thorny path,\nbut now, on behalf of the Jenkins Platform SIG,\nwe are happy to announce preview availability of Java 11 support in Jenkins weekly releases!\n\nWhy do we need preview availability for Java 11?\nIt offers Jenkins contributors and early adopters a way\nto try out the changes before the general availability release happens early next year.\nIt should help us to get more exploratory testing and, hopefully,\nresolve most of the issues before Java 11 is officially supported in Jenkins.\n\nIn this blog post we will describe how to run with Java 11,\nand how to investigate compatibility issues and report them.\n\nBackground\n\nAs you probably remember,\nin June 2018 we had an online hackathon targeting Java 10+ support in Jenkins.\nAs a part of the hackathon,\nwe provided the experimental support of Java 11.\nThis event was a big success for us,\nand we were able to get Jenkins running with Java 10 and 11-ea,\nincluding major features like Jenkins Pipeline, JobDSL, Docker/Kubernetes plugins, Configuration as Code, BlueOcean, etc.\nIt gave us confidence that we can provide Java 11 support in Jenkins without major breaking changes.\nAfter the hackathon, Oleg Nenashev created\njep:211[\"Java 10+ support in Jenkins\"] (was later adjusted to target Java 11 only).\nPlatform Special Interest Group\nhas been also founded to coordinate the Java 11 support work\nand other platform support efforts (packaging, operating system support, etc.).\n\nA group of contributors continued working on Java 11 support,\nmostly focusing on upstreaming functional patches,\nenabling Java 11 support in development tools,\ntesting and addressing known compatibility issues.\nSee the Platform SIG meeting notes for detailed status updates.\nStarting from Jenkins 2.148, Jenkins successfully runs with latest OpenJDK 11 releases on various Linux and Windows platforms.\nWe performed a LOT of automated and exploratory tests, Jenkins plugins appear to work well with some exceptions (see below).\nThere is ongoing test automation effort towards the GA releases,\nbut we were able to successfully run Jenkins core tests,\nfull Acceptance Test Harness,\nand Plugin Compat Tester for recommended plugins.\nWe also deployed a temporary\nExperimental Update Center for Java 11\nwhich allows quickly delivering fixes for Java 11 early adopters.\nJenkins 2.155+ defaults to this update center when running with Java 11,\nand that’s why we announce preview availability for this version.\n\nOn Nov 19, 2018 we presented the current Java 11 support status at the Platform SIG meeting\nslides,\nand we agreed that we would like to proceed with the preview availability so that\nwe can offer something for evaluation to Jenkins users.\nBy the next meeting on Dec 04, all blockers have been addressed,\nand the Platform SIG meeting signed off the Java 11 preview availability.\n\nRunning Jenkins and Java 11 in Docker\n\nStarting from Jenkins 2.155, we provide Docker images for the Jenkins controller and agent.\nAll these images are based on the official\nopenjdk:11-jdk image maintained by the Docker Community.\nThere were discussions about migrating to other base images,\nbut we decided to exclude it from the Preview Availability scope.\nSimilarly, we do not provide Alpine images for now.\n\nJenkins controller image\n\nJava 11 support is now provided as a part of the official\njenkins/jenkins image.\nYou can run the Jenkins with Java 11 simply as:\n\ndocker run -p 8080:8080 -p 50000:50000 jenkins/jenkins:jdk11\n\nThe following tags are available:\n\njdk11 - Latest weekly release with Java 11 support\n\n2.155-jdk11 - Weekly releases packaged with Java 11\n\nThe image is fully compatible with\njenkins/jenkins documentation,\ne.g. you can use plugins.txt to install plugins, mount volumes and pass extra options via environment variables.\n\nAgent images\n\nIf you use containerized agents via Docker or Kubernetes plugins,\nwe have also released official Docker images for Jenkins agents:\n\njenkins/agent\n\njenkins/inbound-agent\n\njenkins/ssh-build-agent\n\nAll images use the latest-jdk11 image tag for JDK11 bundles.\nAnd sorry for the obsolete names!\n\nExperimental Jenkins controller images\n\nIn order to simplify testing, we also provide some experimental images on DockerHub.\nWe set up a continuous delivery flow for them,\nso you can get patches without waiting for Jenkins weekly releases.\n\njenkins4eval/blueocean-platform-support -\nEquivalent of jenkinsci/blueocean\n\nTag: latest-jdk11\n\nThe image bundles all Jenkins Pipeline and Blue Ocean patches required to run on Java 11\n\nIf you want to try Pipeline, use this image\n\njenkins/jenkins-experimental -\nEquivalent of jenkins/jenkins\n\nTag: latest-jdk11\n\nThe image is released from the java11-support feature branch in the Jenkins core\n\nThe branch may be slightly ahead or behind the master branch,\nwe may use the branch to quickly deliver patches to Java 11 users\n\nEventually we will move the experimental flow to the new jenkins4eval organization\nbeing created as a part of jep:217[].\n\nRunning jenkins.war with Java 11\n\nRunning without Docker is not that trivial,\nbecause Jenkins depends on some modules which have been removed from Java 11.\nWe plan to address it in the General Availability release somehow (see jira:JENKINS-52186[]),\nbut for now some manual actions are required to run Jenkins WAR with Java 11.\n\nDownload Jenkins WAR for 2.155\n\nDownload the following libraries to the same directory as jenkins.war\n\njaxb-api-2.3.0.jar (save as jaxb-api.jar)\n\njaxb-core-2.3.0.1.jar (save as jaxb-core.jar)\n\njaxb-impl-2.3.0.1.jar (save as jaxb-impl.jar)\n\njavax.activation v.1.2.0 (save as javax.activation.jar)\n\nRun the following command:\n\nRun Jenkins with ${JAVA11_HOME}/bin/java \\\n    -p jaxb-api.jar:javax.activation.jar --add-modules java.xml.bind,java.activation \\\n    -cp jaxb-core.jar:jaxb-impl.jar \\\n    -jar jenkins.war --enable-future-java --httpPort=8080 --prefix=/jenkins\n\nKnown compatibility issues\n\nTo help users to track down the compatibility issues,\nwe have created a new Known Java 11 Compatibility Issues Wiki page.\n\nSeveral important issues and obstacles:\n\nPipeline: Support Plugin has a known issue\nwith context persistency when running with Java 11 (jira:JENKINS-51998[])\n\nWe have deployed a temporary fix to the\nExperimental Update Center for Java 11.\n Fix version: 3.0-java11-alpha-1\n\nIf you use Jenkins Pipeline, make sure you run with this fix.\nOtherwise the jobs will fail almost immediately\n\nWhen updating instances to Java 11, make sure there is no running Pipelines\n\njira:JENKINS-54305[] -\nJDK Tool Plugin does not offer installers for JDK 11\n\njira:JENKINS-52282[] -\nJava Web Start is no longer available in Java 11, so it is no longer possible to start agents from Web UI.\nWe do not plan to provide a replacement.\n\nWe also know about some minor incompatibilities in other plugins,\nbut we do not consider them as blockers for preview availability.\n\nReporting compatibility issues\n\nIf you discover any Java 11 incompatibilities, please\nreport issues in our bugtracker.\nPlease set java11-compatibility labels for such issues\nso that they automatically appear on the Wiki page and get triaged.\n\nFor the security issues please use the standard\nvulnerability reporting process.\nAlthough we will be fixing Java 11 specific issues in public while it is in the preview,\nfollowing the security process will help us to investigate impact on Java 8 users.\n\nJava 11 Support Team\n\nOnce Java 11 support is released, we expect reports of regressions in plugins and Jenkins core.\nOne of the concerns are exotic platforms with native libraries, and of course other Java versions.\nThere is also a risk of 3rd-party library incompatibilities with Java 11.\nTo mitigate the risks, we have created a\nJava 11 Support Team.\nThis team will be focusing on triaging the incoming issues,\nhelping to review pull requests and, in some cases, delivering the fixes.\nThe process for this team is documented in JEP-211.\n\nWe do not expect the Java 11 Support Team to be able to fix all discovered issues,\nand we will be working with Jenkins core and plugin maintainers to get the fixes delivered.\nIf you are interested to join the team,\nreach out to us in the Platform SIG Gitter Channel.\n\nContributing\n\nWe will appreciate any kind of contributions in the Java 11 effort,\nincluding trying out Jenkins with Java 11, reporting and fixing compatibility issues.\n\nIf you want to do the exploratory testing,\nwe recommend to try out Java 11 support at one of your test instances.\nSuch testing will be much appreciated,\nespecially if you use some service integration plugins or exotic platforms.\nThe issue reporting guidelines are provided above\n\nIf you are a plugin developer/maintainer,\nwe would appreciate if you could test your plugin with Java 11.\nIn order to help with that, we have created a Wiki page with\nJava 11 Developer guidelines.\nThis page explains how to build and test plugins with Java 11,\nand it also lists known issues in development tools\n\nWhatever you do, please let us know about your experience by sending a message to\nthe Platform SIG mailing list.\nSuch information will help us a lot to track changes and contributions.\nAny other feedback about the migration complexity will be appreciated!\n\nWhat’s next?\n\nOn Dec 18 (4PM UTC) we will be presenting the Java 11 Preview Support at the Jenkins Online Meetup\n( link).\nAt this meetup we will summarize the current Java 11 Preview support status.\nIf you are a plugin developer, we will also organize separate sessions about testing plugins with Java 11 and about common best practices for fixing compatibility issues.\nPlease follow the Platform SIG announcements if you are interested.\n\nIn the next weeks we will focus on addressing feedback from early adopters and\nfixing the discovered compatibility issues.\nWe will also continue working on Java 11 support patches towards the general availability next year (jira:JENKINS-51805[]).\nIn addition to that, we will start working on Java 11 support in subprojects,\nincluding Jenkins X and Jenkins Evergreen.\n\nLinks\n\nJEP-211: Java 11 support in Jenkins\n\nJava requirements in Jenkins\n\nKnown Java 11 Compatibility Issues\n\nJava 11 Developer guidelines\n\nPlatform Special Interest Group","title":"Java 11 Support Preview is available in Jenkins 2.155+","tags":["core","developer","java11","community","platform-sig"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-10-16T00:00:00.000Z","id":"2abe9d0a-5a91-57f9-b708-13a0a890774b","slug":"/blog/2018/10/16/custom-war-packager/","strippedHtml":"I would like to introduce Custom WAR Packager -\na new tool for Jenkins administrators and developers.\nThis tool allows packaging custom Jenkins distributions as WAR files,\nDocker images\nand Jenkinsfile Runner bundles.\nThis tool allows packaging Jenkins, plugins, and configurations in a ready-to-fly distribution.\nCustom WAR packager is a part of the Ephemeral Jenkins controller toolchain\nwhich we presented in our A Cloud Native Jenkins blogpost.\nThis toolchain is already used in Jenkins X to package serverless images.\n\nIn this blogpost I will show some common use-cases for Custom WAR Packager.\n\nHistory\n\nAs with Jenkins itself, Custom WAR Packager started as a small development tool.\nFor a long time it was a problem to run integration testing in Jenkins.\nWe have 3 main frameworks for it:\nJenkins Test Harness,\nAcceptance Test Harness,\n    and Plugin Compatibility Tester.\nAll these frameworks require a Jenkins WAR file to be passed to them to run tests.\nWhat if you want to run Jenkins tests in a custom environment like AWS?\nOr what if you want to reuse existing Jenkins Pipeline tests and to run them against\nPluggable Storage to ensure there are no regressions?\n\nAnd it was not just an idle question.\nThere were major activities happening in the Jenkins project: Cloud-Native Jenkins, Jenkins Evergreen, and Jenkins X.\nAll these activities required a lot of integration testing  to enable Continuous Delivery flows.\nIn order to do this in existing test frameworks, we needed to package a self-configuring WAR file so that it would be possible to run integration tests in existing frameworks.\nThat is why Custom WAR Packager was created in April 2018.\nLater it got support for packaging Docker images,\nand in September 2018 it also got support for Jenkinsfile Runner\nwhich was created by Kohsuke Kawaguchi\nand then improved by Nicolas de Loof.\n\nWhat’s inside?\n\nCustom WAR packager is a tool which is available as CLI Executable, Maven Plugin, or Docker package.\nThis tool takes input definitions and packages them as requested by the user.\nEverything is managed by a YAML configuration file:\n\nThe tool supports various types of inputs.\nThe list of plugins can be passed via YAML itself, pom.xml, or a BOM file from jep:309[].\nCustom WAR Packager supports not only released versions,\nbut also builds deployed to the Incremental repository (CD flow for Jenkins core and plugins - jep:305[]) and\neven direct builds by Git or directory path specifications.\nIt allows building packages from any source, without waiting for official releases.\nThe builds are also pretty fast, because the plugin does caching in the local Maven repository by using commit IDs.\n\nCustom WAR packager also supports the following self-configuration options:\n\nYAML files for Jenkins Configuration as Code\n\nGroovy Hooks (e.g. init hooks for pre-configuration)\n\nSystem properties\n\nWAR Packaging\n\nWAR packaging happens by default every time the repo is built.\nGenerally Custom WAR Packager repackages all inputs into a single WAR file by following conventions defined in the Jenkins core and the JCasC plugin.\n\nSample configuration:\n\nbundle:\n  groupId: \"io.jenkins.tools.war-packager.demo\"\n  artifactId: \"blogpost-demo\"\n  vendor: \"Jenkins project\"\n  description: \"Just a demo for the blogpost\"\nwar:\n  groupId: \"org.jenkins-ci.main\"\n  artifactId: \"jenkins-war\"\n  source:\n    version: 2.138.2\nplugins:\n  - groupId: \"io.jenkins\"\n    artifactId: \"configuration-as-code\"\n    source:\n      # Common release\n      version: 1.0-rc2\n  - groupId: \"io.jenkins\"\n    artifactId: \"artifact-manager-s3\"\n    source:\n      # Incrementals\n      version: 1.2-rc259.c9d60bf2f88c\n  - groupId: \"org.jenkins-ci.plugins.workflow\"\n    artifactId: \"workflow-job\"\n    source:\n      # Git\n      git: https://github.com/jglick/workflow-job-plugin.git\n      commit: 18d78f305a4526af9cdf3a7b68eb9caf97c7cfbc\n  # etc.\nsystemProperties:\n    jenkins.model.Jenkins.slaveAgentPort: \"9000\"\n    jenkins.model.Jenkins.slaveAgentPortEnforce: \"true\"\ngroovyHooks:\n  - type: \"init\"\n    id: \"initScripts\"\n    source:\n      dir: src/main/groovy\ncasc:\n  - id: \"jcasc\"\n    source:\n      dir: casc.yml\n\nDocker packaging\n\nIn order to do the Docker packaging, Custom WAR Packager uses the official\njenkins/jenkins\nDocker images or other images using the same format.\nDuring the build the WAR file just gets replaced by the one built by the tool.\nIt means that ALL image features are available for such custom builds: plugins.txt, Java options, Groovy hooks, etc., etc.\n\n## ...\n## WAR configuration from above\n## ...\n\nbuildSettings:\n  docker:\n    build: true\n    # Base image\n    base: \"jenkins/jenkins:2.138.2\"\n    # Tag to set for the produced image\n    tag: \"jenkins/custom-war-packager-casc-demo\"\n\nFor example, this demo\nshows packaging of a Docker image with External Build Logging to Elasticsearch.\nAlthough the implementations have been improved as a part of jep:207[] and jep:210[],\nyou can check out this demo to see how the Docker image does self-configuration, connects to a Elasicsearch, and then starts externally storing logs without changes in build log UIs.\nA Docker Compose file for running the entire cluster is included.\n\nJenkinsfile Runner packaging\n\nThis is probably the most tricky mode of Jenkinsfile Runner.\nIn March a new Jenkinsfile Runner project\nwas announced in the developer mailing list.\nThe main idea is to support running Jenkins Pipeline in a single-shot controller mode when the instance just executes a single run and prints outputs to the console.\nJenkinsfile Runner runs as CLI or as a Docker image.\nCustom WAR Packager is able to produce both, though only Docker run mode is recommended.\nWith Jenkinsfile Runner you can run Pipelines simply as…​\n\ndocker run --rm -v $PWD/Jenkinsfile:/workspace/Jenkinsfile acmeorg/jenkinsfile-runner\n\nWhen we started working on Ephemeral (aka \"single-shot\") controllers in the Cloud Native SIG,\nthere was an idea to use Custom WAR Packager and other existing tools (Jenkinsfile Runner, Jenkins Configuration as Code, etc.) to implement it.\nIt would be possible to just replace Jenkins core JAR and add plugins to Jenkinsfile Runner, but it is not enough.\nTo be efficient, Jenkinsfile Runner images should start up FAST, really fast.\nIn the build flow implementation we used some experimental options available in Jenkins and Jenkinsfile Runner, including classloader precaching, plugin unarchiving, etc, etc.\nWith such patches Jenkins starts up in few seconds with configuration-as-code and dozens of bundled plugins.\n\nSo, how to build custom Jenkinsfile Runner images?\nAlthough there is no release so far, it is not something which can stop us as you see above.\n\n##...\n## WAR Configuration from above\n##...\n\nbuildSettings:\n  jenkinsfileRunner:\n    source:\n      groupId: \"io.jenkins\"\n      artifactId: \"jenkinsfile-runner\"\n      build:\n        noCache: true\n      source:\n        git: https://github.com/jenkinsci/jenkinsfile-runner.git\n        commit: 8ff9b1e9a097e629c5fbffca9a3d69750097ecc4\n    docker:\n      base: \"jenkins/jenkins:2.138.2\"\n      tag: \"onenashev/cwp-jenkinsfile-runner-demo\"\n      build: true\n\nYou can find a Demo of Jenkinsfile Runner packaging with Custom WAR Packager\nhere.\n\nMore info\n\nThere are many other features which are not described in this blogpost.\nFor example, it is possible to alter Maven build settings or to add/replace libraries within the Jenkins core (e.g. Remoting).\nPlease see the Custom WAR Packager documentation for more information.\nThere are a number of demos available in the repository.\n\nIf you are interested to contribute to the repository,\nplease create pull requests and CC @oleg-nenashev\nand Raul Arabaolaza who is the second maintainer now working on Jenkins test automation flows.\n\nWhat’s next?\n\nThere are still many improvements that could be made to the tool to make it more efficient:\n\nAdd upper bounds checks for transitive plugin dependencies so that the conflicts are discovered during the build\n\nAllow passing all kinds of system properties and Java options via configuration YAML\n\nImprove Jenkinsfile Runner to improve performance\n\nIntegrate the tool into Jenkins Integration test flows\n(see essentialsTest()\nin the Jenkins Pipeline library)\n\nMany other tasks could be implemented in Custom WAR Packager,\nbut even now it is available to all Jenkins users so that they can build their own Jenkins bundles with it.\n\nWant to know more?\n\nIf you are going to DevOps World - Jenkins World in Nice on Oct 22-25,\nI will be presenting Custom WAR Packager at the Community Booth during the lunch demo sessions.\nWe will be also repeating our A Cloud Native Jenkins talk together with Carlos Sanchez where we will show how Ephemeral Jenkins works with Pluggable Storage.\nJenkins X team is also going to present their project using Custom WAR Packager.\n\nCome meet Oleg and other Cloud Native SIG members at\nDevOps World - Jenkins World on October 22-25 in Nice.\nregister with the code JWFOSS for a 30% discount off your pass.","title":"Build your own Jenkins! Introducing Custom WAR/Docker Packager","tags":["tools","docker","jenkins-x","cloud-native"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-10-14T00:00:00.000Z","id":"c5377da5-1ab5-51ab-994c-510bae06a710","slug":"/blog/2018/10/14/gsoc2018-results/","strippedHtml":"It has been a while since the last blogpost about Google Summer of Code in Jenkins.\nGSoC 2018 has officially finished on August 23, and we had a Jenkins Online Meetup where we had final presentations of the GSoC projects.\nIt is never late to provide more context, so I would like to summarize the results and provide updates of what was happening in Jenkins GSoC Special Interest Group over last 2 months.\nIn this blogpost you can find project status overviews and updates from the Jenkins GSoC SIG.\n\nBut first of all, I would like to thank all our students, their mentors\nand to all other contributors who proposed project ideas, participated in student selection, community bonding and further reviews.\nGoogle Summer of Code is a major effort which would not be possible without active participation of the Jenkins community\n\nSummary\n\nThis year we started preparing for Google Summer of Code in early December.\n14 project ideas and 12 potential mentors we published on our website,\nand we got dozens of students reaching out to us during the application period.\nAfter processing applications, we have selected 4 applications for GSoC.\nUnfortunately one project got cancelled due to student eligibility issues.\n\nSo, we had the following projects:\nCode Coverage API plugin, Remoting over Apache Kafka, and Simple Pull-Request Job Plugin\n(also known as Pipeline as YAML).\nAll these projects have a significant value to the Jenkins community.\nThey were focused on areas which have been discussed in the community for a long time,\nbut which had no progress so far.\nGoogle Summer of Code allowed us to kick-start these projects,\nand to make significant progress there.\nAll projects have been released and made available in the Jenkins community (common or experimental update centers).\n\nIn total there were 9 blogposts about GSoC projects on jenkins.io,\nand also 2 Jenkins Online Meetups.\nGSoC results have been also presented at DevOps World - Jenkins World conference and the contributor summit.\n\nCode Coverage API Plugin\n\nStudent: Shenyu Zheng, Henan University, China\n\nMentors:\nJeff Pearce,\nSteven Christou,\nOleg Nenashev,\nSupun Wanniarachchi\n\nProject page\n\nThere are many code coverage plugins in Jenkins: Cobertura, JaCoCo, Emma, etc., etc.\nThe problem with these plugins is that each of them implements all code coverage features on their own.\nSo you get different feature sets, UIs, CLI commands and REST APIs.\nThe idea of this project was to unify the existing functionality and offer a new API plugin which other plugins could extend.\nIt would help to simplify existing plugin and to create new plugins for coverage tools.\n\nThe project has started really well, and we had the first demo after a week of coding.\nThen Shenyu continued extending the plugin’s functionality over coding periods.\nHere is the list of the key features offered by the plugin:\n\nFlexible data structure for defining and storing coverage metrics within Jenkins\n\nCoverage charts and trends\n\nSource code navigation\n\nREST API for retrieving coverage stats and trends\n\nReport aggregation for parallel steps\n\nExtension points which allow integrating other plugins\n\nIn addition to the Code Coverage API Plugin,\nShenyu added integration to the Cobertura Plugin and also created a new llvm-cov plugin which is expected to be released soon.\n\nAfter GSoC Shenyu continued contributing to the Jenkins project.\nHe works on the Code Coverage API plugin and also participates in the Chinese Localization SIG.\n\nSimple Pull-Request Job Plugin\n\nStudent: Abhishek Gautam, Visvesvaraya National Institute of technology, India\n\nMentors:\nMartin d’Anjou,\nJeff Knurek,\nKristin Whetstone\n\nProject page\n\nThis project focused on introducing a way to\neasily define pull-request build job definitions in YAML.\nThis project has been shaped a lot during the application period and community bonding,\nso that the project fit the existing Jenkins Ecosystem better.\nFinally it was decided to build the new plugin on the top of Pipeline: Multi-Branch Plugin.\nThere was also an idea to offer extra syntax sugar, templating and automatic resolution for common flows,\nso that users need less time to define Pipelines for common use-cases.\n\nThe plugin allows defining Pipeline jobs as YAML being stored in SCM.\nOriginal design presumed a new job type,\nbut during community bonding and Phase 1 prototyping it was decided to build the plugin on the top of the existing Pipeline ecosystem and extension points.\nCurrently the plugin generates Declarative Pipeline code from YAML so that it gets a lot of Pipeline features out-of-the box.\nIn addition to that, Simple Pull Request Job Plugin uses a an engine provided by the Configuration as Code plugin to convert YAML snippets\nto Pipeline step definitions.\n\nThe plugin has been well described by Abhishek in his Pipeline as YAML blogpost in August.\nCurrently it is available in the Experimental Update Center as an alpha version.\nPham Vu Tuan, one of our GSoC students, have also joined the plugin team.\nAt the DevOps World - Jenkins World hackfest we had discussions with the Jenkins Pipeline team,\nand we have a plan towards making this plugin available as an Incubated Pipeline project.\nThe final implementation may change,\nbut in any case the project gave us a working prototype and a lot of information about  obstacles we need to resolve.\n\nRemoting over Apache Kafka\n\nStudent: Pham Vu Tuan, Nanyang Technological University, Singapore\n\nMentors:\nOleg Nenashev,\nSupun Wanniarachchi\n\nProject page\n\nLast but not least, Remoting over Kafka is another challenging project we had.\nTo implement communication between its controllers and agents, Jenkins widely uses home-grown protocol implementations based on TCP\n( JNLP 1..4 protocols).\nThere are some performance and stability implementations,\nand there have been discussions about using an industry-standard message bus or queue.\nPham Vu Tuan proposed to use Apache Kafka for it,\nand after some experiments during community bonding and first coding phase we agreed to go forward with this implementation.\n\nDuring his project Vu Tuan extended Jenkins Core and Remoting to allow implementing an agent communication channel in a plugin.\nThen he has created a new Remoting over Kafka plugin\nwhich is now available in the main Jenkins Update cente.\nOnce the plugin is installed, it is possible to connect to agents over Apache Kafka and execute all types of Jenkins jobs there.\nThere are also official jenkins/remoting-kafka-agent images available on DockerHub.\n\nVu Tuan continued contributing to the Jenkins project after GSoC, currently he maintains the Remoting over Kafka plugin.\nHe visited the DevOps World - Jenkins World US conference in September, presented his GSoC project at the\nJenkins Contributor Summit.\nYou can find his slides here.\nAfter the conference he also participated in the hackfest where he helped to migrate Jenkins' DNS services to Microsoft Azure.\n\nWhat could we do better?\n\nAfter the end of GSoC we had a Retrospective with GSoC students and mentors.\nWe discussed the issues we encountered during the projects,\nand ways to improve the student and mentor experience.\n\nMain takeaways for us:\n\nGSoC projects should be aligned with Jenkins Special Interest Groups (SIGs) or subprojects in order to get a wider list of stakeholders\nProjects should be aligned with SIG priorities when possible\n\nIn addition to GSoC SIG meetings and Jenkins Online Meetups during student evaluation,\nwe should also run regular status updates within SIGs so that there more contributors involved in projects\n\nWe should invest more time into forming mentor teams before the application period starts.\nThis year there were changes in mentor teams after the community bonding started, and it complicated the work\n\nWe should pay more attention to student eligibility.\nThis year we started from 4 projects, but unfortunately one project (EDA plugins for Jenkins) got cancelled due to the visa limitations the student had.\n\nWe should do regular office hours for mentors/students so that it is possible to exchange information between GSoC projects within the organization.\nThis year we cancelled them at the end of phase and relied only on regular project meetings and mailing lists, but this is not enough.\n\nFor me personally the main takeaway is also to reduce direct involvement into the project as a mentor and technical advisor.\nDoing org administration, logistics and mentorship is not good from a bus factor PoV,\nand I believe I was pushing my vision too hard in few cases.\nWill do my best to prevent it next year.\n\nIf you want to share your feedback and ideas,\nplease reach out to us using the GSoC mailing list.\n\nWhat’s next?\n\nIn order to improve GSoC organization in Jenkins,\nwe have have created a GSoC Special Interest Group which will be running non-stop as other SIGs in Jenkins.\nThe objective of the SIG is to organize GSoC, work with potential students/mentors,\nand to help students stay involved in the community after GSoC ends.\nIn this SIG we will have monthly meetings to sync-up on GSoC.\nIf you are interested to contribute, please join the SIG.\n\nAccording to the Retrospective, next year we plan to invest more\ninto communication with mentors.\nWe will also try to tie new project proposals to Jenkins\nSpecial Interest Groups so that the students become a part\nof ongoing coordinated efforts.\nThis weekend Martin d’Anjou, Jeff Pearce and me are participating in the GSoC Mentor summit to share experiences and to study from other GSoC organizations.\nOn October 17 we will have a GSoC SIG meeting to discuss our experience and to discuss next steps.\n\nIn addition to that,\nJenkins Google Summer of Code will be presented at DevOps World - Jenkins World Nice and at the contributor summit.\nIf you plan to visit the conference and you are interested to participate in Google Summer of Code and other community activities,\nplease join us at the contributor summit or stop by at the community booth.\n\nAnd, elephant in the room…​ GSoC 2019.\nOf course we are going to apply, stay tuned for new announcements.\nWe have already started collecting project ideas for the next year.\nIf you are interested to participate as a student or mentor,\nplease reach out to us using the GSoC SIG mailing list.","title":"Jenkins in Google Summer of Code 2018 Results","tags":["community","events","gsoc","gsoc2018"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-10-12T00:00:00.000Z","id":"ea880537-4dfa-5cf5-9dbd-1aa35b08242b","slug":"/blog/2018/10/12/hackathons-in-october/","strippedHtml":"Traditionally there are a lot of events happening in the Jenkins organization in Autumn.\nI would like to share some information about the upcoming hackathons.\n\nOnline Event: Hacktoberfest\n\nAs you probably know, there is an ongoing Hacktoberfest event.\nThe Jenkins project is participating in it and everybody is welcome to contribute to Jenkins as a part of this event.\nThe event lasts from October 01 to October 31,\nand you can can join it at any time.\n\nSee this blogpost for more information about Hacktoberfest in the Jenkins project.\n\nOnsite Hackathons\n\nHacktoberfest is not the only event happening in the Jenkins community this month,\nthere are also a number of upcoming on-site events:\n\nOct 19 - Copenhagen, Denmark\n\nJenkins Configuration as Code hackathon at\nDay of Jenkins [as code ]\n\nRegistration: all conference participants can attend\n\nOct 22 - Nice, France - Hackathon at\nDevOps World - Jenkins World Nice\n\nRSVP here\n\nMake sure to also attend the Jenkins Contributor Summit on Oct 23 ;)\n\nOct 27 - Beijing, China\n\nRSVP here\n\nOct 30 - Neuchatel, Switzerland - Hacktoberfest: Jenkins & Friends event (Swiss Jenkins Area meetup)\n\nRSVP here\n\nAll contributions during these in-person events qualify as\nHacktoberfest contributions as well. :)\nMore events will also be announced later in the year,\ne.g. we traditionally do a hackfest in Brussels after FOSDEM in February.\nFollow our developer mailing lists and social media to receive announcements.","title":"Jenkins Hackathons in October","tags":["events","community","hacktoberfest"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}}]}},"pageContext":{"author":"oleg_nenashev","limit":8,"skip":16,"numPages":6,"currentPage":3}},
    "staticQueryHashes": ["3649515864"]}