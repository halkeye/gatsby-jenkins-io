{
    "componentChunkName": "component---src-templates-author-blog-list-template-js",
    "path": "/blog/authors/oleg_nenashev/page/4",
    "result": {"data":{"author":{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"},"allBlog":{"edges":[{"node":{"date":"2018-09-12T00:00:00.000Z","id":"25b519ed-5da4-5f9a-a173-6ea9a343b90a","slug":"/blog/2018/09/12/speaker-blog-a-cloud-native-jenkins/","strippedHtml":"A few months ago I published a\nblog post about\nCloud Native Special Interest Group (SIG)\nand ongoing projects related to Cloud Native Jenkins.\nNext week we will be presenting at DevOps World | Jenkins World together with Carlos Sanchez and Jesse Glick,\nso I would like to provide a heads up for\nour talk: “A Cloud Native Jenkins”.\n\nIn our talk, we will focus on the following topics: Pluggable Storage,\nour ephemeral Jenkins controllers experiments,\nand tools which may be used to implement single-shot controllers.\n\nPluggable Storage\n\nPluggable storage is one of the major areas we have been working on over the last few months.\nThere are a number of parallel stories which are summarized on\nthis page.\nThere has been significant progress in the areas of artifact storage, build logging and configuration storage.\nA number of Jenkins Enhancement Proposals were submitted and accepted,\nand there are plugin releases and prototypes for these stories.\n\nDuring our talk we will discuss the current status of these stories and future plans.\nIn particular, we will cover the following areas and reference implementations:\n\nStoring all your artifacts transparently, e.g. in a cloud service blob store like AWS S3.\n\nArtifact Manager for S3 Plugin is an implementation we have recently released\n\nProviding credentials from an external location.\n\nKubernetes Credentials Provider is one of the existing implementations for Kubernetes secrets\n\nSending and retrieving the build logs from a cloud service.\n\nWe are working on reference implementations for AWS CloudWatch Logs and\nElasticsearch\n\nStoring configuration data in external storage like Kubernetes Resources and SQL database\n\nStoring test results externally, e.g. in an SQL database or a specialized Test Management System\n\nThere are existing plugins for the areas above, but there is a difference in approach we have taken.\nInstead of creating new custom steps we extend Jenkins architecture in a way that the storage becomes transparent to users.\nFor example, with Artifact Manager for S3 Plugin common Archive Artifacts steps\nwork transparently with Remote storage, as well as Jenkins Pipeline’s stash() / unstash() steps.\n\nThe reference implementations intentionally use different technologies so that we cover more scenarios.\nWe regularly discuss the implementations in the Cloud Native SIG,\nand we would appreciate your feedback.\n\nEphemeral Jenkins controllers research\n\nWant something new?\nSeveral days ago Kohsuke Kawaguchi, the creator of Jenkins, posted the\nJenkins: Shifting Gears article to summarize the plan for Jenkins evolution.\nCloud Native Jenkins is a critical part of this plan, and it is not “just Jenkins X”.\nThere are various architectural changes in Jenkins required to make this vision happen,\nand we plan to work on these changes in the Cloud Native SIG.\n\nIn our presentation, we will talk about our experiment with ephemeral Jenkins and single-shot controllers.\nIn this story we are creating a headless single-shot controller which starts in a container,\nexecutes a Pipeline build and pushes all the results to remote storage so that the container can just be deleted after completion.\nSuch a controller bundles plugins and self-configuration logic using “Configuration as Code”,\nso that it can start executing Pipelines in just a few seconds.\nOnce packaged, it can be invoked from CLI as simply as…​\n\ndocker run --rm -v $PWD/demo/Jenkinsfile:/workspace/Jenkinsfile onenashev/cwp-jenkinsfile-runner-demo\n\nor, in Kubernetes:\n\nkubectl create configmap jenkinsfile --from-file=demo/Jenkinsfile\nkubectl create -f demo/kubernetes.yaml\n\nSuch a single-shot controller could also be made a part of a Cloud Native Jenkins system.\nStandard event handlers like Prow can invoke the builds on webhooks and report results back,\nso that the single-shot controller can be used to build pull requests or to run Continuous Delivery flows.\nExtra agents could also be connected to the controller on-demand, using the Kubernetes plugin or sidecar containers.\n\nTools\n\nIn order to make this experiment possible, we used a toolchain based on\nDocker,\nJenkinsfile Runner,\nConfiguration as Code Plugin (JCasC), and a\nCustom WAR Packager tool which glues all the things together.\n\nCustom WAR Packager is a new tool which takes various configurations (YAML specification defining core version, list of plugins, system properties, Groovy Hooks, JCasC YAMLs)…​\nand then bundles everything as a ready-to-fly WAR file or Docker image.\nStarting from version 1.2, Custom WAR Packager also supports packaging Jenkinsfile Runner images as an experimental feature.\nI will do a separate blogpost about this new tool later,\nbut there is already some documentation a number of demos in the project’s repo.\n\nOur demo\n\nYes, we will have a demo! We will show a single-shot controller running with Pluggable storage implementations for AWS environments (Amazon S3, AWS CloudWatch, EKS, etc.),\nwhich executes Jenkins Pipelines for Maven projects and provisions agents in Kubernetes on-demand.\n\nThe demo has to be published yes, but you can already find a more simple Jenkinsfile Runner demo\nhere.\n\nWant to know more?\n\nThe upcoming DevOps World | Jenkins World conferences\nare heavily packed with talks related to Cloud Native Jenkins,\nincluding war stories and presentations on projects like Jenkins X and Jenkins Evergreen.\nIt is a great chance to get more information about using Jenkins in cloud environments.\n\nIf you are a Jenkins contributor or just want to become a contributor,\nalso join the Contributor Summit (Sep 17 in US and Oct 23 in Nice) or visit the Jenkins community booth in the Exhibition hall.\nAt the Contributor Summit on Sep 17 we will also have a face-to-face Cloud Native SIG meeting.\nFeel free to contribute to the agenda here.\n\nCome meet Carlos, Jesse, Oleg, and other Cloud Native SIG members at\nJenkins World on September 16-19th in San Francisco and on October 22-25 in Nice.\nregister with the code JWFOSS for a 30% discount off your pass.","title":"Speaker blogpost: A Cloud Native Jenkins","tags":["jenkinsworld","jenkinsworld2018","cloud-native","pluggable-storage","jenkinsfile-runner"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-07-30T00:00:00.000Z","id":"3f5d0df0-bf7b-55f9-bbfe-fd861133015d","slug":"/blog/2018/07/30/introducing-cloud-native-sig/","strippedHtml":"On large-scale Jenkins instances controller disk and network I/O become bottlenecks in particular cases.\nBuild logging and artifact storage were one for the most intensive I/O consumers,\nhence it would be great to somehow redirect them to an external storage.\nBack in 2016 there were active discussions about such Pluggable Storage for Jenkins.\nAt that point we created several prototypes, but then other work took precedence.\nThere was still a high demand in Pluggable Storage for large-scale instances,\nand these stories also become a major obstacle for cloud native Jenkins setups.\n\nI am happy to say that the Pluggable Storage discussions are back online.\nYou may have seen changes in the Core for Artifact Storage\n( JEP-202)\nand a new Artifact Manager for S3 plugin.\nWe have also created a number of JEPs for External Logging\nand created a new Cloud Native Special Interest Group (SIG)\nto offer a venue for discussing changes and to keep them as open as possible.\n\nTomorrow Jesse Glick and I will be\npresenting the current External Logging designs at the\nCloud Native SIG online meeting,\nyou can find more info about the meeting here.\nI decided that it is a good time to write about the new SIG.\nIn this blogpost I will try to provide my vision of the SIG and its purpose.\nI will also summarize the current status of the activities in the group.\n\nWhat are Special Interest Groups?\n\nIf you follow the developer mailing list,\nyou may have seen the discussion about introducing SIGs\nin the Jenkins project.\nThe SIG model has been proposed by\nR. Tyler Croy,\nand it largely follows the successful\nKubernetes SIG model.\nThe objective of these SIGs is to make the community more transparent to contributors\nand to offer venues for specific discussions.\nThe idea of SIGs and how to create them is documented in\nJEP-4.\nJEP-4 is still in Draft state, but a few SIGs have been already created using that process:\nPlatform SIG, GSoC SIG and, finally,\nCloud Native SIG.\n\nSIGs are a big opportunity to the Jenkins project,\noffering a new way to onboard contributors who are interested only in particular aspects of Jenkins.\nWith SIGs they can subscribe to particular topics without\nfollowing the entire Developer mailing list which can become pretty buzzy nowadays.\nIt also offers company contributors a clear way how to join community and participate in specific areas.\nThis is great for larger projects which cannot be done by a single contributor.\nLike JEPs, SIGs help focus and coordinate efforts.\n\nAnd, back to major efforts…​\nLack of resources among core contributors was one of the reasons\nwhy we did not deliver on Pluggable Storage stories back in 2016.\nI believe that SIGs can help fix that in Jenkins,\nmaking it easier to find groups with the same interests and\nreach out to them in order to organize activity.\nRegular meetings are also helpful to get such efforts moving.\n\nPoints above are the main reasons why I joined the Cloud Native SIG.\nSimilarly, that’s why I decided to create a Platform SIG\nto deliver on major efforts like Java 10+ support in Jenkins.\nI hope that more SIGs get created soon so that contributors could focus on areas of their interest.\n\nCloud Native SIG\n\nIn the original proposal Carlos Sanchez,\nthe Cloud Native SIG chair, has described the purpose of the SIG well.\nThere has been great progress this year in cloud-native-minded projects like Jenkins X and Jenkins Evergreen,\nbut the current Jenkins architecture does not offer particular\nfeatures which could be utilized there:\nPluggable Storage, High Availability, etc.\nThere are ways to achieve it using Jenkins plugins and some infrastructure tweaks,\nbut it is far from the out-of-the-box experience.\nIt complicates Jenkins management and slows down development of new cloud-native solutions for Jenkins.\n\nSo, what do I expect from the SIG?\n\nDefine roadmap towards Cloud-Native Jenkins architecture\nwhich will help the project to stay relevant for Cloud Native installations\n\nProvide a venue for discussion of critical Jenkins architecture changes\n\nAct as a steering committee for Jenkins Enhancement Proposals in the area of\nCloud-Native solutions\n\nFinally, coordinate efforts between contributors and get new\ncontributors onboard\n\nWhat’s next in the SIG?\n\nThe SIG agenda is largely defined by the SIG participants.\nIf you are interested to discuss particular topics,\njust propose them in the SIG mailing list.\nAs the current SIG page describes,\nthere are several areas defined as initial topics:\nArtifact Storage,\nLog Storage,\nConfiguration Storage\n\nAll these topics are related to the Pluggable Storage Area,\nand the end goal for them is to ensure that all data is externalized\nso that replication becomes possible.\nIn addition to the mentioned data types,\ndiscussed at the Jenkins World 2016 summit,\nwe will need to externalize other data types:\nItem and Run storage,\nFingerprints,\nTest and coverage results,\netc.\nThere is some foundation work being done for that.\nFor example, Shenyu Zheng is working on a\nCode Coverage API plugin\nwhich would allow to unify the code coverage storage formats in Jenkins.\n\nOnce the Pluggable Storage stories are done the next steps are true High Availability, rolling or canary upgrades and zero downtime.\nAt that point other foundation stories like Remoting over Kafka\nby Pham Vu Tuan\nmight be integrated into the Cloud Native architecture to make Jenkins more robust against outages within the cluster.\nIt will take some time to get to this state, but it can be done incrementally.\n\nLet me briefly summarize current state of the 3 focuses listed in the Cloud Native SIG.\n\nArtifact Storage\n\nThere are many existing plugins allowing to upload and download artifacts from external storage\n(e.g. S3, Artifactory, Publish over SFTP, etc., etc.),\nbut there are no plugins which can do it transparently without using\nnew steps.\nIn many cases the artifacts also get uploaded through the controller,\nand it increases load on the system.\nIt would be great if there was a layer which would allow storing artifacts externally\nwhen using common steps like Archive Artifacts.\n\nArtifact storage work was started this spring by Jesse Glick, Carlos Sanchez and\nIvan Fernandez Calvo\nbefore the Cloud Native SIG was actually founded.\nCurrent state:\n\nJEP-202 \"External Artifact Storage\"\nhas been proposed in the Jenkins community.\nThis JEP defines API changes in the Jenkins core which are needed to\nsupport External artifact managers\n\nJenkins Pipeline has been updated to support external artifact storages\nfor archive / unarchive and stash / unstash\n\nNew Artifact Manager for S3 plugin\nreference implementation of the new API.\nThe plugin is available in main Jenkins update centers\n\nA number of plugins has been updated in order to support\nexternal artifact storage\n\nThe Artifact Manager API is available in Jenkins LTS starting from 2.121.1,\nso it is possible to create new implementations using the provided API and\nexisting implementations.\nThis new feature is fully backward compatible with the default Filesystem-based storage,\nbut there are known issues for plugins explicitly relying on artifact locations in JENKINS_HOME\n(you can find a list of such plugins\nhere).\nIt will take a while to get all plugins supported,\nbut the new API in the core should allow migrating plugins.\n\nI hope we will revisit the External Artifact Storage at the SIG meetings at some point.\nIt would be a good opportunity to do a retrospective and to understand how to improve the process\nin SIG.\n\nLog storage\n\nLog storage is a separate big story.\nBack in 2016 External logging was one of the key Pluggable Storage stories we defined at the contributor summit.\nWe created an EPIC for the story ( JENKINS-38313)\nand after that created a number of prototypes together with\nXing Yan and Jesse Glick.\nOne of these prototypes for Pipeline has recently been updated and published\nhere.\n\nJesse Glick and Carlos Sanchez\nare returning to this story and plan to discuss it within the Cloud Native SIG.\nThere are a number of Jenkins Enhancement proposals which have been submitted recently:\n\njep:207[] -\nExternal Build Logging support in the Jenkins Core\n\njep:210[] -\nExternal log storage for Pipeline\n\njep:212[] -\nExternal Logging API Plugin\n\njep:206[] -\nUse UTF-8 for Pipeline build logs\n\nIn the linked documents you can find references to current reference implementations.\nSo far we have a working prototype for the new design.\nThere are still many bits to fix before the final release,\nbut the designs are ready for review and feedback.\n\nThis Tuesday (Jul 31) we are going to have a SIG meeting in order to present the current state and to discuss the proposed designs and JEPs.\nThe meeting will happen at 3PM UTC.\nYou can watch the broadcast using this link.\nParticipant link will be posted in the SIGs Gitter channel 10 minutes before the meeting.\n\nConfiguration storage\n\nThis is one of the future stories we would like to consider.\nAlthough configurations are not big, externalizing them is a critical task\nfor getting highly-available or disposable Jenkins controllers.\nThere are many ways to store configurations in Jenkins,\nbut 95% of cases are covered by the XmlFile layer which\nserializes objects to disk and reads them using the XStream library.\nExternalizing these XmlFile s would be a great step forward.\n\nThere are several prototypes for externalizing configurations,\ne.g. in DotCI.\nThere are also other implementations which could be upstreamed to the Jenkins core:\n\nAlex Nordlund has recently proposed a\npull request\nto Jenkins Core, which should make the XML Storage pluggable\n\nJames Strachan has implemented similar engine\nfor Kubernetes in the kubeify prototype\n\nI also did some experiments with externalizing XML Storages back in 2016\n\nThe next steps for this story would be to aggregate implementations into a single JEP.\nI have it in my queue, and I hope to write up a design once we get more clarity on the External logging stories.\n\nConclusions\n\nSpecial Interest Groups are a new format for collaboration and disucssion in the Jenkins community.\nAlthough we have had some work groups before (Infrastructure, Configuration-as-Code, etc.),\nintroduction of SIGs sets a new bar in terms of the project transparency and consistency.\nMajor architecture changes in Jenkins are needed to ensure its future in the new environments,\nand SIGs will help to boost visibility and participation around these changes.\n\nIf you want to know more about the Cloud Native SIG,\nall resources are listed on the SIG’s page on jenkins.io.\nIf you want to participate in the SIG’s activities, just do the following:\n\nSubscribe to the mailing list\n\nJoin our Gitter channel\n\nJoin our public meetings\n\nI am also working on organizing a face-to-face Cloud Native SIG meeting at the\nJenkins Contributor Summit,\nwhich will happen on September 17 during\nDevOps World | Jenkins World in San Francisco.\nIf you come to DevOps World | Jenkins World,\nplease feel free to join us at the contributor summit or to meet us at the community booth.\nTogether with Jesse and Carlos we are also going to present some bits of our work at the\nA Cloud Native Jenkins talk.\n\nStay tuned for more updates and demos on the Cloud-Native Jenkins fronts!","title":"Introducing Jenkins Cloud Native SIG","tags":["community","sig","cloud-native","cloud-native-sig"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-06-19T00:00:00.000Z","id":"4e634674-53af-534b-ad3d-0fb231791ac9","slug":"/blog/2018/06/19/jenkins-java10-hackathon-day2/","strippedHtml":"This week we have a\nJenkins & Java 10 Online Hackathon.\nThis is an open online event, where we work together on Jenkins core and plugins in order\nto find and fix compatibility issues, share experiences and have some fun.\nEverybody is welcome to join, independently of their Jenkins experience and amount of time they have available.\n\nAfter the kick off on Monday\nJenkins contributors have been working on Java 10 and Java 11 support in Jenkins.\nWe have already received contributions from 12 hackathon participants, and the number keeps growing.\nThere are still 3 days ahead, but we have already achieved some important results we want to share.\n\nJenkins Pipeline\n\nOne of our major efforts over last 2 days was to get Jenkins Pipeline working on\nJava 10+.\nWhen the hackathon started Jenkins Pipeline was not working at all,\nand it was a major blocker for Java support and for exploratory testing in particular.\nWe’ve been working together with Sam van Oort and Devin Nusbaum to fix the libraries in\nthe Jenkins core, Pipeline: Support plugin and Docker packaging.\n\nJust to summarize the result of two days in one screenshot…​\n\nYes, we have got it running!\nOver two days we have got from the \"Pipeline Crashes Immediately\"\nstate to the situation when the most of key Pipeline features are operational,\nincluding Scripted and Declarative Pipeline, Blue Ocean, shared libraries and\ndozens of plugins being used in the Jenkins plugin build flow.\n\nThere is still a lot of work to do to get the changes finalized,\nbut Jenkins Pipeline is available for testing on Java 10 and 11 now.\nIf you want to try it out, you can use a new jenkins/jenkins-experimental:blueocean-jdk10\nimage we have created.\nIt bundles all the required patches, so you can just run the following command to get started:\n\ndocker run -p 8080:8080 -p 50000:50000 jenkins/jenkins-experimental:blueocean-jdk10\n\nIf you want to try more complex scenarions, see the\nRunning Jenkins with Java 10 and 11 blogpost\nand List of Required patches.\n\nWhat else?\n\nAlthough Pipeline is the most visible change,\nthere are other ongoing activities:\n\nDevin Nusbaum explored plugin startup issues we had with JDK 11ea+17\nand confirmed that we need to upgrade our images to JDK 11ea+18\n\nGianpaolo Macario is working on adopting the Java 10 experimental images in his\neasy-jenkins project\n\nSam van Oort and Devin Nusbaum are working on getting plugin build and test flows\nwhen using JDK 10 with Maven\n\nNicolas de Loof is working on cleaning up Illegal reflective access warnings in Jenkins components,\nusing the new Fields micro-library\n\nOlivier Lamy and Nicolas de Loof are updating the\nAnimal Sniffer plugin for Maven\nto make it compatible with Java 9 and above\n\nKohsuke Kawaguchi has released a repackaged version of ASM 6.2 we use in the project\n\nLast but not least, Liam Newman and Tracy Miranda helped us a lot to run the meetings\nand to get this hackathon organized\n\nThere are also other contributors working on exploratory testing and reporting\ndefects they discover.\nSee our status doc\nfor the full list.\n\nWhat’s next?\n\nTomorrow we will have 2 sessions:\n\nAt 8AM UTC we will have a sync-up.\nAccording to the requests from hackathon paticipants, we will have an intro session to Jenkins development for newcomers\n\nYouTube link\n\nAt 4PM UTC we will have a meeting with key JDK Project Jigsaw committers\n\nMark Reinhold, Mandy Chung and Paul Sandoz will join us to talk about\nJava 10/11 adoption\n\nYouTube link\n\nWe will also post participant links in our Gitter channel\n15 minutes before the meetings.\nIf you have any questions, please join the meetings or raise questions in the chat during the call.\n\nCan I still join the hackathon?\n\nYes, you can!\nIt is possible to hop in and hop off at any time.\nJust respond to the registration form,\njoin our Gitter channel and start hacking/testing.\n\nWe also have a number of\nnewbie-friendly issues\nyou can start from.\nSee our Kick-off session and\nslides for quick start guidelines.\n\nLinks\n\nDeveloper mailing list\n\nHackathon sync-up document\n\nRunning Jenkins with Java 10 and 11\n\nJenkins Online Meetup page","title":"Jenkins & Java 10+ Online Hackathon. Day 2 Update","tags":["events","community","developer","java10","java11"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-06-17T00:00:00.000Z","id":"2a47e8d0-b919-50d2-9fe2-b9937f8d85bc","slug":"/blog/2018/06/17/running-jenkins-with-java10-11/","strippedHtml":"Please refer to Running Jenkins on Java 11 documentation to have the up-to-date details on how to run Jenkins on Java 11.\n\nGuidelines in this blogpost are rendered obsolete by the Java 11 Support Preview Availability\nannouncement on Dec 13, 2018 and by the Java 11 GA release on Sep 25, 2018.\nSee the Java support page\nfor up-to-date information about running Jenkins with Java 11.\nThe Jenkins project also no longer ships preview versions for Java 10.\n\nAs you probably know, we will have a\nJenkins and Java 10+ online hackathon this week.\nIn order to enable early adopters to try out Jenkins with new Java versions,\nwe have updated Jenkins core and Docker packages.\nStarting from Jenkins 2.127,\nweekly releases can be launched with Java 10 and Java 11 (preview).\nAlthough there are some known compatibility issues,\nthe packages are ready for evaluation and exploratory testing.\n\nThis article explains how to run Jenkins with Java 10 and 11 using Docker images and WAR files.\nIt also lists known issues and provides contributor guidelines.\n\nRunning in Docker\n\nIn order to simplify testing, we have created a new\njenkins/jenkins-experimental\nrepository on DockerHub.\nThis repository includes various Jenkins Core images, including Java 10 and Java 11 images.\nWe have also set up development branches and continuous delivery flows for Jenkins core,\nso now we can deliver patches for these images without waiting for weekly releases.\n\nYou can run the image simply as:\n\ndocker run -p 8080:8080 -p 50000:50000 jenkins/jenkins-experimental:latest-jdk11\n\nThe following tags are available:\n\n2.127-jdk10, 2.128-jdk10 - Weekly releases packaged with Java 10\n\n2.127-jdk11, 2.128-jdk11 - Weekly releases packaged with Java 11\n\nlatest-jdk10 - Jenkins core build from the java10-support branch\n\nlatest-jdk11 - Automatic build from the core’s java11-support branch.\n\nblueocean-jdk10, blueocean-jdk11 - Experimental build, which bundles all Jenkins Pipeline and\nBlue Ocean patches required to run on Java 11.\nIf you want to try Pipeline, use this image\n\nJava 10/11 images are fully compatible with the official\njenkins/jenkins\nDocker image documentation,\ne.g. you can use plugins.txt to install plugins, mount volumes and pass extra options via environment variables.\n\nRunning Jenkins without Docker\n\nJava 10\n\nDownload Jenkins WAR for 2.127 or above\n(or build the experimental branch)\n\nRun WAR with the following command:\n\n${JAVA10_HOME}/bin/java --add-modules java.xml.bind -jar jenkins.war \\\n    --enable-future-java --httpPort=8080 --prefix=/jenkins\n\nJava 11\n\nDownload Jenkins WAR for 2.127 or above\n(or build the experimental branch)\n\nDownload the following libraries to the same directory as jenkins.war\n\njaxb-api-2.3.0.jar (save as jaxb-api.jar)\n\njaxb-core-2.3.0.1.jar (save as jaxb-core.jar)\n\njaxb-impl-2.3.0.1.jar (save as jaxb-impl.jar)\n\njavax.activation v.1.2.0 (save as javax.activation.jar)\n\nRun the following command:\n\nRun Jenkins with ${JAVA11_HOME}/bin/java \\\n    -p jaxb-api.jar:javax.activation.jar --add-modules java.xml.bind,java.activation \\\n    -cp jaxb-core.jar:jaxb-impl.jar \\\n    -jar jenkins.war --enable-future-java --httpPort=8080 --prefix=/jenkins\n\nCurrent state\n\nAs of June 17, we have achieved the following state:\n\nJenkins 2.127+ starts up successfully with\nOpenJDK 10.0.1 and\nOpenJDK 11+17-Debian-2 (preview)\n\nIt is possible to configure and run simple Freestyle jobs\n\nJenkins agents are able to start on Java 10, to connect to the controller and to execute Freestyle jobs\n\nAgents can be connected using Docker Plugin and Yet Another Docker Plugin\n\nJob DSL plugin works well on demo projects\n\nMaven Integration plugin can build\nplugin-pom -based\nJenkins plugins when running on agents with JDK 8\n\nIt is possible to create Folders and manage items in them\n\nIt is possible to configure Jenkins using Configuration-as-Code plugin\n\nJenkins is able to execute Groovy scripts in Script Console and\nGroovy Hooks\n\nKnown issues\n\nSo far we know about the following issues:\n\nPipeline crashes immediately on Java 10 and 11 ( JENKINS-46602)\n\nWorkaround: Pipeline: Support plugin should be updated to version 3.0-java11-alpha-1-rc684.d802f5d9aeed from the Incrementals repo\n( download)\n\nFIXED - Git Client plugin 2.7.2 cannot be installed when running with Java 11 build 18ea\n\nThere are many warnings about Illegal reflective access during execution\n(linked in JENKINS-40689).\n\nIn current Java 10 and 11 releases it does not lead to failures,\nbut we want to cleanup these warnings anyway\n\nFIXED - Configuration-as-Code plugin fails to export configurations on Java 10\n( JENKINS-51991)\n\nWe anticipate to discover and report more issues during the hackathon this week.\n\nContributing\n\nIf you discover incompatibilities in plugins, please\nreport issues in our bugtracker.\nWe have java10 and java11 labels for such issues.\n\nIf you are interested to try out Jenkins with Java 10 and 11 before June 22nd,\nyou may be interested to sign-up to the Jenkins and Java 10+ online hackathon.\nEverybody is welcome to join, independently of their Jenkins experience and amount of time they have available.\nExploratory testing is also within the hackathon’s scope.\nDuring this event, please also use the java10_hackathon label.\nIt will help us to track contributions and send folks some small \"thank you\" gifts for participating (details will be figured out during the hackathon).\n\nIf you want to contribute patches to the core,\nplease submit pull requests to java10-support or\njava11-support branches.\nIf the patches are compatible with Java 8, we will try to upstream them to weekly releases.\nFor plugin patches please create pull requests against main branches and then follow guidelines from plugin maintainers.\nIf you need additional reviews and you are a member of the jenkinsci organization,\nfeel free to mention the @jenkinsci/java10-support team in your PRs.\n\nLinks:\n\nDocker: jenkins/jenkins-experimental images\n\nJIRA: Java 10 compatibility\n\nJIRA: Java 11 compatibility\n\nJenkins and Java 10+ online hackathon","title":"Running Jenkins with Java 10 and 11 (experimental support)","tags":["core","developer","java10","java11"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-06-08T00:00:00.000Z","id":"f46b46ad-a0ad-590a-a614-37ad7eaf1e7d","slug":"/blog/2018/06/08/jenkins-java10-hackathon/","strippedHtml":"On behalf of the Jenkins Events Team,\nI would like to invite you to the “Jenkins & Java 10 Online Hackathon” which will take place from June 18th to 22nd.\nWe will be working together on Jenkins core and plugins in order\nto find and fix compatibility issues, share experiences and have some fun.\nEverybody is welcome to join, independently of their Jenkins experience and amount of time they have available.\n\nIf you are interested in participating in the hackathon, please sign-up in\nthis form.\n\nBackground\n\nJava 9 has recently been end-of-lifed, Java 10 is in GA, and Java 11 is in early beta.\nJenkins project currently requires Java 8 to run reliably,\nand there are some known compatibility issues with higher Java versions.\n\nDuring the Jenkins World 2017 Hackathon,\nMark Waite and\nBaptiste Mathus spent some time exploring Java 9 compatibility in Jenkins.\nWe are currently tracking compatibility issues in the\nJENKINS-40689 EPIC,\nbut there are likely many unknown issues in Jenkins core, plugins and in libraries we use in the project.\nWe would like to continue their effort and work on Java 10+ support.\n\nObjectives and Scope\n\nAs I have said above,\nthe goals are to explore/fix compatibility issues, share experiences and have fun.\nWe DO NOT plan to make Jenkins fully compatible with Java 10+\nduring the hackathon,\nbut we will try to integrate fixes and make them available.\n\nSince the announcement of the Hackathon in the mailing list,\nwe have got a number of registrations from contributors working on several project areas.\nWe will split our work to several areas:\n\nJenkins core and Remoting\n\nPipeline Engine\n\nPlugins (e.g. Git plugin or any plugin you want to work on)\n\nExploratory testing for Java 10 and beyond\n\nIn order to organize the effort, we have created a\njava10_hackathon label\nin Jenkins JIRA.\nIf you are interested in particular tasks,\nplease assign them to yourself and add the label.\n\nOrganization\n\nCurrently the event is in the planning stage.\nWe will be using the Developer mailing list\nfor synchronization before the event.\n\nWhat will we have?\n\nCommunications in #jenkins-hackhouse IRC and in the\nJenkins Gitter channel\n\nDaily recorded sync-up calls in Hangouts\n\nKnowledge transfer sessions during the event\n\nWe also want to prepare some special swag for active participants.\nIf you have reached this part of the blogpost,\nyou have probably seen the logo ;)\n\nLinks\n\nRegistration\n\nDeveloper mailing list\n\nHackathon sync-up document\n\nRunning Jenkins with Java 10 and 11\n\nJIRA: Java 10 compatibility\n\nJIRA: Java 11 compatibility\n\nJIRA: Hackathon tasks","title":"Jenkins & Java 10+ Online Hackathon (Jun 18-22)","tags":["events","community","developer","java10","java11"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-05-01T00:00:00.000Z","id":"29e7f29f-403c-5601-b053-b8a3c4a7dcee","slug":"/blog/2018/05/01/gsoc2018-projects-announcement/","strippedHtml":"On behalf of the Jenkins GSoC team and mentors,\nI would like to welcome\nShenyu Zheng,\nUdara De Silva,\nPham Vu Tuan and\nAbhishek Gautam.\nThey will be working on Google Summer of Code projects in the Jenkins organization,\nand they have already done some contributions.\n\nThis year we have the following projects:\n\nCode Coverage API Plugin -\ncreate a new API Plugin to unify existing Code Coverage plugins and provide new features.\n\nStudent: Shenyu Zheng from Henan University, Kaifeng, China\n\nMentors: Steven Christou and Supun Wanniarachchi\n\nElectronic Design Automation Plugins -\ncreate plugins for open-source Electronic Design Automation tools for synthesis, simulation and coverage analysis (iVerilog, covered, Yosys).\n\nStudent: Udara De Silva from University of Akron, Ohio, USA\n\nMentors: Martin d’Anjou and Oleg Nenashev\n\nJenkins Remoting over Message Bus/Queue -\nadd support of a popular message queue/bus technology (RabbitMQ or Kafka) as a fault-tolerant communication layer in Jenkins.\n\nStudent: Pham Vu Tuan from Nanyang Technological University, Singapore\n\nMentors: Oleg Nenashev and Supun Wanniarachchi\n\nSimple Pull-Request Job Plugin -\nadd ability to define Jenkins jobs as YAML files stored in SCM, integrate it with existing plugin ecosystem.\n\nStudent: Abhishek Gautam from Visvesvaraya National Institute of Technology, Nagpur, India\n\nMentors: Jeff Knurek, Kristin Whetstone and\nWilly Aguirre\n\nDuring next 4 weeks project teams will be reaching out to potential stakeholders in order to establish connections and\nto get comments regarding their project designs.\nIf you are interested in the projects, please join discussions in the\nDeveloper mailing lists and project meetings once they get scheduled.\nPlease also expect expect more detailed blogposts about the projects soon.\n\nIf you are interested to know more about GSoC in Jenkins, you can find information, timeline and communication channels\nhere.","title":"Welcome Google Summer of Code 2018 students!","tags":["gsoc","gsoc2018","events","community"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-03-15T00:00:00.000Z","id":"f1ff4387-7033-572c-9fef-b871cfb88ad0","slug":"/blog/2018/03/15/jep-200-lts/","strippedHtml":"This is a post about a major change in Jenkins, which is available starting\nfrom Jenkins 2.102 and Jenkins LTS 2.107.1.\nThis is a change with a serious risk of regressions in plugins.\nIf you are a Jenkins administrator, please read this blogpost and\nupgrade guidelines\nBEFORE upgrading.\n\nI would like to provide some heads-up about the\nJEP-200 change,\nwhich is included into the new Jenkins LTS 2.107.x baseline.\n\nBackground\n\nFor many years Jenkins used to specifically blacklist certain classes and packages according to known or suspected exploits.\nThis approach has been proven unsustainable due to the risk of deserialization attacks via unknown classes\nfrom 3rd-party components, after the\nSECURITY-429/CVE-2017-1000353 fix in 2.46.2\nit was decided to replace blacklists by more restrictive whitelists.\nIn October 2017 Jesse Glick proposed a Jenkins Enhancement Proposal,\nwhich finally got accepted as JEP-200.\n\nThe change implies a risk of regressions in plugins serializing non-whitelisted Java-internal and 3rd-party classes,\nand that’s why it is so important to follow the upgrade guidelines for this release.\n\nCurrent state\n\nJEP-200 was first integrated in Jenkins 2.102 (released in January 2018), and it has got a lot of testing since that.\nSee this blogpost for the original announcement.\n\nOver the last two months we received more than 75 issues from users of Jenkins weekly releases.\nAll these issues have been triaged, and we have released most of the fixes.\nMore than 50 plugins were fixed in total, and many more plugins were updated in order to enable compatibility testing.\nA significant part of the discovered regressions were caused by real defects which were causing performance and stability\nissues in plugins.\nThanks a lot to all the Jenkins contributors and plugin maintainers who helped deliver timely changes for this effort!\n\nOver last 6 weeks Jenkins weekly releases had positive community ratings,\nthe overall JEP-200 adoption reached ~12% of all Jenkins installations on March 01.\nAll major plugins have been also tested directly or verified in the wild on weekly releases.\nSo we are confident that the change is ready to be released in LTS.\n\nOn the other hand, we continue to receive JEP-200 regression reports.\nThey are mostly caused by niche plugins which are not widely used in weekly releases,\nand unfortunately not all fixes have been released yet (see the Wiki page for up-to-date info).\nWe anticipate more regressions to be reported after the LTS release and broader adoption.\n\nIn order to simplify the upgrade to the new LTS baseline,\nI have prepared some helpful materials together with Liam Newman\nand Jesse Glick.\nBelow you can find the embedded slide deck and video, or scroll down to see the key information\nin the text form.\n\nVideo:\n\nFor Jenkins administrators\n\nUpgrading to a core with JEP-200 requires a special update procedure, which is described below.\n\nUpgrading Jenkins\n\nJEP-200 is not the only major change in 2.107.1, please read\nthe full upgrade guide carefully\n\nIf you have a way of testing the upgrade before applying it to production, do it\n\nBack up your instance so you have any easy way of rolling back\n\nUpdate all affected plugins.\nSee this Wiki page for the list of affected plugins,\nfix statuses and workarounds\n\nApply workarounds for non-released patches if needed (see below)\n\nUpdate to the new version of the Jenkins core\n\nUsing backups and staging servers is good advice before any upgrade but especially this one,\ngiven the relatively high risk of regression.\nDue to the nature of the changes, some plugins may refuse to load after the upgrade and cause your Jenkins service to fail to start.\n\nAfter the upgrade\n\nTo the extent that advance testing of the impact of this change on popular plugins has been completed,\nmost users (and even plugin developers) should not notice any difference.\nStill, it is highly advised to monitor your system after the upgrade, especially the following:\n\nJenkins System log (especially during the startup)\n\nJob/Build logs\n\nIf you do encounter a log message referencing the https://jenkins.io/redirect/class-filter/ URL,\nmost likely it is a JEP-200 regression.\nExample:\n\nsome.pkg.and.ClassName in file:/var/lib/jenkins/plugins/some-plugin-name/WEB-INF/lib/some-library-1.2.jar might be dangerous, so rejecting; see https://jenkins.io/redirect/class-filter/\n\nIf you see this kind of message, we highly recommend reporting it so that it can be investigated and probably fixed quickly.\n\nReporting JEP-200 issues\n\nStarting from May 01, JEP-200 issues are triaged by plugin and core maintainers.\nJEP-200 maintainers are available for code reviews if needed,\nbut they will not be reviewing cases in JIRA and searching for miscategorized issues on a daily basis.\nIf you experience new JEP-200 regressions, please follow the guidelines below.\n\nPlease report any issues you encounter matching the above pattern in the\nJenkins issue tracker, under the appropriate plugin component.\nBefore reporting please check whether this issue has already been reported.\n\nAdd the JEP-200 label\n\nInclude the stacktrace you see in the log\n\nIf possible, include complete steps to reproduce the problem from scratch\n\nYou can find examples of previously reported issues using this query.\n\nJenkins developers will evaluate issues and strive to offer a fix in the form of a core and/or plugin update.\nRight after the feature release there was be a special team triaging the reports.\nStarting from May 01 the issues will be triaged by plugin and core maintainers.\nSee JEP-200 Maintenance plan for more info.\n\nFor more details and current status, see\nPlugins affected by fix for JEP-200.\n\nApplying workarounds\n\nAssuming you see no particular reason to think that the class in question has dangerous deserialization semantics, which is rare,\nit is possible to work around the problem in your own installation as a temporary expedient.\nNote the class name(s) mentioned in the JEP-200 log messages,\nand run Jenkins with the hudson.remoting.ClassFilter startup option, e.g.:\n\njava -Dhudson.remoting.ClassFilter=some.pkg.and.ClassName,some.pkg.and.OtherClassName -jar jenkins.war ...\n\nThis workaround process may require several iterations, because classes whitelisted in the workaround may also\ninclude fields with types requiring whitelisting.\n\nFor plugin developers\n\nIf you are a plugin developer, please see the original JEP-200 announcement.\nThat blog post provides guidelines for testing and fixing plugin compatibility after the JEP-200 changes.\nThe presentation above also provides some information about what needs to be tested.","title":"Security hardening: Jenkins LTS 2.107.1 switches XStream / Remoting blacklists to whitelists (JEP-200)","tags":["core","security","remoting","upgrade"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2018-02-19T00:00:00.000Z","id":"d1b0a235-d051-5787-9aab-f43b8d0a68ca","slug":"/blog/2018/02/19/gsoc2018-announcement/","strippedHtml":"We are happy to announce that Jenkins project has been accepted to\nGoogle Summer of Code 2018.\nThis year we invite students and mentors to join the Jenkins community and work together\non various initiatives: core, plugins, development tools and infrastructure.\n\nOur mentors have already created some project ideas.\nFor example, you are welcome to work on the new Configuration-as-Code initiative or\nto help creating standard API for Code Coverage plugins.\nIf you like test automation, there is a proposal to\nJenkins Acceptance Test Harness.\nOver the next weeks we plan to extend this list by new even more project ideas.\n\nAll information about the Jenkins GSoC is available on its subproject page.\n\nI am a student. How do I apply?\n\nSee Information for students for application guidelines.\n\nFirst step is to join discussions in the mailing lists in order to introduce yourself, establish connections with the community and potential mentors.\nThe application period starts on March 12 and ends on March 27, but don’t let it misguide you!\nUse time before application to discuss project ideas/proposals with mentors and to process their feedback.\nTo create a better proposal, we also recommend to study Jenkins and to do some contributions in the area of your project proposal.\n\nNot satisfied by the current project ideas?\nYou can propose your own idea\nin the developer mailing list.\n\nI want to be a mentor. Is it too late?\n\nIt’s not!\nIf you are passionate about open-source and Jenkins, we invite you to join the mentors team.\nYou can either propose a new project idea or join an existing one.\nSee Call for Mentors and Information for mentors for details.\n\nThis year mentorship does NOT require strong expertise in Jenkins development.\nThe objective is to guide students and to get involved into the Jenkins community.\nGSoC org admins will help to find advisers if special expertise is required.\n\nImportant dates\n\nMar 05 - deadline for new GSoC project idea proposals\n\nMar 12 - student application period starts\n\nMar 27 - deadline for student applications\n\nApr 23 - accepted projects announced, community bonding starts\n\nMay 14 - coding period starts\n\nAug 06 - end of the coding period\n\nSee the GSoC Timeline for more info.\nIn the Jenkins project we will also organize special events during and after GSoC (e.g. at Jenkins world).\n\nP.S: I am going to create a special GSoC 2018 edition of swags for mentors and students. Do not miss them ;)","title":"Jenkins is accepted to Google Summer Of Code 2018, join us!","tags":["gsoc","gsoc2018","events","community"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/oleg_nenashev.png"},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}}]}},"pageContext":{"author":"oleg_nenashev","limit":8,"skip":24,"numPages":6,"currentPage":4}},
    "staticQueryHashes": ["3649515864"]}