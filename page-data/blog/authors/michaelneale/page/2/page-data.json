{
    "componentChunkName": "component---src-templates-author-blog-list-template-js",
    "path": "/blog/authors/michaelneale/page/2",
    "result": {"data":{"author":{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg","srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/77b35/michaelneale.jpg 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/d4a57/michaelneale.jpg 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/ef6ff/michaelneale.webp 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/8257c/michaelneale.webp 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/6766a/michaelneale.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/michaelneale.jpg"},"blog":null,"github":"michaelneale","html":"<div class=\"paragraph\">\n<p>Michael is a CD enthusiast with a interest in User Experience.\nHe is a co-founder of CloudBees and a long time OSS developer, and can often be found\nlurking around the jenkins-dev mailing list or #jenkins on irc (same nick as twitter name).\nBefore CloudBees he worked at Red Hat.</p>\n</div>","id":"michaelneale","irc":null,"linkedin":null,"name":"Michael Neale","slug":"/blog/authors/michaelneale","twitter":"michaelneale"},"allBlog":{"edges":[{"node":{"date":"2017-02-10T00:00:00.000Z","id":"1055263e-a6f2-5108-b391-a1511ae33556","slug":"/blog/2017/02/10/blueocean-devlog-feb2/","strippedHtml":"We’re counting down the weeks until\nBlue Ocean\n1.0, which is planned for the end of March. If you hadn’t picked up on the hint\nin my\nprevious post,\nmost of the Blue Ocean development team is in Australia, where it is currently\nthe middle of summer. As I write this it is about 1000 degrees outside.\nEmergency measures such as air-conditioning and beer have been deployed in\norder to continue Blue Ocean development.\n\nThis week featured a new beta with the\nSCM API\nchanges; many bug fixes, and some version bumps went out in beta 22. We also\ngot some fresh new designs coming soon, though not in time for beta 22.\n\nSome development highlights:\n\nBeta 22 went out featuring the new\nSCM API\nwith better use of GitHub API rate limits.\n\nA fix for publishing of\nServer Side Events\nthat made one CPU spin up to 100% was fixed (not good unless you want to heat up\nyour room)\n\nSome new refinements to the design merged to the master branch (see images below).\n\nBeta 22 featured the 1.0 version of\nDeclarative Pipeline\n\nAn\nAustralian translation\nwas added; really critical stuff, I know..\n\nThe Acceptance Test Harness (ATH) was stabilised a bit and it now covers\ncreating Pipelines from Git, which we talked about in\nlate January.\n\nThe Visual Pipeline Editor was released to the main Update Center\nas a preview release, ready to play with!\n\nSome small performance improvements\n\nI’m looking forward to those fancy new designs making their way into an\nupcoming release too.\n\nLovely! Hopefully you see more green than I do…​\n\nAnyways, up next for Blue Ocean:\n\nCreation of Pipelines from GitHub, including auto-discovery of new Pipelines.\n\nCloser to a \"release candidate\"\n\nWorking on filtering the activity view for \"per branch\" views\n\nBetter reporting of durations of stages, steps, and runs\n\nEnjoy!\n\nIf you’re interested in helping to make Blue Ocean a great user experience for\nJenkins, please join the Blue Ocean development team on\nGitter!","title":"Blue Ocean Dev Log: February Week #2","tags":["blueocean"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg","srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/77b35/michaelneale.jpg 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/d4a57/michaelneale.jpg 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/ef6ff/michaelneale.webp 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/8257c/michaelneale.webp 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/6766a/michaelneale.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/michaelneale.jpg"},"blog":null,"github":"michaelneale","html":"<div class=\"paragraph\">\n<p>Michael is a CD enthusiast with a interest in User Experience.\nHe is a co-founder of CloudBees and a long time OSS developer, and can often be found\nlurking around the jenkins-dev mailing list or #jenkins on irc (same nick as twitter name).\nBefore CloudBees he worked at Red Hat.</p>\n</div>","id":"michaelneale","irc":null,"linkedin":null,"name":"Michael Neale","slug":"/blog/authors/michaelneale","twitter":"michaelneale"}]}},{"node":{"date":"2017-02-03T00:00:00.000Z","id":"e40d65de-fedc-5955-acd7-b2f63eafaf7f","slug":"/blog/2017/02/03/blueocean-devlog-feb/","strippedHtml":"With only a couple of months left before\nBlue Ocean\n1.0, which is planned for the end of March, I have\nbeen\nhighlighting\nsome of the good work being finished up by the developers hacking on Blue\nOcean.\n\nThis week was a grab bag of important behind-the-scenes features and finalising\nthe preview of the editor. The merge of the SCM API changes also made it in.\nThe editor has the new sheets style of editing (there will be blogs and more on\nthis in the next few weeks):\n\nSome highlights:\n\nFix to async loading of resources like translations, so screens don’t\n\"flash\" when they are loaded (i18n improvement)\n\nLinks in notifications can be configured to point to classic or\nBlue Ocean screens\n\nTime reporting works better when browser clock is out of sync with\nserver\n\nSECURITY-380 was backported into a small fix for those that aren’t\nrunning the latest LTS (but you should ideally be running it)\n\nSCM API changes finally landed - this will be in beta 22 which should\nhit the update centers soon. This should make things work better with\nGitHub rate limits.\n\nBeta 21 was released\n\nThe editor reached \"preview\" release state ready for use with the newly\nannounced Declarative Pipeline stuff.\n\nAlso, a reference to Australian pop culture had to be removed, sadly.\n\nUp Next:\n\nSome cosmetic changes around headers to make it much nicer and clearer\n\nFavorite improvements\n\nGitHub Org-based Pipeline creation\n\nEditor available in the general update center\n\nBeta 22 with SCM improvements and no more GitHub rate limit hassles\n\nMany fixes\n\nImprovements to the Acceptance Test Harness to reduce the number of false-positives.\n\nEnjoy!\n\nIf you’re interested in helping to make Blue Ocean a great user experience for\nJenkins, please join the Blue Ocean development team on\nGitter!","title":"Blue Ocean Dev Log: February Week #1","tags":["blueocean"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg","srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/77b35/michaelneale.jpg 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/d4a57/michaelneale.jpg 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/ef6ff/michaelneale.webp 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/8257c/michaelneale.webp 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/6766a/michaelneale.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/michaelneale.jpg"},"blog":null,"github":"michaelneale","html":"<div class=\"paragraph\">\n<p>Michael is a CD enthusiast with a interest in User Experience.\nHe is a co-founder of CloudBees and a long time OSS developer, and can often be found\nlurking around the jenkins-dev mailing list or #jenkins on irc (same nick as twitter name).\nBefore CloudBees he worked at Red Hat.</p>\n</div>","id":"michaelneale","irc":null,"linkedin":null,"name":"Michael Neale","slug":"/blog/authors/michaelneale","twitter":"michaelneale"}]}},{"node":{"date":"2017-01-27T00:00:00.000Z","id":"47fad7c8-e5e2-5ee5-bca8-79356edc804b","slug":"/blog/2017/01/27/blueocean-dev-log-jan4/","strippedHtml":"As we get closer to\nBlue Ocean\n1.0, which is planned for the end of March, I have\nstarted\nhighlighting\nsome of the good stuff that has been going on. This week was 10 steps forward, and about 1.5 backwards…​\n\nThere were two releases this week, b19 and b20. Unfortunately, b20 had to\nbe released shortly after b19 hit the Update Center as an incompatible API\nchange in a 3rd party plugin was discovered.\n\nRegardless, the latest b20 has a lot of important improvements, and some\nvery nice new features.\n\nA first cut of the \"Create Pipeline\" UX, seen above, allowing you to create Git\nbased Multibranch Pipelines like you have never seen before.\n\nHandling network disconnections from the browser to server (eg server\nrestart, network etc) gracefully with a nice UI.\n\nMore precise time information for steps and running Pipelines.\n\nMore information when a Pipeline is blocked on infrastructure, such as when\nthe Pipeline is waiting for an agent to become available.\n\nFixed a really embarrassing typo (a prize if you spot it).\n\nTest reports now include stdout and stderr\n\nBetter support for parallel visualisation, such as when a parallel step exists outside of a stage.\n\nThe Visual Editor also had another release, with the \"sheets\" visual component\nand better validation.\n\nCreation\n\nCurrently this is hidden behind a\nfeature toggle,\nto access append?blueCreate to the URL in you browser, and then press the\n\"New Pipeline\" button. Currently it lets you quickly create a Pipeline from\nGit, add credentials, etc, in a very nice UX. More SCM types are being added to\nsupport this.\n\nReconnect/disconnect\n\nAs Blue Ocean is a very \"live\" style of UX, if your network becomes\nunavailable, or the server is restarted, it is good to know in case you\nwere staring at the screen waiting for something to happen (don’t you have\nanything better to do??). When this happens, now you get a polite message,\nand then when the connection is restored, even if you are waiting for a\nPipeline run to finish, it will then notice this, and refresh things for\nyou:\n\nNote the opacity changes to make it clear even if you don’t see the little\nmessage. Very nice addition for those of us who work on a train far to often.\n\nUp next\n\nWhat is up next:\n\nSCM Api changes should land, making things much better for users of\nGitHub, Bitbucket, and many more.\n\nCreating Pipelines from GitHub (including automatic discovery).\n\nLots of fixes and enhancements in the Pipeline from all over the place\n\nMore ATH [ 1 ] coverage against regressions\n\nMore Visual Editor releases as Declarative Pipeline reaches version 1.0\n\nImprovements to i18n\n\nThere was also a couple of \"alternative beta\" releases in the \"Experimental\nUpdate Center\" to help test the new SCM API improvements for better use of\nGitHub APIs (based on\nthis branch)\nI do not recommend trying this branch unless you know what you are doing,\nas this will migrate some data, but help testing it would be appreciated!\n\nEnjoy!\n\nIf you’re interested in helping to make Blue Ocean a great user experience for\nJenkins, please join the Blue Ocean development team on\nGitter!\n\n1. Acceptance Test Harness","title":"Blue Ocean Dev Log: January Week #4","tags":["blueocean"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg","srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/77b35/michaelneale.jpg 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/d4a57/michaelneale.jpg 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/ef6ff/michaelneale.webp 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/8257c/michaelneale.webp 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/6766a/michaelneale.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/michaelneale.jpg"},"blog":null,"github":"michaelneale","html":"<div class=\"paragraph\">\n<p>Michael is a CD enthusiast with a interest in User Experience.\nHe is a co-founder of CloudBees and a long time OSS developer, and can often be found\nlurking around the jenkins-dev mailing list or #jenkins on irc (same nick as twitter name).\nBefore CloudBees he worked at Red Hat.</p>\n</div>","id":"michaelneale","irc":null,"linkedin":null,"name":"Michael Neale","slug":"/blog/authors/michaelneale","twitter":"michaelneale"}]}},{"node":{"date":"2017-01-20T00:00:00.000Z","id":"4d9875e3-c0ca-5b68-8c88-921f07767cc4","slug":"/blog/2017/01/20/blueocean-dev-log-jan2/","strippedHtml":"As we get closer to\nBlue Ocean\n1.0, which is planned for the end of March, I have started\nhighlighting\nsome of the good stuff that has been going on, and this week was a very busy week.\n\nA new Blue Ocean beta ( b18) was released with:\n\nParametrized pipelines are now supported!\n\ni18n improvements\n\nBetter support for matrix and the evil (yet somehow still used) Maven project type (don’t use it!)\n\nSSE fixes for IE and Edge browsers\n\nAn alpha release of the Visual Editor for Jenkinsfiles on top of\nDeclarative Pipeline\nhas snuck into the \"experimental\" update center. Andrew will be talking\nabout Declarative Pipelines at\nFOSDEM next week.\n\nParametrized Pipelines\n\nYou would know this if you followed\nThorsten’s twitter account.\n\nThat twitter account is mostly pics of Thorsten in running gear, but\noccasionally he announces new features as they land.\n\nWhen you run a pipeline that requires parameters, it will popup a dialog\nlike this no matter where you run it from. Most input types are supported\n(similar to input), with a planned extension point for custom input types.\n\nEditor\n\nA very-very early version of the\nBlue Ocean Pipeline Editor plugin\nthat will set your hair on fire of the editor is in the experimental update\ncenter.\n\nDeclarative pipelines are still not at version 1.0 status, but will be\nshortly. This editor allows you to roundtrip Jenkinsfiles written in this\nway, so they can be edited as text, or visually. The steps available are\ndiscovered form the installed plugins. One to watch.\n\nSo, what’s next?\n\nCreation of Git Pipelines, and likely GitHub too.\n\nShow parallel branches that aren’t in a stage visually\n\nShow stderr/out in test reports\n\nShow more information when Jenkins is \"busy\", such as when agents are coming online, in the Pipeline view\n\nEnjoy!\n\nIf you’re interested in helping to make Blue Ocean a great user experience for\nJenkins, please join the Blue Ocean development team on\nGitter!","title":"Blue Ocean Dev Log: January Week #3","tags":["blueocean"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg","srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/77b35/michaelneale.jpg 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/d4a57/michaelneale.jpg 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/ef6ff/michaelneale.webp 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/8257c/michaelneale.webp 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/6766a/michaelneale.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/michaelneale.jpg"},"blog":null,"github":"michaelneale","html":"<div class=\"paragraph\">\n<p>Michael is a CD enthusiast with a interest in User Experience.\nHe is a co-founder of CloudBees and a long time OSS developer, and can often be found\nlurking around the jenkins-dev mailing list or #jenkins on irc (same nick as twitter name).\nBefore CloudBees he worked at Red Hat.</p>\n</div>","id":"michaelneale","irc":null,"linkedin":null,"name":"Michael Neale","slug":"/blog/authors/michaelneale","twitter":"michaelneale"}]}},{"node":{"date":"2017-01-13T00:00:00.000Z","id":"3f353648-fd26-5fa2-874d-cbbc20b0fed6","slug":"/blog/2017/01/13/blueocean-dev-log-jan/","strippedHtml":"As we get closer to\nBlue Ocean\n1.0, which is planned for the end of March, I figured it would be great to\nhighlight some of the good stuff that has been going on. It’s been a\nbusy-as-usual week as everyone comes back from vacation.  A couple of new betas\nwent out this week. Of note:\n\ninput to Pipelines is now supported, a much asked for feature (see below)\n\nA new French translation\n\nSome optimisations (especially around reducing number of HTTP calls). We\nhave started using\ngtmetrix.com\nto measure changes on\"dogfood\"\nto get some numbers around optimisations on the web tier.\n\nAnd a grab bag of other great bug fixes.\n\nAlso a bunch of work has been done to support parametrized pipelines, as\nwell as creation of new multibranch pipelines (both are much asked for).\n\nThere is also now an \"official\" Docker image being published to\nDocker Hub. The Pipeline\nbuilding the container is run weekly and will be picking up newly tagged\nreleases of Blue Ocean.\n\nRunning the latest can be as simple as:\n\ndocker run -p 8888:8080 jenkinsci/blueocean:latest\n\nThis is built on the incredibly popular\nofficial \"jenkins\" image\n(10M pulls can’t all be wrong!). The container also has tags available (e.g.\njenkinsci/blueocean:1.0.0-b16) for grabbing a specific released version.\n\nUp next for Blue Ocean development as we march towards 1.0:\n\nSupport for parametrized jobs. For which a bunch of api work has already been\ndone.\n\nCreation of the new Pipeline GUI\n\nPreview release of the Visual Editor for\nDeclarative Pipeline.\n\nThe new header design will be applied\n\nEnjoy!\n\nIf you’re interested in helping to make Blue Ocean a great user experience for\nJenkins, please join the Blue Ocean development team on\nGitter!","title":"Blue Ocean Dev Log: January Week #2","tags":["blueocean"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg","srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/77b35/michaelneale.jpg 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/d4a57/michaelneale.jpg 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/ef6ff/michaelneale.webp 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/8257c/michaelneale.webp 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/6766a/michaelneale.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/michaelneale.jpg"},"blog":null,"github":"michaelneale","html":"<div class=\"paragraph\">\n<p>Michael is a CD enthusiast with a interest in User Experience.\nHe is a co-founder of CloudBees and a long time OSS developer, and can often be found\nlurking around the jenkins-dev mailing list or #jenkins on irc (same nick as twitter name).\nBefore CloudBees he worked at Red Hat.</p>\n</div>","id":"michaelneale","irc":null,"linkedin":null,"name":"Michael Neale","slug":"/blog/authors/michaelneale","twitter":"michaelneale"}]}},{"node":{"date":"2016-08-08T00:00:00.000Z","id":"649a2e8e-4f2f-56eb-99f1-8897de882a49","slug":"/blog/2016/08/08/docker-pipeline-environments/","strippedHtml":"This is a guest post by Michael Neale, long time open\nsource developer and contributor to the Blue Ocean\nproject.\n\nIf you are running parts of your pipeline on Linux, possibly the easiest way to\nget a clean reusable environment is to use:\nCloudBees\nDocker Pipeline plugin.\n\nIn this short post I wanted to show how you can avoid installing stuff on the agents, and have per project, or even per branch, customized build environments.\nYour environment, as well as your pipeline is defined and versioned alongside your code.\n\nI wanted to use the Blue Ocean project as an\nexample of a\nproject that uses the CloudBees Docker Pipeline plugin.\n\nEnvironment and Pipeline for JavaScript components\n\nThe Blue Ocean project has a few moving parts, one of\nwhich is called the \"Jenkins Design Language\".  This is a grab bag of re-usable\nCSS, HTML, style rules, icons and JavaScript components (using React.js) that\nprovide the look and feel for Blue Ocean.\n\nJavaScript and Web Development being what it is in 2016, many utilities are\nneed to assemble a web app.  This includes npm and all that it needs, less.js\nto convert Less to CSS, Babel to \"transpile\" versions of JavaScript to other\ntypes of JavaScript (don’t ask) and more.\n\nWe could spend time installling nodejs/npm on the agents, but why not just use\nthe official off the shelf docker image\nfrom Docker Hub?\n\nThe only thing that has to be installed and run on the build agents is the Jenkins agent, and a docker daemon.\n\nA simple pipeline using this approach would be:\n\nnode {\n        stage \"Prepare environment\"\n          checkout scm\n          docker.image('node').inside {\n            stage \"Checkout and build deps\"\n                sh \"npm install\"\n\n            stage \"Test and validate\"\n                sh \"npm install gulp-cli && ./node_modules/.bin/gulp\"\n          }\n}\n\nThis uses the stock \"official\" Node.js image from the Docker Hub, but doesn’t let us customize much about the environment.\n\nCustomising the environment, without installing bits on the agent\n\nBeing the forward looking and lazy person that I am, I didn’t want to have to\ngo and fish around for a Docker image every time a developer wanted something\nspecial installed.\n\nInstead, I put a Dockerfile in the root of the repo, alongside the Jenkinsfile :\n\nThe contents of the Dockerfile can then define the exact environment needed\nto build the project.  Sure enough, shortly after this, someone came along\nsaying they wanted to use Flow from Facebook (A\ntypechecker for JavaScript).  This required an additional native component to\nwork (via apt-get install).\n\nThis was achieved via a\npull\nrequest to both the Jenkinsfile and the Dockerfile at the same time.\n\nSo now our environment is defined by a Dockerfile with the following contents:\n\n# Lets not just use any old version but pick one\nFROM node:5.11.1\n\n# This is needed for flow, and the weirdos that built it in ocaml:\nRUN apt-get update && apt-get install -y libelf1\n\nRUN useradd jenkins --shell /bin/bash --create-home\nUSER jenkins\n\nThe Jenkinsfile pipeline now has the following contents:\n\nnode {\n    stage \"Prepare environment\"\n        checkout scm\n        def environment  = docker.build 'cloudbees-node'\n\n        environment.inside {\n            stage \"Checkout and build deps\"\n                sh \"npm install\"\n\n            stage \"Validate types\"\n                sh \"./node_modules/.bin/flow\"\n\n            stage \"Test and validate\"\n                sh \"npm install gulp-cli && ./node_modules/.bin/gulp\"\n                junit 'reports/**/*.xml'\n        }\n\n    stage \"Cleanup\"\n        deleteDir()\n}\n\nEven hip JavaScript tools can emit that weird XML format that test\nreporters can use, e.g. the junit result archiver.\n\nThe main change is that we have docker.build being called to produce the\nenvironment which is then used.  Running docker build is essentially a\n\"no-op\" if the image has already been built on the agent before.\n\nWhat’s it like to drive?\n\nWell, using Blue Ocean, to build Blue Ocean, yields a pipeline that visually\nlooks like this (a recent run I screen capped):\n\nThis creates a pipeline that developers can tweak on a pull-request basis,\nalong with any changes to the environment needed to support it, without having\nto install any packages on the agent.\n\nWhy not use docker commands directly?\n\nYou could of course just use shell commands to do things with Docker directly,\nhowever, Jenkins Pipeline keeps track of Docker images used in a Dockerfile\nvia the \"Docker Fingerprints\" link (which is good, should that image need to\nchange due to a security patch).\n\nLinks\n\nThe project used as as an example is here\n\nThe pipeline is defined by the Jenkinsfile\n\nThe environment is defined by the Dockerfile\n\nRead more on Docker Pipeline","title":"Don't install software, define your environment with Docker and Pipeline","tags":["pipeline","plugins","blueocean","ux","javascript","nodejs"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg","srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/77b35/michaelneale.jpg 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/d4a57/michaelneale.jpg 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/ef6ff/michaelneale.webp 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/8257c/michaelneale.webp 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/6766a/michaelneale.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/michaelneale.jpg"},"blog":null,"github":"michaelneale","html":"<div class=\"paragraph\">\n<p>Michael is a CD enthusiast with a interest in User Experience.\nHe is a co-founder of CloudBees and a long time OSS developer, and can often be found\nlurking around the jenkins-dev mailing list or #jenkins on irc (same nick as twitter name).\nBefore CloudBees he worked at Red Hat.</p>\n</div>","id":"michaelneale","irc":null,"linkedin":null,"name":"Michael Neale","slug":"/blog/authors/michaelneale","twitter":"michaelneale"}]}},{"node":{"date":"2016-04-21T00:00:00.000Z","id":"d9ce8340-eedf-5dba-874d-c9eba3f8e717","slug":"/blog/2016/04/21/dsl-plugins/","strippedHtml":"In this post I will show how you can make your own DSL extensions and distribute\nthem as a plugin, using Pipeline Script.\n\nA quick refresher\n\nPipeline has a well kept secret: the ability to add your own DSL\nelements. Pipeline is itself a DSL, but you can extend it.\n\nThere are 2 main reasons I can think you may want to do this:\n\nYou want to reduce boilerplate by encapsulating common snippets/things you do\nin one DSL statement.\n\nYou want to provide a DSL that provides a prescriptive way that your builds\nwork - uniform across your organisations Jenkinsfiles.\n\nA DSL could look as simple as\n\nacmeBuild {\n    script = \"./bin/ci\"\n    environment = \"nginx\"\n    team = \"evil-devs\"\n    deployBranch = \"production\"\n}\n\nThis could be the entirety of your Jenkinsfile!\n\nIn this \"simple\" example, it could actually be doing a multi stage build with\nretries, in a specified docker container, that deploys only from the production\nbranch.  Detailed notifications are sent to the right team on important events\n(as defined by your org).\n\nTraditionally this is done via the\nglobal\nlibrary.  You take a snippet of DSL you want to want to make into a DSL, and\ndrop it in the git repo that is baked into Jenkins.\n\nA great trivial\nexample\nis this:\n\njenkinsPlugin {\n    name = 'git'\n}\n\nWhich is enabled by git pushing the following into vars/jenkinsPlugin.groovy\n\nThe name of the file is the name of the DSL expression you use in the Jenkinsfile\n\ndef call(body) {\n    def config = [:]\n    body.resolveStrategy = Closure.DELEGATE_FIRST\n    body.delegate = config\n    body()\n\n    // This is where the magic happens - put your pipeline snippets in here, get variables from config.\n    node {\n        git url: \"https://github.com/jenkinsci/${config.name}-plugin.git\"\n        sh \"mvn install\"\n        mail to: \"...\", subject: \"${config.name} plugin build\", body: \"...\"\n    }\n}\n\nYou can imagine many more pipelines, or even archetypes/templates of pipelines\nyou could do in this way, providing a really easy Jenkinsfile syntax for your\nusers.\n\nMaking it a plugin\n\nUsing the global DSL library is a handy thing if you have a single Jenkins, or\nwant to keep the DSLs local to a Jenkins instance.  But what if you want to\ndistribute it around your org, or, perhaps it is general purpose enough you want\nto share it with the world?\n\nWell this is possible, by wrapping it in a plugin. You use the same pipeline\nsnippet tricks you use in the global lib, but put it in the dsl directory of a\nplugin.\n\nMy simple\nbuild plugin shows how it is done.  To make your own plugin:\n\nCreate a new plugin project, either fork the simple build one, or add a\ndependency to it in your pom.xml / build.gradle file\n\nPut your dsl in the resources directory in a similar fashion to\nthis\n(note the \"package dsl\" declaration at the top)\n\nCreate the equivalent extension that just points to the DSL by name like\nthis\nThis is mostly \"boiler plate\" but it tells Jenkins there is a GlobalVariable extension available when Pipelines run.\n\nDeploy it to an Jenkins Update Center to share with your org, or everyone!\n\nThe advantage of delivering this DSL as a plugin is that it has a version (you\ncan also put tests in there), and distributable just like any other plugin.\n\nFor the more advanced, Andrew Bayer has a Simple\nTravis Runner plugin that\ninterprets and runs\ntravis.yml files which is also implemented in pipeline.\n\nSo, approximately, you can build plugins for pipeline that extend pipeline, in\npipeline script (with a teeny bit of boiler plate).\n\nEnjoy!","title":"Making your own DSL with plugins, written in Pipeline script","tags":["jenkins","dsl","pipeline","plugins"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg","srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/77b35/michaelneale.jpg 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/d4a57/michaelneale.jpg 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/19e71/michaelneale.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/ef6ff/michaelneale.webp 32w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/8257c/michaelneale.webp 64w,\n/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/6766a/michaelneale.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/75c8520897a1db139d524965f5bb7ccc/michaelneale.jpg"},"blog":null,"github":"michaelneale","html":"<div class=\"paragraph\">\n<p>Michael is a CD enthusiast with a interest in User Experience.\nHe is a co-founder of CloudBees and a long time OSS developer, and can often be found\nlurking around the jenkins-dev mailing list or #jenkins on irc (same nick as twitter name).\nBefore CloudBees he worked at Red Hat.</p>\n</div>","id":"michaelneale","irc":null,"linkedin":null,"name":"Michael Neale","slug":"/blog/authors/michaelneale","twitter":"michaelneale"}]}}]}},"pageContext":{"author":"michaelneale","limit":8,"skip":8,"numPages":2,"currentPage":2}},
    "staticQueryHashes": ["3649515864"]}