{
    "componentChunkName": "component---src-templates-author-blog-list-template-js",
    "path": "/blog/authors/kohsuke",
    "result": {"data":{"author":{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"},"allBlog":{"edges":[{"node":{"date":"2020-01-23T00:00:00.000Z","id":"b56c3926-16c3-522f-ae8f-4b714de4beff","slug":"/blog/2020/01/23/a-new-chapter-for-kohsuke/","strippedHtml":"2020 is going to be a year of change for me.\nBy the end of January, I’ll be officially stepping back from Jenkins,\nswitching my role at CloudBees to an advisor,\nand turning attention to my new startup.\nThe rest of this post is to contextualize this transition, because if you haven’t been working closely with me, this might come across as a surprise.\n\nJenkins has been an amazing journey that never stopped giving.\nI have loved it all - especially meeting the users around the world who made Jenkins what it is today.\nAs the creator of the project, at some point I started wondering how to pass the torch to the next leaders, how to get people to step up and drive it forward.\nToday, thanks to CloudBees and the community, there is a new generation of talented and capable leaders who are passionately driving things forward - and it’s been great to see.\nNewly elected board members, Jenkins X folks, just to name a few.\nThese new people bring new culture and new code, and altogether it has created a positive jolt that pushed Jenkins out of a local optimum I talked about.\nThey have all my support and respect.\nIn reality, my involvement with Jenkins lately has already been largely symbolic, a little bit like an emperor of Japan or a queen of the UK.\nThat’s why this announcement has little practical impact on the forward motion of Jenkins.\n\nSeveral years ago, I used to feel like the sky would fall down if I stepped aside.\nSomewhere in 2019, I suddenly noticed that I wasn’t feeling like that at all anymore.\nThe shift was gradual and steady, so I’m not sure exactly when I crossed the threshold, but in 2019 it was clear I was on the other side.\nThat’s how I knew I could finally end this chapter of my life.\n15 years with Jenkins and 9 years with CloudBees.\nThat is a long time.\n\nI hope you will be wondering what is my new chapter.\nI’m launching a new startup, Launchable, with my old time buddy Harpreet Singh.\nI have known him since my days at Sun Microsystems and JavaEE, and he was my partner in crime at CloudBees to build the Jenkins business from scratch.\nHe went to Atlassian running its BitBucket business for a while, but now he and I are back sitting side by side again.\nA number of CloudBees people invested, including Sacha Labourey,\nBob Bickel,\nand John Vrionis.\n\nThrough Jenkins and CloudBees, I was able to push the state of automation forward in software development.\nSuch automation is producing a lot of data, but we are not using that data to improve our lives.\nIt truly is a wasted gold mine.\nLaunchable is working on harnessing that information to improve developer productivity.\nI wrote a separate blog post to discuss more about my thinking.\n\nLastly, even though I’m moving on from CloudBees as a full-time employee, I’m not completely going away.\nI’ll be still in the CloudBees orbit, as an advisor.\nI’m still very much invested both emotionally and financially in CloudBees.\nI’m still a big fan, and I’ll continue to cheer for them, but from the sideline.\nThe same with Jenkins.\nI’m still on the governance board, ensuring the continuity.\nI’m also still on the Technical Oversight Committee of the Continuous Delivery Foundation,\nthough my chairperson term will expire in March.\n\nI’m incredibly grateful for the undeserved opportunity and the privilege given to me during this chapter.\nI was surrounded by wonderful, inspiring, and talented people, from whom I learned a lot.\nI can only hope that I was able to make a positive impact, and give something back in return to them.\nI won’t name names, but you know who you are, and we’ll stay in touch.\n\nThis year is going to be truly exciting for me. To infinity and beyond!!","title":"A new chapter for Kohsuke","tags":["community","governance","announcement"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2019-09-25T00:00:00.000Z","id":"784a72e9-875d-5a7a-aeb6-857a36385db1","slug":"/blog/2019/09/25/board-elections/","strippedHtml":"This is a repost of the original announcement made by Kohsuke Kawaguchi in the Jenkins Developer mailing list.\nMinor changes were applied to reflect the posting date and to provide more links.\n\nNominations for the 2019 Jenkins Board elections open for three governing board positions and five officer positions, namely: Security, Events, Release, Infrastructure and Documentation.\n\nThe terms of office for these positions are:\n\nOfficer positions (1 year): November 4, 2019 to November 3, 2020\n\nGoverning board members (2 years): November 4, 2019 to November 3, 2021\n\nTo nominate someone, simply send an email to jenkinsci-board@googlegroups.com with their name and position you nominate them for.\nPlease share any information on why you are making the nomination.\nSelf nominations are also welcome.\n\nThe board positions and officer roles are an essential part of Jenkins' community governance and well-being.\nI highly encourage everyone to consider participating.\n\nKey dates\n\nOct 04, 2019: Nominations close\n\nOct 08, 2019: List of nominees posted to mailing list\n\nOct 11, 2019: Nominees’ personal statements made available\n\nOct 14, 2019: Voting begins\n\nOct 27, 2019: Voting closes at 5pm Pacific Time\n\nNov 04, 2019: New representatives announced\n\nReferences\n\nJenkins Governance Board\n\nJenkins Board Election Process\n\nJenkins Officers\n\nAnnouncement in the developer mailing list\n\n2019 elections proposal in the developer mailing list","title":"2019 Jenkins Board and Officer elections. Nominations are open!","tags":["community","governance","governance-board","elections"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2019-03-12T00:00:00.000Z","id":"8eccd6b4-7a2d-5929-8547-14557b2a4ad8","slug":"/blog/2019/03/12/cdf-launch/","strippedHtml":"Today Linux Foundation, along with CloudBees, Google, and a number of other companies, launched a new open-source software foundation called Continuous Delivery Foundation (CDF.) The CDF believes in the power of Continuous Delivery, and it aims to foster and sustain the ecosystem of open-source, vendor neutral projects.\n\nJenkins contributors have decided that our project should join this new foundation. This discussion happened over a period of time, with a relatively succinct summary of the motivation comes from here.\n\nNow, as a user, what does this mean?\n\nFirst, there will be no big disruption/discontinuity. The same people are still here, no URL is changing, releases will come out like they’ve always been. We will make the decisions the same way as we’ve been making, and pull requests land the same way. Changes will happen continuously over the period of time.\n\nThis is yet another testament to the maturity and the importance of the Jenkins project in this space. With a quarter million Jenkins running around the globe, it’s truly rocking the world of software development from IoT to games, cloud native webapps to machine learning projects. It makes Jenkins such an obvious, safe choice for anyone seeking open heterogeneous DevOps strategy.\n\nThe CDF creates a level playing field that is well-understood to organized contributors, which further, translate into more contributors, hence resulting in a better Jenkins, faster. Over the past years, the Jenkins project has been steadily growing more structures that provide this clarity, and this is the newest step on this trajectory.\n\nAny serious dev teams are combining multiple tools and services to cover the whole software development spectrum. A lot of work gets reinvented in those teams to integrate those tools together. Jenkins will be working more closely with other projects under the umbrella of the CDF, which would result in better aligned software with less overlap.\n\nOur users are practitioners trying to improve the software development process in their organizations. They get that CI/CD/automation which unlocks the productivity that their organizations need, but that’s not always obvious to their organizations as a whole. So our users often struggle to get the necessary support. The CDF will advocate for the practice of Continuous Delivery, and because it’s not coming from a vendor or a project, it will reach the people who can lend that support.\n\nSo I hope you can see why we are so excited about this!\n\nIn fact, for us, this is an idea that we’ve been cooking for close to two years. I don’t think I’m exaggerating much to say the whole idea of the CDF started from the Jenkins project.\n\nA lot of people have done so much work behind the scene to make this happen. But a few people played such instrumental roles that I have to personally thank them namely, Chris Aniszczyk for his patience and persistence, R. Tyler Croy for cooking and evolving the idea, and Tracy Miranda for bringing this idea into a reality.","title":"Jenkins is joining the Continuous Delivery Foundation","tags":["cdf","general","community"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2018-12-25T00:00:00.000Z","id":"c8d9b205-2db8-5364-a27b-52588cce2a9d","slug":"/blog/2018/12/25/year-in-review/","strippedHtml":"The end of a year is a great time to step back from the daily grind to look at the big picture.\n\nAcross the industry, the relentless march toward more automation still continues on. We are writing software faster than ever, but the demand for software seems to be going up even more, and I feel more and more businesses and executives are keenly aware that software and developers are king. At the ground level, every team I meet sees the software delivery automation to be a critical part of their \"software factory,\" and it’s important for them to create and manage them with unhinged flexibility and visibility.\n\nJenkins continues to play a major role in making this possible, after 14+ years since its birth, and if anything the pace of growth seems to be accelerating. In this dog year industry, that’s truly remarkable. Being a part of this achievement truly makes me proud.\n\nBuilding Jenkins, being a tool that everyone uses, comes with a great responsibility. So within the Jenkins community, we’ve been hard at work. In fact, 2018 has been the single most innovative year in the history of the whole project across the field, at multiple levels.\n\nAs we got bigger, we needed better ways to drive initiatives that cut across multiple people. This thinking led to JEPs and SIGs, and 2018 saw these formats getting great traction. After a year of operating them, I think we’ve learnt a lot, and I hope we will continue to improve them based on the learning.\n\nThese new formats gave rise to new collaborations. For example, Chinese Localization SIG resulted in our WeChat presence and localized website. Platform SIG was instrumental in Java 11 support.\n\nI’m also very happy to see new batch of leaders. In fear of missing out some people, I’m not going to list them individually, but we celebrated many of them as Jenkins Ambassadors this fall (and please nominate more for the next year!) Those people who lead key efforts are often people who are new to those roles.\n\nSome of the new leaders led other efforts that unlock new contributors. It’s about consciously thinking which segment of our potential contributors we aren’t tapping today and understanding why. Something any business does all the time. Ours resulted in Google Summer of Code and Outreachy participations.\n\nOur security process and the pace of fixes have gone up considerably this year again, reflecting our stepping up to the trust our users gave to us. For example, this year we rolled out a telemetry system that informs us to develop better fixes more quickly.\n\nNow, where these community improvements ultimately matter is what impact we are creating to software that you use. On that front, I think we did great in 2018, resulting in what I call\"5 super powers\" :\n\nJenkins X is probably the most visible innovation of this year, making it much easier to create modern cloud applications on Kubernetes. This also represents the significant expansion of the Jenkins community and its mission.\n\nJenkins Configuration as Code hit a major milestone \"1.0\" this year, and it’s continuing to gain more momentum and traction.\n\n\"Cloud Native Jenkins\" is the term I gave to a new effort that I’m calling to transform Jenkins into general purpose CI/CD engine that runs at scale on Kubernetes. There’s still much to be defined here, but you can already see some great things like Serverless Jenkins.\n\nEvergreen is another young and upcoming project that has ambitious thesis --- drastically simplifying the adoption and operation of Jenkins.\n\nPipeline effort formed a new SIG and I’m looking forward to the impact this will drive in 2019.\n\nThe not-so-secret sauce of the Jenkins community that threads together all these improvements from user visible changes to the community improvements is our ability to evolve. As I look forward to 2019, no doubt these things I mentioned will evolve, morph, merge, and split as we continue to learn and adopt.\n\nSo please, follow @jenkinsci and @jenkinsxio on Twitter to get updates on how we will evolve, and join our community to together build the software that rocks the world. How many open-source projects can say that?","title":"2018 in Review: A year of innovation","tags":["core","community","new-year-blogpost"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2018-08-31T00:00:00.000Z","id":"0d561c02-de0c-5799-a5a4-74b3cc361577","slug":"/blog/2018/08/31/shifting-gears/","strippedHtml":"Kohsuke here. This is a message for my fellow Jenkins developers.\n\nJenkins has been on an amazing run, but I believe we are trapped in a local optimum, and losing appeal to people who fall outside of our traditional sweet spot.\nWe need to take on new efforts to solve this. One is “cloud native Jenkins” that creates a flavor of Jenkins that runs well on Kubernetes.\nThe other is “gear shift”, where we take an evolutionary line from the current Jenkins 2, but with breaking changes in order to gain higher development speed.\n\nI say it’s time we tackle these problems head on. I’ve been talking to various folks, and I think we need to take on two initiatives.\nOne is what I call \"Cloud Native Jenkins,\" and the other is to insert a jolt in Jenkins.\n\nSome of you have already seen the presentation I posted on the Jenkins YouTube channel.  In this post, I’ll expand on that with some additional details.\n\nJenkins: Shifting Gears Presentation ( Slides)\n\nCome hear more in Kohsuke’s keynote at\nJenkins World on September 16-19th,\nregister with the code JWFOSS for a 30% discount off your pass.\n\nOur Amazing Success\n\nOur project has been an amazing success over the past 10+ years, thanks to you all. What started as my hobby project became a huge community that boasts thousands of contributors and millions of users.\nWhen I think about what enabled this amazing journey, I can think of several magic sauces:\n\nExtensible:\nthe ability to take the system, or a portion of the system, then build on top of it to achieve what you need, without anyone else’s permission.\nHere, I’m not talking about the specific technical mechanism of Guice, extension point, etc, but rather I’m talking more broadly about the governance, culture, distribution mechanism, and so on.\n\nGeneral purpose:\nAt the base level, Jenkins can be used for any kind of automation around the area of software development.\nThis matched the reality of the software engineering world well.\nCombined with extensibility, this general purpose system that is Jenkins can specialize into any domain, much like Linux and JetBrains IDEs.\n\nCommunity:\nTogether we created a community where different people push envelopes in different directions and share the fruits with others.\nThis meant everyone can benefit from somebody else’s work, and great ideas and best practices spread more quickly.\n\nOur Challenges\n\nThe way we set up our community meant that collectively we were able to work toward solving certain kinds of problems locally and organically, such as Android application development, new UX, more expressive pipeline description language, …​\n\nBut at the same time, the incremental, autonomous nature of our community made us demonstrably unable to solve certain kinds of problems.\nAnd after 10+ years, these unsolved problems are getting more pronounced, and they are taking a toll — segments of users correctly feel that the community doesn’t get them, because we have shown an inability to address some of their greatest difficulties in using Jenkins.\nAnd I know some of those problems, such as service instability, matter to all of us.\n\nIn a way, we are stuck in a local optimum, and that is a dangerous place to be when there is growing competition from all sides.\nSo we must solve these problems to ensure our continued relevance and popularity in the space.\n\nSolving those problems starts with correctly understanding them, so let’s look at those.\n\nService Instability\n\nCI/CD service was once a novelty and a nice-to-have.\nToday, it is very much a mission critical service, in no small part because of us!\nIncreasingly, people are running bigger and bigger workloads, loading up more and more plugins, and expect higher and higher availability.\n\nAdmins today are unable to meet that heightened expectation using Jenkins easily enough.\nA Jenkins instance, especially a large one, requires too much overhead just to keep it running.\nIt’s not unheard of that somebody restarts Jenkins every day.\n\nAdmins expect errors to be contained and not impact the entire service.\nThey expect Jenkins to defend itself better from issues such as pipeline execution problems, run-away processes, over resource consumption so that they don’t have to constantly babysit the service.\n\nEvery restart implies degraded service for the software delivery teams where they have to wait longer for their builds to start or complete.\n\nBrittle Configuration\n\nEvery Jenkins admin must have been burnt at least once in the past by making changes that have caused unintended side effects.\nBy “changes,” I’m talking about installing/upgrading plugins, tweaking job settings, etc.\n\nAs a result, too many admins today aren’t confident that they can make changes safely.\nThey fear that their changes might cause issues for their software delivery teams, that those teams will notice regressions before they do, and that they may not be able to back out somes changes easily.\nIt feels like touching a Jenga tower for them, even when a change is small.\n\nUpgrading Jenkins and plugins is an important sub case of this, where admins often do not have understanding of the impact.\nThis decreases the willingness to upgrade, which in turn makes it difficult for the project to move forward more rapidly, and instead we get trapped with the long tail of compatibility burden.\n\nAssembly Required\n\nI’ve often described Jenkins as a bucket full of LEGO blocks — you can build any car you want, but everyone first has to assemble their own car in order to drive one.\n\nAs CI/CD has gone mainstream, this is no longer OK.\nPeople want something that works out of the box, something that gets people to productivity within 5 clicks in 5 minutes.\nToo many choices are confusing users, and we are not helping them toward “the lit path.”\nEveryone feels uncertain if they are doing the right thing, contributors are spread thin, and the whole thing feels a bit like a Frankenstein.\n\nThis is yet another problem we can’t solve by “writing more plugins.”\n\nReduced Development Velocity\n\nThis one is a little different from others that our users face, but nonetheless a very important one, because it impacts our ability to expand and sustain the developer community, and influences how fast we can solve challenges that our users face.\n\nSome of these problems are not structural and rather just a matter of doing it (for example, Java 11 upgrade), but there are some problems here that are structural.\n\nI think the following ones are the key ones:\n\nAs a contributor, a change that spans across multiple plugins is difficult.\nTooling gets in the way, users might not always upgrade a group of changes together, reviewing changes is hard.\n\nAs a contributor, the tests that we have do not give me enough confidence to ship code.\nNot enough of them run automatically, coverage is shallow, and there just isn’t anything like production workload of real users/customers.\n\nThese core problems create other downstream problems, for example:\n\nAs a non-regular contributor, what I think of as a small and reasonable change takes forever and a 100 comments going back & forth to get in. I get discouraged from ever doing it again.\n\nAs a regular contributor, I feel people are throwing crap over the wall, and if they cause problems after a release, I’m on the hook to clean up that mess.\n\nAs a user, I get a half-baked change that wreaks havoc, which results in loss of their confidence to Jenkins, an even slower pace of change, etc. This is a vicious cycle as it makes us even more conservative, and slow down the development velocity.\n\nPath Forward\n\nIn the past, my frustration and regret is that we couldn’t take on an effort of this magnitude.\nBut that is NO MORE!\nAs CTO of CloudBees, I’m excited that these challenges are important enough for CloudBees now that we want to solve these efforts within the Jenkins project.\n\nI’ve been talking to many of you, and there are a number of existing efforts going on that touch this space already.\nFrom there, the vision emerged is that we organize around two key efforts:\n\nCloud Native Jenkins: a general purpose CI/CD engine that runs on Kubernetes, and embraces a fundamentally different architecture and extensibility mechanism.\n\nJolt in Jenkins: continue the incremental trajectory of Jenkins 2 today, but with renegotiated “contract” with users to gain what we really need, such as faster pace of development and better stability.\n\nCloud Native Jenkins\n\nIn order to solve these problems that we can’t solve incrementally,\nI’m proposing the “Cloud Native Jenkins” sub-project in the context of the\nCloud Native SIG\nwith Carlos, who is the leader of this SIG.\n\nWe don’t have all the answers, that’s something we’ll discuss and figure out collectively, but based on numerous conversations with various folks, I think there are many clear pieces of puzzles.\n\nKubernetes as the Runtime\n\nJust like Java was the winning server application platform in the early 2000s, today, Kubernetes is the dominant, winning platform.\nCloud Native Jenkins should embrace the paradigm this new platform encourages. For example,\n\nServerless / function-as-a-service build execution (ala\nJenkinsfile runner)\nthat are isolated.\n\nVarious pieces of functionalities deployed as separate microservices.\n\nServices interacting through\nKubernetes CRDs\nin order to promote better reuse and composability.\n\nThese are the design principles that enable highly desirable properties like infinite scalability, pay-as-you-go cost model, immutability, zero down time operability, etc.\n\nNew Extensibility Mechanism\n\nWe need to introduce a new mechanism of extensibility in order to retain the magic sauces, and continue our incredible ecosystem.\n\nFor example, microservice or container-based extensibility avoids the service instability problem (ala\nKnative builder\nand the\nuserspace-scm work.)\nPipeline shared libraries is another example that concretely shows how extensibility mechanism can go beyond plugin, though it hasn’t fully flourished as one just yet.\n\nData on Cloud Managed Data Services\n\nThe long-term data storage must be moved from the file system to data services backed by cloud managed services, in order to achieve high availability and horizontal scalability, without burdening admins with additional operational responsibilities.\n\nConfiguration as Code\n\nJenkins Configuration as Code\nhas been incredibly well received, in part because it helps to solve some of the brittle configuration problems.\nIn Cloud Native Jenkins, JCasC must play a more central role, which in turn also helps us reduce the surface area for Blue Ocean to cover by eliminating many configuration screens.\n\nEvergreen\n\nJenkins Evergreen\nis another well received effort that’s already underway, which aims to solve the brittleness problem and developer velocity problem. This is a key piece of the puzzle that allows us to move faster without throwing users under the bus.\n\nSecure by Default Design\n\nOver the past years, we’ve learned that several different areas of Jenkins codebase, such as Remoting, are inherently prone to security vulnerabilities because of their design. Cloud Native Jenkins must address those problems by flipping those to “secure by design.”\n\nFollowing Footsteps of Jenkins X\n\nJenkins X\nhas been pioneering the use of Jenkins on Kubernetes for a while now, and it has been very well received, too.\nSo naturally, part of the aim of Cloud Native Jenkins is to grow and morph Jenkins into a shape that really works well for Jenkins X.\nCloud Native Jenkins will be the general purpose CI/CD engine that runs on Kubernetes, which Jenkins X uses to create an opinionated CD experience for developing cloud native apps.\n\nAll The Same Good Things, with New Foundation\n\nAnd then on top of these foundations, we need to rebuild or transplant all the good things that people love about Jenkins today, and all the good things people expect, such as:\n\nGreat “batteries included” onboarding experience for new users, where we are present in all the marketplaces, 5 clicks to get going and easy integration with key services.\n\nModern lovable UX in the direction of front-end web apps that Blue Ocean pioneered.\n\nGeneral purpose software that is useful for all sorts of software development.\n\nCloud Native Jenkins MVP\n\nAs I wrote, a number of good efforts are already ongoing today. Thus in order to get this effort off the ground, I believe the first MVP that we aim toward is pretty clear, which is to build a function-as-a-service style Jenkins build engine  that can be used underneath Jenkins X.\n\nCloud Native Jenkins MVP combines the spirits of Jenkins Pipeline, Jenkins Evergreen, Jenkinsfile Runner, and Jenkins Configuration as Code.\nIt consists of:\n\nWebhook receiver:\na service that receives webhooks from GitHub and triggers a build engine.\n\nBuild Engine:\ntake Jenkinsfile Runner and evolve it so that it can run as a “function” that carries out a pipeline execution, with some CasC sprinkled together in order to control Jenkins configuration and plugins  used.\nThis way, Jenkinsfile works as-is for the most part.\n\nContinuously delivered through Evergreen:\nIt allows us to solve the combinatorial version explosion problem, allow us to develop changes that span multiple plugins faster, and develop changes more confidently.\nOf all the projects out there, ours should be the community that believes in the value of Continuous Delivery and Evergreen is how we bring continuous delivery to the development of Cloud Native Jenkins itself.\n\nThis solves some of the key challenges listed above that are really hard to achieve today, so it’s already incredibly useful.\n\nThe catch is that this MVP has no GUI. There’s no Blue Ocean UI to look at. No parsing of test reports, no build history. It uses no persistent volumes, it keeps no record of builds. The only thing permanent at the end of a build is whatever data is pushed out from Jenkins Pipeline, such as images pushed to a Docker registry, email notifications, and GitHub commit status updates.  Load of other features in Jenkins will not be available here.\n\nThis is not that far from how some sophisticated users are deploying Jenkins today. All in all, I think this is the right trade off for the first MVP. As you can see, we have most of the pieces already.\n\nFrom here, the build engine will get continuously more polished and more cloud native, other services will get added to regain features that were  lost, new extensibility will get introduced to reduce the role of current in-VM plugins, and so on.\n\nJolt in Jenkins\n\nCloud Native Jenkins is a major effort and in particular initially it’s not usable for everyone; it only targets a subset of Jenkins functionalities, and it requires a platform whose adoption is still limited today.\nSo in parallel, we need to continue the incremental evolution of Jenkins 2, but in an accelerated speed. Said differently, we need to continue to serve the majority of production workload on Jenkins 2 today, but we are willing to break some stuff to gain what we really need, such as faster pace of development and better stability, in ways that were previously not possible. This requires us injecting a jolt in Jenkins.\n\nRelease Model Change\n\nThe kind of jolts that we need will almost certainly means we need to renegotiate the expectation around new releases with our users.\nMy inspiration source is what happened to the development of Java SE. It changed the release model and started moving faster, by shedding off more pieces faster, in ways that they haven’t done before.\nAgain, Jenkins Evergreen is the key piece that achieves this without throwing users under a bus, for the reasons I described in the Cloud Native MVP above.\n\nCompatibility\n\nThis jolt is aimed to put us on a different footing, one where our current “forever compatibility” expectation does not hold. If that requires us to use a new major version number, such as Jenkins 3, or new major version number every N months, I’m open to that.\n\nOf course, whatever move we do has to make sense to users. The accelerated pace of value delivery needs to justify any inconvenience we put on users, such as migration, breaking changes, and so on.\n\nIn practice, what that means is that we need to be largely compatible. We have to protect users’ investment into their existing job definitions as much as possible. We continue to run freestyle jobs, etc…​\n\nIngredients\n\nOther proposals CloudBees is putting forward with the intent to staff the effort are:\n\nConfiguration as Code: accelerate that and make it a more central  part of Jenkins.\n\nDeveloper experience improvements through buildpack style auto-detection of project types.\n\nContinued evolution of Jenkins Pipeline\n\nThere’s an effort going on to remove CPS execution of Pipeline and isolate any failures during pipeline execution.\n\nContinue to evolve Jenkins Pipeline toward the sweet spot that works well with the Cloud Native Jenkins effort.\n\nContinued tactical bug-by-bug improvements of Pipeline.\n\nEvergreen: I already talked about this above.\n\nPlugin spring cleaning: let’s actively guide users more toward the sweet spot of Jenkins and reduce our feature surface area, so that we can focus our contributors’ effort to important parts of Jenkins. I expect this to be a combination of governance and technical efforts.\n\nTable stakes service integration: let’s look at what kind of tablestake tool/service integrations today’s user need, and\nsee if we are meeting/exceeding the competition.\nWhere we fall short, let’s add/reimplement what are needed.\n\nUI Effort\n\nThe Web UI will be likely done differently in Cloud Native Jenkins, as its own app and not a plugin in Jenkins. JCasC will also play a bigger role in Cloud Native Jenkins, reducing UI surface area from Jenkins.\n\nGiven that, CloudBees will reconsider where to spend its effort in Blue Ocean. The current work where parts of Blue Ocean are made reusable as NPM modules is one example that aligns well with this new vision.\n\nConclusion\n\nThis document lays out the key directions and approaches in a broad stroke, which I discussed with a number of you in the past. Hopefully, this gives you the big picture of how I envision where to move Jenkins forward, not just as the creator of Jenkins but as the CTO of CloudBees, who employs a number of key contributors to the Jenkins project.\n\nCome meet Kohsuke and chat with him about the direction of Jenkins at\nJenkins World on September 16-19th,\nregister with the code JWFOSS for a 30% discount off your pass.","title":"Jenkins: Shifting Gears","tags":["development","core"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2018-03-20T00:00:00.000Z","id":"62b57ba0-b3a6-537c-a4d3-5430fc151996","slug":"/blog/2018/03/20/evolving-mission-of-jenkins/","strippedHtml":"Lately, perhaps subtle but exciting changes are starting to happen in the Jenkins project.\n\nThe past few weeks have seen the birth of two new initiatives in Jenkins:\nJenkins Essentials and\nJenkins X.  Each is\nexciting in its own right, and I encourage interested parties to take a look at\ntheir goals and missions and participate in them.  But in this post, I want to\ndiscuss why together these two dots form an important arc, which actually\nstarted in the introduction of Jenkins 2 and continued with Blue Ocean.\n\nIn Jenkins 2, we changed Jenkins so that it starts with richer functionality\nand more sensible security setup, among other things.  This was the first step\nin a new direction for Jenkins.  We changed our focus from “we’ll write plugins\nand you figure out the rest” to “we’ll write plugins, we’ll assemble them, and\nwe’ll help you be more productive.”\n\nBlue Ocean was another step on this journey.  We focused on important\ncontinuous delivery use cases in Jenkins, and aimed to provide a great\nuser-experience for those use cases.  Aside from obvious productivity boost for\nusers, it also decidedly blended together feature areas that are internally\nprovided by a whole bunch of different plugins, but users see much less seam\nbetween them.\n\nJenkins Essentials, which R Tyler Croy proposed in\nrecent weeks, is another step forward.  That project aims to take an even\nbigger responsibility in keeping people’s Jenkins instances up and running.\nLike Blue Ocean, Jenkins Essentials focuses on delivering a comprehensive\nJenkins user experience rather than a collection of unrelated plugins which\nusers have to figure out how to wire together.  It also creates an exciting\nvehicle for contributors, in which we can develop and deliver features quite\ndifferently, and more rapidly, than how we deliver them today.\n\nJenkins X, which was proposed by James Strachan a\nfew weeks after Jenkins Essentials, is the latest point on this same arc.\nJenkins X brings a different aspect to building a solution — it focuses on a\nspecific vertical area, namely Kubernetes application development, and\ndrastically simplifies the software development in that domain by bringing\ntogether Jenkins, a whole bunch of plugins, and an opinionated best practice of\nhow one should use Kubernetes.\n\nCollectively, the arc that these efforts form aims to solve the most important\nand consistent concerns for Jenkins users — ease of use, plugin complexity,\nfear of upgrade, etc.\n\nIn the early days of Jenkins, it was up to each and every Jenkins admin to find\nthe right way to assemble pieces into a solution for their organizations, but\nthis hard work remained largely private.  Now, these newer projects are\nbringing this back into the community.  They are making Jenkins more valuable\nto existing users, and more approachable and useful to a whole new set of users\nwho are not currently using Jenkins.\n\nFrom that perspective, I hope more projects like them will follow, pushing us\nbeyond “just writing plugins”, taking even bigger steps to make users\nproductive.  This is a little bit like how I watched Eclipse evolve from just a\nJava IDE to an umbrella of projects.\n\nExciting times!","title":"Evolving Mission of Jenkins","tags":["jenkins-x","evergreen"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2017-06-26T00:00:00.000Z","id":"7b02e5d8-2c15-5100-9be1-7256902c46eb","slug":"/blog/2017/06/26/share-jenkins-world-keynote-stage/","strippedHtml":"Jenkins World is approaching fast,\nand the event staff are all busy preparing.\nI’ve decided to do something different this year as part of my keynote:\nI want to invite a few Jenkins users like you come up on stage with me.\n\nThere have been amazing developments in Jenkins over the past year.\nFor my keynote, I want highlight how the new Jenkins\n(Pipeline as code with the Jenkinsfile, no more creating jobs,\nBlue Ocean)\nis different and better than the old Jenkins (freestyle jobs, chaining jobs together, etc.).\nAll these developments have helped Jenkins users,\nand it would be more meaningful to have fellow users, like you, share their stories\nabout how recent Jenkins improvements like Pipeline and Blue Ocean have positively impacted them.\n\nIf you’re interested sharing your story, please complete\nthis form\nso that I can contact you.\nThis is a great opportunity to let\nthe rest of the world (and your boss!) hear about your accomplishments.\nYou’ll also get into Jenkins World for free and get to join me backstage.\nIf you concerns about traveling to Jenkins World,\nI’m happy to discuss helping with that as well.\n\nI look forward to hearing from you.","title":"Come Share the Jenkins World Keynote Stage with Me!","tags":["event","jenkinsworld","jenkinsworld2017"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2017-04-27T00:00:00.000Z","id":"c3440bc5-c7e2-5c2b-b6e6-f923222e2902","slug":"/blog/2017/04/27/colombia/","strippedHtml":"The Jenkins project has learned that a company is trying to register \"Jenkins\" as a trademark in Colombia. This is alarming for us, and we are trying to oppose it. In order to do this effectively, we need to hear from Colombian users of Jenkins.\n\nFigure 1. South American visitors to jenkins.io for 2017\n\nThe Jenkins project owns a trademark \"Jenkins\" in the U.S., through a non-profit entity SPI Inc. According to experts on the subject citing the \"Washington Convention\", our trademark registration in the U.S. does give us some strength in the argument to oppose this. To successfully mount this argument however, we need to be able to show that Jenkins has significant usage and awareness in Colombia. Users, installations, meetups, conference talks, anything of that nature will help.\n\nThose of you with the project for a long time might recall that the name \"Jenkins\" was born because of a trademark issue with Oracle. So we are particularly sensitive to the issue is trademarks. We want to make sure the same tragedy won’t happen again.\n\nIf you know anything about the usage and the name recognition of Jenkins in Colombia, please let us know by submitting the information here . We know that Jenkins is popular in Colombia, because our website traffic shows that Colombian Jenkins users are the third most frequent visitors to jenkins.io in South America after Brazil and Argentina.\n\nThis information will be only shared with the Jenkins project board and those involved in the defense, and for the sole purpose of defending the trademark and nothing more.\n\nPlease help us spread the word. Thanks!\n\nEl proyecto Jenkins se ha enterado de que una compañía está intentando registrar \"Jenkins\" como marca registrada en Colombia. Esto es alarmante y estamos tratando de oponernos. Para hacerlo de manera efectiva, necesitamos escuchar a los usuarios colombianos de Jenkins.\n\nEl proyecto Jenkins posee una marca registrada \"Jenkins\" en los Estados Unidos, a través de una entidad sin ánimo de lucro SPI Inc. Según los expertos en la materia citando la \"Convención de Washington\", nuestro registro de marca en los EE.UU. nos da algo de fuerza para oponernos. Sin embargo, para argumentar con éxito, tenemos que ser capaces de demostrar que Jenkins tiene un uso significativo y es conocido en Colombia. Usuarios, instalaciones, encuentros, conferencias, cualquier cosa de ese tipo ayudará.\n\nAquellos que llevan mucho tiempo con el proyecto pueden recordar que el nombre \"Jenkins\" nació debido a un problema de marca con Oracle. Por lo tanto, estamos especialmente sensibles al tema de las marcas registradas. Queremos asegurarnos de que el mismo problema no vuelva a ocurrir.\n\nSi sabe algo sobre el uso y el reconocimiento del nombre Jenkins en Colombia, por favor háganoslo saber enviando la información aquí . Sabemos que Jenkins es popular en Colombia, porque nuestro sitio web de tráfico muestra que los usuarios colombianos de Jenkins son los terceros visitantes más frecuentes a jenkins.io en América del Sur después de Brasil y Argentina.\n\nEsta información sólo se compartirá con el comité de proyecto de Jenkins y los involucrados en la defensa, y con el único propósito de defender la marca y nada más.\n\nPor favor, ayúdenos a difundir la palabra. ¡Gracias!","title":"Calling for Colombian Jenkins users!","tags":["feedback","general"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}}]}},"pageContext":{"author":"kohsuke","limit":8,"skip":0,"numPages":19,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}