{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2014/10/20/freebsd-project-use-of-jenkins-for-os-testing/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>This is a guest post by Craig Rodrigues</p>\n</div>\n<hr>\n<div class=\"paragraph\">\n<p>The <a href=\"https://www.freebsd.org\">FreeBSD project</a> produces a modern operating system derived from <a href=\"https://en.wikipedia.org/wiki/Berkeley_Software_Distribution\">BSD Unix</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>In the past 6 months, we have set up Jenkins at <a href=\"https://jenkins.freebsd.org/\" class=\"bare\">https://jenkins.freebsd.org/</a>, to continuously build FreeBSD as developers add new code to the project. This has helped us identify and fix build breaks very quickly.</p>\n</div>\n<div class=\"paragraph\">\n<p>We have gone even farther by integrating Jenkins, <a href=\"https://github.com/jmmv/kyua#readme\">Kyua</a>,\nand <a href=\"http://bhyve.org/\">Bhyve</a>.\n<a href=\"https://github.com/jmmv/kyua#readme\">Kyua</a> is a testing framework for infrastructure software.\n<a href=\"http://bhyve.org/\">Bhyve</a> is the native hypervisor that comes with FreeBSD (similar to KVM on Linux).</p>\n</div>\n<div class=\"paragraph\">\n<p>We use the <a href=\"https://wiki.jenkins.io/display/JENKINS/Build+Flow+Plugin\">Build Flow plugin</a> in this <a href=\"https://ci.freebsd.org/job/FreeBSD-head-amd64-build/\">example Build flow</a>\t to do the following:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Build the FreeBSD kernel and userland on amd64 whenever someone checks in new code to <a href=\"https://svn.freebsd.org\" class=\"bare\">https://svn.freebsd.org</a></p>\n</li>\n<li>\n<p>Create a bootable FreeBSD disk image with <a href=\"https://www.freebsd.org/cgi/man.cgi?query=makefs\">makefs</a></p>\n</li>\n<li>\n<p>Boot the image under bhyve</p>\n</li>\n<li>\n<p>Run these commands inside the bhyve VM:</p>\n</li>\n</ol>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">    cd /usr/tests; kyua test; kyua report-junit --output=test-output.xml</pre>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Shut down the bhyve VM</p>\n</li>\n<li>\n<p>Imports test-output.xml into Jenkins.</p>\n</li>\n<li>\n<p>Produces a <a href=\"https://ci.freebsd.org/job/FreeBSD-head-amd64-test/3069/testReport/\">full native test report in Jenkins</a></p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>The results of this work were presented at the <a href=\"https://bafug.org\">Bay Area FreeBSD Users Group</a>\nin <a href=\"https://www.slideshare.net/CraigRodrigues1/kyua-jenkins\">this presentation</a> in October 2014.</p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins has been very easy to set up and use under FreeBSD.   We hope that by using\nJenkins to run OS-level unit tests, we will be able to improve the quality of FreeBSD.\nFor further information, please feel free to contact us at <a href=\"mailto:freebsd-testing@FreeBSD.org\">freebsd-testing@FreeBSD.org</a> .</p>\n</div>","id":"94f28977-b270-5a37-b70b-89623666a600","title":"FreeBSD project use of Jenkins for OS testing","date":"2014-10-20T00:00:00.000Z","slug":"/blog/2014/10/20/freebsd-project-use-of-jenkins-for-os-testing/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"blog/author/kohsuke","twitter":"kohsukekawa"}]}},"pageContext":{"next":"/blog/2014/10/20/mobile-app-for-jenkins-user-conference-bay-area/","previous":"/blog/2014/10/15/cve-2014-3566-poodle-impact-on-jenkins/","id":"94f28977-b270-5a37-b70b-89623666a600"}},
    "staticQueryHashes": ["1271460761","3649515864"]}