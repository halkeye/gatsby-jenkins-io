{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2014/08/12/official-jenkins-lts-docker-image/",
    "result": {"data":{"blog":{"html":"<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\"> +\n(This is a guest post from https://twitter.com/michaelneale[Michael Neale]) +</pre>\n</div>\n</div>\n<hr>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">+\n+</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\"> +\nRecently at the Docker Conference (DockerCon) the https://hub.docker.com[Docker Hub] was announced.</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">+\n+</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The hub (which includes their image building and storage service) also provides some \"official\" <a href=\"https://registry.hub.docker.com/\">images</a> (sometimes they call them repositories - they are really just sets of images).<br>\n<br>\n<br></p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\"> +\nSo after talking with all sorts of people we decided to create an official https://registry.hub.docker.com/_/jenkins/[Jenkins image] - which is hosted by the docker hub simply as \"jenkins\".</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">+\n+</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>So when you run \"docker pull jenkins\" - it will be grabbing this image. This is based on the current LTS (and will be kept up to date with the LTS) - but does not include the weekly releases (yet). Having a jenkins image that is fairly basic (it includes enough to run some basic builds, as well as jenkins itself) built on the LTS, on the latest LTS of Ubuntu seemed quite convenient - and easy to maintain using the official Ubuntu/Debian packaging of Jenkins.<br></p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">+</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\"> +\nDocker is a great way to try and use server based systems - it brings all the dependencies needed and the images actually are portable (ie anywhere docker runs you can run docker images). There are official images for many popular server platforms (redis, mysql, all the linux distros and so on) so it seemed crazy to not include Jenkins along with this list. +\n\"docker run -p 8080:8080 jenkins\" is all you need to get going with LTS Jenkins now. +\nYou can also use \"docker run jenkins:1.554\" to get the latest of that lineage of LTS releases, or pick a specific one: \"docker run jenkins:1.554.3\" if you like. Leaving off a version assumes the latest. Check the https://registry.hub.docker.com/_/jenkins/tags/manage/[tags] page to see what is available. +</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">+\n+</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\"> +\nYou can read more and see how you https://registry.hub.docker.com/_/jenkins/[can use it here.] +</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">+\n+</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\"> +\nThere has been some questions and discussions on how to make use of Jenkins with the docker hub for creating new and interesting docker image based workflows for deployment. +\nIn fact, Jenkins featured in one of the first slides of the first keynote of docker con: +\n +\nimage:https://3.bp.blogspot.com/-qAC-f6ceVho/U5rfqpzj3VI/AAAAAAAAC8w/Ta4pzEhm-8A/s1600/Screen+Shot+2014-06-13+at+8.34.10+pm.png[image] +\n +\nTo make this dream a reality some additional https://wiki.jenkins.io/display/JENKINS/DockerHub+Plugin[plugins] had to be created - but this leaves the possibility of working with the docker hub (builds, stores images) and Jenkins (workflow, testing, deployment) to build out some kind of a continuous pipeline for handling docker based apps. I attempted to describe this more https://developer-blog.cloudbees.com/2014/07/announcing-dockerhub-jenkins-plugin.html[here]. +</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">+\n+</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\"> +\nThis image is maintained in this github https://github.com/cloudbees/jenkins-ci.org-docker[repo] and the official images are build by the https://github.com/docker/stackbrew[\"stackbrew\" system]. (We may move this repo to the jenkinsci github group shortly so keep an eye out). +</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">+\n+</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>It will be interesting to watch this grow and change.</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">+</pre>\n</div>\n</div>","id":"4d06a8ac-058a-5589-bb0d-1d1c493fbfd1","title":"Official Jenkins LTS docker image","date":"2014-08-12T00:00:00.000Z","slug":"/blog/2014/08/12/official-jenkins-lts-docker-image/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/author/kohsuke","twitter":"kohsukekawa"}]}},"pageContext":{"next":"/blog/2014/08/28/juc-sf-2014-is-here/","previous":"/blog/2014/08/12/jenkins-user-meet-up-in-london/","id":"4d06a8ac-058a-5589-bb0d-1d1c493fbfd1"}},
    "staticQueryHashes": ["1271460761","3649515864"]}