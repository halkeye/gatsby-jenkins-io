{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2017/08/11/remoting-update/",
    "result": {"data":{"blog":{"html":"<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nUpdated on Jan 10, 2019: The deprecated protocols were removed in Remoting 3.40+ and Jenkins 2.214+.\nSee jira:JENKINS-60381[Remove old, deprecated Remoting protocols] for more information and links.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>There are upcoming changes in Jenkins \"core\" which <strong>may</strong> require extra steps\nwhen upgrading Jenkins.  If you use configuration management for Jenkins\nagents, please read this announcement carefully.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you have ever seen messages like \"Channel is already closed\" or \"Remote call failed\" in your build logs,\nyou have already met <a href=\"/projects/remoting\">Jenkins Remoting</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Remoting is an agent executable and a library implementing the communication layer between Jenkins controllers and their agents (including communication protocols, distributed calls and classloading).\nIt is also used in several other cases: <a href=\"https://plugins.jenkins.io/maven-plugin\">Maven Integration Plugin</a>, Remoting-based CLI, etc.</p>\n</div>\n<div class=\"paragraph\">\n<p>In order to make it clear what&#8217;s changing in Jenkins Remoting, I have documented the various components on\n<a href=\"/projects/remoting\">the Remoting&#8217;s sub-project page</a>, and will try to publish regular updates about the status of\nRemoting to this site and the <a href=\"/mailing-lists\">developer mailing list</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>In this post I would like to provide an update on the Remoting roadmap and to announce two major incoming changes: deprecation of old protocols and upgrade to Java 8.\nBoth changes will take place in one of the next Weekly releases.\nETA is Jenkins 2.75 on Aug 20, 2017.</p>\n</div>\n<div class=\"paragraph\">\n<p>Below are details on the incoming changes and compatibility notes.</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"old-remoting-protocols-deprecation\"><a class=\"anchor\" href=\"#old-remoting-protocols-deprecation\"></a>Old Remoting Protocols Deprecation</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>It has been almost one year since the release of JNLP4-connect protocol in Remoting 3.0.\nThis protocol has been enabled by default since 2.46.x, and so far it demonstrates good stability being compared to JNLP2 and JNLP3 protocols.</p>\n</div>\n<div class=\"paragraph\">\n<p>At the governance meeting\n<a href=\"http://meetings.jenkins-ci.org/jenkins-meeting/2017/jenkins-meeting.2017-08-02-18.00.html\">we decided</a> to disable old Remoting protocols (JNLP/JNLP2 + CLI1) in new installations by default.\nThere are 3 reasons for it:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Maintenance of multiple protocols takes a lot of extra effort.\nThe JNL2 NIO engine is complex and barely diagnosable.</p>\n</li>\n<li>\n<p>There are known issues in JNLP2 connection management (see <a href=\"/projects/remoting/\">the protocol&#8217;s Errata</a>). In many cases update to JNLP4 was a resolution</p>\n</li>\n<li>\n<p>JNLP1/JNLP2/CLI1 are unencrypted, and it is not something Jenkins users may expect in 2017</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>It is tracked as <a href=\"https://issues.jenkins.io/browse/JENKINS-45841\">JENKINS-45841</a> in Jenkins JIRA.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"how\"><a class=\"anchor\" href=\"#how\"></a>How?</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>When Jenkins is started in the new installation mode with enabled Installation Wizard, old protocols will be disabled</p>\n</li>\n<li>\n<p>Jenkins shows an administrative warning when obsolete protocols are enabled</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"compatibility-notes\"><a class=\"anchor\" href=\"#compatibility-notes\"></a>Compatibility notes</h3>\n<div class=\"paragraph\">\n<p>Older instances won&#8217;t be affected by the disabling of the older JNLP1/JNLP2 protocols, which will still be enabled for them.\nNewly created instances which skip, or disable, the Setup Wizard will not be affected either.</p>\n</div>\n<div class=\"paragraph\">\n<p>\"New\" Jenkins instances installed via setup wizard <strong>may be affected</strong> in edge cases. For example:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Agents with Remoting older than 3.0 will be unable to connect.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><strong>Mitigation:</strong> Before updating make sure Remoting is not bundled custom Docker images, AMIs, etc.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Swarm Plugin: old versions of Swarm Client (before 3.3) will be unable to connect to Jenkins, because Remoting 2.x is bundled</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><strong>Mitigation</strong>: Update Swarm Client</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><strong>Very</strong> old jenkins-cli.jar without CLI2 support will be unable to connect.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><strong>Mitigation</strong>: Do not use Remoting-based CLI on new instances (see <a href=\"/blog/2017/04/11/new-cli/\">this blogpost</a>)</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"upgrade-to-java-8\"><a class=\"anchor\" href=\"#upgrade-to-java-8\"></a>Upgrade to Java 8</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Starting with version 2.54, Jenkins requires Java 8 to run\n(<a href=\"/blog/2017/04/10/jenkins-has-upgraded-to-java-8/\">announcement blog post</a>).\nThis version is also required for Jenkins LTS 2.60.1.</p>\n</div>\n<div class=\"paragraph\">\n<p>Remoting continued to support Java 7 for a while for backporting purposes,\nbut it will be also upgraded to Java 8 in the Remoting 3.11 release.\nThis Rremoting version is expected to be available in Jenkins 2.75 (ETA: Aug 20, 2017).\nThis change is tracked as <a href=\"https://issues.jenkins.io/browse/JENKINS-43985\">JENKINS-43985</a>.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"compatibility-notes-2\"><a class=\"anchor\" href=\"#compatibility-notes-2\"></a>Compatibility notes</h3>\n<div class=\"paragraph\">\n<p>The update does not cause compatibility issues in common use-cases.\nHowever, there may be issues in custom Jenkins core builds and packaging.\nThere are several examples below.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Jenkins instances with built-in Remoting versions will <strong>NOT</strong> be affected, Java 8 is already required there</p>\n</li>\n<li>\n<p>Users of community-provided Docker packages (<a href=\"https://github.com/jenkinsci/docker-agent\">docker-agent</a>,\n  <a href=\"https://github.com/jenkinsci/docker-inbound-agent\">docker-inbound-agent</a>) will <strong>NOT</strong> be affected,\nJava 8 is already required there</p>\n</li>\n<li>\n<p><strong>Custom</strong> Jenkins WAR file builds targeting Java 7 may fail to build/run if they bundle Remoting 3.11 or later</p>\n</li>\n<li>\n<p><strong>Custom</strong> Jenkins agent instances (manually installed hosts, VM snapshots, Docker packages, AMIs, etc.) may fail if they download the latest Remoting version and use Java 7</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"java-9-support\"><a class=\"anchor\" href=\"#java-9-support\"></a>Java 9 support</h3>\n<div class=\"paragraph\">\n<p>As with Jenkins core, Java 9 <strong>not supported</strong> and <strong>not tested</strong> in Remoting.\nIt may work in some configurations, but it is not guaranteed.</p>\n</div>\n<div class=\"paragraph\">\n<p>As a consequence, it is not recommended to run Remoting with Java 9 right now.\nIt is also not recommended to use <a href=\"https://plugins.jenkins.io/maven-plugin\">Maven Integration Plugin</a> to run builds on Java 9.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"whats-next\"><a class=\"anchor\" href=\"#whats-next\"></a>What&#8217;s next?</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>There are some ongoing activities in the Remoting sub-project:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Stability and Diagnosability improvements\n(<a href=\"https://issues.jenkins.io/browse/JENKINS-38833\">JENKINS-38833</a>)</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><strong>Why?</strong> When it comes to Remoting issues, it is really hard to diagnose them</p>\n</li>\n<li>\n<p>Recently I have published <a href=\"https://speakerdeck.com/onenashev/day-of-jenkins-2017-dealing-with-agent-connectivity-issues\">some slides</a> about preventing and diagnosing issues, but I want the behavior to be more stable by default</p>\n</li>\n<li>\n<p>This Epic lists my plans about Remoting issues and papercuts I would like to fix this year</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Remoting Work Directories\n(<a href=\"https://issues.jenkins.io/browse/JENKINS-44108\">JENKINS-44108</a>)</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>For a long time logging was disabled by default in Java Web Start (JNLP) and SSH agents, because Remoting had no option to determine where to store such data before connecting to the controller</p>\n</li>\n<li>\n<p>The new <a href=\"https://github.com/jenkinsci/remoting/blob/master/docs/workDir.md\">Remoting Work Directory</a> feature (since Remoting 3.8) offers such storage, which is also used for storing JAR caches and for checking workspace writeability before accepting builds.</p>\n</li>\n<li>\n<p>This Epic is about enabling Remoting work directories by default in common Agent launcher types.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Remoting Upgradeability\n(<a href=\"https://issues.jenkins.io/browse/JENKINS-44099\">JENKINS-44099</a>)</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Right now Remoting is not being upgraded automatically on JNLP agents, it is supported only for Windows service agents starting from Jenkins 2.50</p>\n</li>\n<li>\n<p>On the Jenkins controller side it is required to upgrade the Jenkins core in order to pick Remoting fixes.</p>\n</li>\n<li>\n<p>This Epic aims simplifying the upgrade procedure for most common cases.</p>\n</li>\n</ul>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>If you are interested in contributing to these tasks, or others in the Remoting\nsub-project, please feel free to reach out via the issue tracker or\n<a href=\"/chat/\">#jenkins IRC channel</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you are coming to Jenkins World, you can also find me at the \"Ask the Experts\" booth there.\nSee more info about Ask the Experts <a href=\"/blog/2017/08/03/jenkinsworld-ask-the-experts/\">here</a>.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"useful-links\"><a class=\"anchor\" href=\"#useful-links\"></a>Useful links</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"/projects/remoting/\">Remoting Sub-Project</a> on Jenkins website</p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/remoting/blob/master/CHANGELOG.md\">Remoting Release Notes</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/remoting/blob/master/README.md\">Remoting documentation</a> on GitHub</p>\n</li>\n<li>\n<p><a href=\"https://speakerdeck.com/onenashev/day-of-jenkins-2017-dealing-with-agent-connectivity-issues\">My slides</a> about Remoting issues troubleshooting</p>\n</li>\n</ul>\n</div>\n</div>\n</div>","id":"4d1723b9-7ca9-59e6-a301-6c0e75388381","title":"Remoting Update. Protocols deprecation, Java 8 requirement and plans","date":"2017-08-11T00:00:00.000Z","slug":"/blog/2017/08/11/remoting-update/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he leads several Jenkins <a href=\"/sigs\">SIGs</a>, outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>) and <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works for <a href=\"https://www.cloudbees.com/\">CloudBees</a> and focuses on key projects in the community.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/author/oleg_nenashev","twitter":"oleg_nenashev"}]}},"pageContext":{"next":"/blog/2017/08/17/speaker-blog-blazemeter/","previous":"/blog/2017/08/10/kubernetes-with-pipeline-acs/","id":"4d1723b9-7ca9-59e6-a301-6c0e75388381"}},
    "staticQueryHashes": ["1271460761","3649515864"]}