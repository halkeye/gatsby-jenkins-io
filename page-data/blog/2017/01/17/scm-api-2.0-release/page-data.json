{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2017/01/17/scm-api-2.0-release/",
    "result": {"data":{"blog":{"html":"<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>The <a href=\"https://issues.jenkins.io/browse/JENKINS-41121\">regressions\ndiscovered after release</a> have now been resolved and this post has been updated with the correct plugin version numbers.</p>\n</div>\n<div class=\"paragraph\">\n<p>See <a href=\"/blog/2017/02/06/scm-api-2-take2/\">this post</a> for more details.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>We are announcing the\n<a href=\"https://plugins.jenkins.io/scm-api\">SCM API</a>\n2.0.x and\n<a href=\"https://plugins.jenkins.io/branch-api\">Branch API</a>\n2.0.x release lines.</p>\n</div>\n<div class=\"paragraph\">\n<p>Downstream of this there are also some great improvements to a number of popular plugins including:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://plugins.jenkins.io/github-branch-source\">GitHub Branch Source</a></p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/cloudbees-bitbucket-branch-source\">BitBucket branch source</a></p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/git\">Git</a></p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/mercurial\">Mercurial</a></p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/workflow-multibranch\">Pipeline Multibranch</a></p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/github-organization-folder\">GitHub Organization Folders</a></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>There are some gotcha&#8217;s that Jenkins administrators will need to be aware of.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\"></i>\n</td>\n<td class=\"content\">\nAlways take a backup of your <code>JENKINS_HOME</code> before upgrading any plugins.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>We want to give you the whole story, but the take home message is this:</p>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\n<div class=\"paragraph\">\n<p>When updating the\n<a href=\"https://plugins.jenkins.io/scm-api\">SCM API</a>\nand/or\n<a href=\"https://plugins.jenkins.io/branch-api\">Branch API</a>\nplugins to the 2.0.x release lines, if you have any of the\n<a href=\"https://plugins.jenkins.io/github-organization-folder\">GitHub Organization Folders</a>,\n<a href=\"https://plugins.jenkins.io/github-branch-source\">GitHub Branch Source</a>\nand/or\n<a href=\"https://plugins.jenkins.io/cloudbees-bitbucket-branch-source\">BitBucket branch source</a>\nplugins installed then you <strong>must</strong> upgrade them <strong>all</strong> to 2.0.x at the same time or Bad Things&#8482; will happen.</p>\n</div>\n</blockquote>\n<div class=\"attribution\">\n&#8212; A Jenkins Administrator\n</div>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-warning\" title=\"Warning\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>Do NOT upgrade some of these plugins but not others!\nDoing so may cause your jobs to fail to load.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>If you don&#8217;t care about the hows and whys, you can just skip down to <a href=\"#tldr\">this section</a> but if you are curious&#8230;&#8203; here we go!</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"the-back-story\"><a class=\"anchor\" href=\"#the-back-story\"></a>The back-story</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Way back in September 2013 we announced the\n<a href=\"/blog/2013/09/23/literate-builds-wtf/\">Literate plugin</a>,\nas an experimental new way of modeling branch development in Jenkins.</p>\n</div>\n<div class=\"paragraph\">\n<p>When you are performing an experiment, the recommendation is to do just enough work to let you perform the test.\nHowever, the culture in Jenkins is to always try and produce reusable components that others can use in ways you have not anticipated.</p>\n</div>\n<div class=\"paragraph\">\n<p>So when releasing the initial version of the\n<a href=\"https://plugins.jenkins.io/literate\">Literate plugin</a>\nwe also separated the Literate specific bits from the SCM specific concepts and multi-branch concepts.\nThese were lower level concepts were organized into the following plugins:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://plugins.jenkins.io/scm-api\">SCM API</a> -\nwhich was intended to be a plugin to hold a next generation API for interacting with source control systems.</p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/branch-api\">Branch API</a> -\nwhich was intended to be a plugin to hold the multi-branch functionality that was abstracted from the usage by the Literate plugin.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>In addition, we released updates to three of the more common SCM plugins which included implementations of the SCM API:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Git plugin</p>\n</li>\n<li>\n<p>Subversion plugin</p>\n</li>\n<li>\n<p>Mercurial plugin</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>While there was some interest in the Literate plugin, it did not gain much traction - there are only 39 Jenkins instances running the Literate plugin as of December 2016.</p>\n</div>\n<div class=\"paragraph\">\n<p>In terms of the reusable components, we had only made a minimal implementation with some limitations:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Very basic event support - events can only trigger a re-scan of the entire repository.\nThis was acceptable at the time because the only three implementations use a local cache of the remote state so re-scanning is quick.</p>\n</li>\n<li>\n<p>No implementation of the <code>SCMFileSystem</code> API.\nAs a result it is not possible for plugins like\n<a href=\"https://plugins.jenkins.io/workflow-multibranch\">Pipeline Multibranch</a>\nto get the <code>Jenkinsfile</code> from the remote repository without needing to checkout the repository into a workspace.</p>\n</li>\n<li>\n<p>No documentation on how plugin developers are supposed to implement the SCM API</p>\n</li>\n<li>\n<p>No documentation on how plugin developers are supposed to consume the SCM API (if they wanted to do something like Branch API but not the same way as Branch API)</p>\n</li>\n<li>\n<p>No documentation on how plugin developers are supposed to implement the Branch API to create their own multi-branch project types</p>\n</li>\n<li>\n<p>No documentation on for users on how the Branch API based project types are expected to work.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Roll forward to November 2015 and Jenkins Pipeline got a release of the\n<a href=\"https://plugins.jenkins.io/workflow-multibranch\">Pipeline Multibranch</a>.\nIt seems that pairing Pipeline with Branch API style multi-branch is much more successful than Literate - there are close to 60,000 instances running the pipeline multi-branch plugin as of December 2016.</p>\n</div>\n<div class=\"paragraph\">\n<p>There also were two new SCM plugins implementing the SCM API:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>GitHub Branch Source Plugin</p>\n</li>\n<li>\n<p>BitBucket Branch Source Plugin</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Unlike the previous implementations of the SCM API, however, these plugins do not maintain a local cache of the repository state.\nRather they make queries via the GitHub / BitBucket REST APIs on demand.</p>\n</div>\n<div class=\"paragraph\">\n<p>The above design decision exposed one of the initial MVP compromises of the SCM API plugin: <em>very basic event support</em>.\nUnder the SCM API 1.x model, the only event that an <code>SCMSource</code> can signal is <em>something changed, go look at everything again</em>.\nWhen you are accessing an API that only allows 5,000 API calls per hour, performing a full scan of the entire repository just to pick up a change in one branch does not make optimum usage of that 5,000 calls/hour rate limit.</p>\n</div>\n<div class=\"paragraph\">\n<p>So we decided that perhaps the SCM API and Branch API plugins have left their Minimum Viability Experiment state and the corresponding limitations should be addressed.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"enter-scm-api-2-0-x-and-branch-api-2-0-x\"><a class=\"anchor\" href=\"#enter-scm-api-2-0-x-and-branch-api-2-0-x\"></a>Enter SCM API 2.0.x and Branch API 2.0.x</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>So what has changed in the\n<a href=\"https://plugins.jenkins.io/scm-api\">SCM API</a>\n2.0.x and\n<a href=\"https://plugins.jenkins.io/branch-api\">Branch API</a>\n2.0.x release lines?\nThese plugin releases include:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>documentation on how plugin developers are supposed to\n<a href=\"https://github.com/jenkinsci/scm-api-plugin/blob/master/docs/implementation.adoc\">implement the SCM API</a></p>\n</li>\n<li>\n<p>documentation on how plugin developers are supposed to\n<a href=\"https://github.com/jenkinsci/scm-api-plugin/blob/master/docs/consumer.adoc\">consume the SCM API</a>\n(if they wanted to do something like Branch API but not the same way as Branch API)</p>\n</li>\n<li>\n<p>documentation on how plugin developers are supposed to\n<a href=\"https://github.com/jenkinsci/branch-api-plugin/blob/master/docs/implementation.adoc\">implement the Branch API</a>\nto create their own multi-branch project types</p>\n</li>\n<li>\n<p>generic documentation for users on\n<a href=\"https://github.com/jenkinsci/branch-api-plugin/blob/master/docs/user.adoc\">how Branch API based project types are intended to work</a></p>\n</li>\n<li>\n<p>a full featured\n<a href=\"https://github.com/jenkinsci/scm-api-plugin/blob/master/src/main/java/jenkins/scm/api/SCMEvent.java\">event system</a>\nthat allows implementers to provide fine grained notifications to consumers</p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/scm-api-plugin/tree/master/src/test/java/jenkins/scm/api\">lots</a>\n<a href=\"https://github.com/jenkinsci/scm-api-plugin/tree/master/src/test/java/jenkins/scm/impl\">and</a>\n<a href=\"https://github.com/jenkinsci/branch-api-plugin/tree/master/src/test/java/integration\">lots</a>\nof new automated tests</p>\n</li>\n<li>\n<p>a <a href=\"https://github.com/jenkinsci/scm-api-plugin/tree/master/src/test/java/jenkins/scm/impl/mock\">mock implementation</a>\nof the SCM API to help consumers of the SCM API test their usage.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>In addition, we have upgraded the following plugins to include the new fine-grained event support:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Git Plugin</p>\n</li>\n<li>\n<p>Mercurial Plugin</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Ok, that was the good news.\nHere is the bad news.</p>\n</div>\n<div class=\"paragraph\">\n<p>We found out that the GitHub Branch Source and BitBucket Branch Source plugins had made invalid assumptions about how to implement the SCM API.\nTo be clear, this was not the plugin developers fault: at the time there was no documentation on how to implement the SCM API.</p>\n</div>\n<div class=\"paragraph\">\n<p>But fixing the issues that we found means that you have to be careful about which specific combinations of plugin versions you have installed.</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">SCM API Plugin</dt>\n<dd>\n<p>Technically, the 2.0.x line of this plugin is both API and on-disk compatible with plugins compiled against older version lines.</p>\n<div class=\"paragraph\">\n<p>However, the 1.x lines of both the GitHub Branch Source and BitBucket Branch Source plugins have hard-coded assumptions about internal implementation of the SCM API that are no longer valid in the 2.0.x line.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-warning\" title=\"Warning\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>If you upgrade to SCM API 2.0.x and you have either the GitHub Branch Source or the BitBucket Branch Source plugins <strong>and</strong> you do not upgrade those instances to the 2.0.x line then your Jenkins instance will fail to start-up correctly.</p>\n</div>\n<div class=\"paragraph\">\n<p>The solution is just to upgrade the GitHub Branch Source or the BitBucket Branch Source plugin (as appropriate) to the 2.0.x line.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>If you upgrade the SCM API plugin to the 2.0.x line and do not upgrade the Branch API plugin to the 2.0.x line then you will not get any of the benefits of the new version of the SCM API plugin.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</dd>\n<dt class=\"hdlist1\">Branch API Plugin</dt>\n<dd>\n<p>The 2.0.x line of this plugin makes on-disk file format changes that mean you will be unable to roll back to the 1.x line after an upgrade without restoring the old data files from a back-up.\nTechnically, the API is compatible with plugins compiled against older version lines.</p>\n<div class=\"paragraph\">\n<p>The 1.x lines of both the GitHub Branch Source and BitBucket Branch Source plugins have implemented hacks that make assumptions about internal implementation of the Branch API that are no longer valid in the 2.0.x line.</p>\n</div>\n<div class=\"paragraph\">\n<p>The Pipeline Multibranch plugin made a few minor invalid assumptions about how to implement a Multibranch project type.\nFor example, if you do not upgrade the Pipeline Multibranch plugin in tandem then you will be unable to manually delete an orphaned item before the orphaned item retention strategy runs, which should be significantly less frequently with the new event support.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-warning\" title=\"Warning\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>If you upgrade to Branch API 2.0.x and you have either the GitHub Branch Source or the BitBucket Branch Source plugins <strong>and</strong> you do not upgrade those instances to the 2.0.x line then your Jenkins instance will fail to start-up correctly.</p>\n</div>\n<div class=\"paragraph\">\n<p>The solution is just to upgrade the GitHub Branch Source or the BitBucket Branch Source plugin (as appropriate) to the 2.0.x line.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</dd>\n<dt class=\"hdlist1\">Git Plugin</dt>\n<dd>\n<p>The new releases of this plugin are both API and on-disk compatible with plugins compiled against the previous releases.</p>\n<div class=\"paragraph\">\n<p>The 2.0.x lines of both the GitHub Branch Source and BitBucket Branch Source plugins require that you upgrade your Git Plugin to one of the versions that supports SCM API 2.0.x.\nIn general, the required upgrade will be performed automatically when you upgrade your GitHub Branch Source and BitBucket Branch Source plugins.</p>\n</div>\n</dd>\n<dt class=\"hdlist1\">Mercurial Plugin</dt>\n<dd>\n<p>The new release of this plugin is both API and on-disk compatible with plugins compiled against the previous releases.</p>\n<div class=\"paragraph\">\n<p>The 2.0.x line of the BitBucket Branch Source plugins require that you upgrade your Mercurial Plugin to the 2.0.x line.\nIn general, the required upgrade will be performed automatically when you upgrade your  BitBucket Branch Source plugins.</p>\n</div>\n</dd>\n<dt class=\"hdlist1\">BitBucket Branch Source Plugin</dt>\n<dd>\n<p>The 2.0.x line of this plugin makes on-disk file format changes that mean you will be unable to roll back to the 1.x line after an upgrade without restoring the old data files from a back-up.</p>\n</dd>\n<dt class=\"hdlist1\">GitHub Branch Source Plugin</dt>\n<dd>\n<p>The 2.0.x line of this plugin makes on-disk file format changes that mean you will be unable to roll back to the 1.x line after an upgrade without restoring the old data files from a back-up.</p>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-warning\" title=\"Warning\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>If you upgrade to GitHub Branch Source 2.0.x and you have the GitHub Organization Folders plugin installed, you must upgrade that plugin to the tombstone release.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</dd>\n<dt class=\"hdlist1\">GitHub Organization Folders Plugin</dt>\n<dd>\n<p>The functionality of this plugin has been migrated to the GitHub Branch Source plugin.\nYou will need to upgrade to the tombstone release in order to ensure all the data has been migrated to the classes in the GitHub Branch Source plugin.</p>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-tip\" title=\"Tip\"></i>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>Once you have upgraded to the tombstone version and all GitHub Organization Folders have had a full scan completed successfully, you can disable and uninstall the GitHub Organization Folders plugin.\nThere will be no more releases of this plugin after the tombstone.\nThe tombstone is only required for data migration.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"tldr\"><a class=\"anchor\" href=\"#tldr\"></a>Summary for busy Jenkins Administrators</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Upgrading should make multi-branch projects much better.\nWhen you are ready to upgrade you must ensure that you upgrade all the required plugins.\nIf you miss some, just upgrade them and restart to fix the issue.</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">Folders Plugin</dt>\n<dd>\n<p><span class=\"line-through\">5.16</span> <strong>5.17</strong> or newer</p>\n</dd>\n<dt class=\"hdlist1\">SCM API Plugin</dt>\n<dd>\n<p><span class=\"line-through\">2.0.1</span> <strong>2.0.2</strong> or newer</p>\n</dd>\n<dt class=\"hdlist1\">Branch API Plugin</dt>\n<dd>\n<p><span class=\"line-through\">2.0.0</span> <strong>2.0.2</strong> or newer</p>\n</dd>\n<dt class=\"hdlist1\">Git Plugin</dt>\n<dd>\n<p><strong>Either</strong> <span class=\"line-through\">2.6.2</span> <strong>2.6.4</strong> or newer in the 2.6.x line <strong>or</strong> <span class=\"line-through\">3.0.2</span> <strong>3.0.4</strong> or newer</p>\n</dd>\n<dt class=\"hdlist1\">Mercurial Plugin</dt>\n<dd>\n<p>2.0.0 or newer</p>\n</dd>\n<dt class=\"hdlist1\">GitHub Branch Source Plugin</dt>\n<dd>\n<p><span class=\"line-through\">2.0.0</span> <strong>2.0.1</strong> or newer</p>\n</dd>\n<dt class=\"hdlist1\">BitBucket Branch Source Plugin</dt>\n<dd>\n<p><span class=\"line-through\">2.0.0</span> <strong>2.0.2</strong> or newer</p>\n</dd>\n<dt class=\"hdlist1\">GitHub Organization Folders Plugin</dt>\n<dd>\n<p>1.6</p>\n</dd>\n<dt class=\"hdlist1\">Pipeline Multibranch Plugin</dt>\n<dd>\n<p><span class=\"line-through\">2.10</span> <strong>2.12</strong> or newer</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>If you are using the <a href=\"https://plugins.jenkins.io/blueocean\">Blue Ocean plugin</a></p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">Blue Ocean Plugin</dt>\n<dd>\n<p><strong>1.0.0-b22</strong> or newer</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>Other plugins that may require updating:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">GitHub API Plugin</dt>\n<dd>\n<p>1.84 or newer</p>\n</dd>\n<dt class=\"hdlist1\">GitHub Plugin</dt>\n<dd>\n<p>1.25.0 or newer</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>After an upgrade you will see the data migration warning (see the screenshot in <a href=\"https://issues.jenkins.io/browse/JENKINS-41608\">JENKINS-41608</a> for an example) this is normal and expected.\nThe unreadable data will be removed by the next scan / index or can be removed manually using the <em>Discard Unreadable Data</em> button.\nThe warning will disappear on the next restart after the unreadable data has been removed.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"summary-for-busy-jenkins-users\"><a class=\"anchor\" href=\"#summary-for-busy-jenkins-users\"></a>Summary for busy Jenkins users</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>SCM API 2.0.x adds fine-grained event support.\nThis should significantly improve the responsiveness of multi-branch projects.\nThis should significantly reduce your GitHub API rate limit usage.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you are using the\n<a href=\"https://plugins.jenkins.io/github-branch-source\">GitHub Branch Source</a>\nor\n<a href=\"https://plugins.jenkins.io/github-organization-folder\">GitHub Organization Folders</a>\nplugins then upgrading will <strong>significantly</strong> reduce the API calls made by Jenkins to GitHub.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you are using any of the upgraded SCM plugins (e.g. Git, Mercurial, GitHub Branch Source, BitBucket Branch Source) then upgrading will <strong>significantly</strong> improve the responsiveness to push event notifications.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"summary-for-busy-scm-plugin-developers\"><a class=\"anchor\" href=\"#summary-for-busy-scm-plugin-developers\"></a>Summary for busy SCM plugin developers</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>You should read the new\n<a href=\"https://github.com/jenkinsci/scm-api-plugin/blob/master/docs/implementation.adoc\">documentation</a>\non how plugin developers are supposed to implement the SCM API</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"where-to-now-dear-literate-plugin\"><a class=\"anchor\" href=\"#where-to-now-dear-literate-plugin\"></a>Where to now dear Literate Plugin</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The persistent reader may be wondering what happens now to the Literate plugin.</p>\n</div>\n<div class=\"paragraph\">\n<p>For me, the logical heir of the Literate Plugin is the\n<a href=\"https://plugins.jenkins.io/pipeline-model-definition\">Pipeline Model Definition plugin</a>.\nThis new plugin has the advantage of an easy to read pipeline syntax with the extra functionality that I suspect was preventing people from adopting Literate.</p>\n</div>\n<div class=\"paragraph\">\n<p>The good news is that the Pipeline Model Definition already has 5000 installations as of December 2016 and I expect up-take to keep on growing.</p>\n</div>\n</div>\n</div>","id":"23308d18-32ba-5461-b5aa-74f746e5049f","title":"SCM API turns 2.0 and what that means for you","date":"2017-01-17T00:00:00.000Z","slug":"/blog/2017/01/17/scm-api-2.0-release/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"stephenc","html":"","id":"stephenc","irc":null,"linkedin":null,"name":"Stephen Connolly","slug":"blog/author/stephenc","twitter":"connolly_s"}]}},"pageContext":{"next":"/blog/2017/01/19/converting-conditional-to-pipeline/","previous":"/blog/2017/01/17/Jenkins-is-upgrading-to-Java-8/","id":"23308d18-32ba-5461-b5aa-74f746e5049f"}},
    "staticQueryHashes": ["1271460761","3649515864"]}