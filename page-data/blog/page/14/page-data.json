{
    "componentChunkName": "component---src-templates-blog-list-template-js",
    "path": "/blog/page/14",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2020-01-23T00:00:00.000Z","id":"b56c3926-16c3-522f-ae8f-4b714de4beff","slug":"/blog/2020/01/23/a-new-chapter-for-kohsuke/","strippedHtml":"2020 is going to be a year of change for me.\nBy the end of January, I’ll be officially stepping back from Jenkins,\nswitching my role at CloudBees to an advisor,\nand turning attention to my new startup.\nThe rest of this post is to contextualize this transition, because if you haven’t been working closely with me, this might come across as a surprise.\n\nJenkins has been an amazing journey that never stopped giving.\nI have loved it all - especially meeting the users around the world who made Jenkins what it is today.\nAs the creator of the project, at some point I started wondering how to pass the torch to the next leaders, how to get people to step up and drive it forward.\nToday, thanks to CloudBees and the community, there is a new generation of talented and capable leaders who are passionately driving things forward - and it’s been great to see.\nNewly elected board members, Jenkins X folks, just to name a few.\nThese new people bring new culture and new code, and altogether it has created a positive jolt that pushed Jenkins out of a local optimum I talked about.\nThey have all my support and respect.\nIn reality, my involvement with Jenkins lately has already been largely symbolic, a little bit like an emperor of Japan or a queen of the UK.\nThat’s why this announcement has little practical impact on the forward motion of Jenkins.\n\nSeveral years ago, I used to feel like the sky would fall down if I stepped aside.\nSomewhere in 2019, I suddenly noticed that I wasn’t feeling like that at all anymore.\nThe shift was gradual and steady, so I’m not sure exactly when I crossed the threshold, but in 2019 it was clear I was on the other side.\nThat’s how I knew I could finally end this chapter of my life.\n15 years with Jenkins and 9 years with CloudBees.\nThat is a long time.\n\nI hope you will be wondering what is my new chapter.\nI’m launching a new startup, Launchable, with my old time buddy Harpreet Singh.\nI have known him since my days at Sun Microsystems and JavaEE, and he was my partner in crime at CloudBees to build the Jenkins business from scratch.\nHe went to Atlassian running its BitBucket business for a while, but now he and I are back sitting side by side again.\nA number of CloudBees people invested, including Sacha Labourey,\nBob Bickel,\nand John Vrionis.\n\nThrough Jenkins and CloudBees, I was able to push the state of automation forward in software development.\nSuch automation is producing a lot of data, but we are not using that data to improve our lives.\nIt truly is a wasted gold mine.\nLaunchable is working on harnessing that information to improve developer productivity.\nI wrote a separate blog post to discuss more about my thinking.\n\nLastly, even though I’m moving on from CloudBees as a full-time employee, I’m not completely going away.\nI’ll be still in the CloudBees orbit, as an advisor.\nI’m still very much invested both emotionally and financially in CloudBees.\nI’m still a big fan, and I’ll continue to cheer for them, but from the sideline.\nThe same with Jenkins.\nI’m still on the governance board, ensuring the continuity.\nI’m also still on the Technical Oversight Committee of the Continuous Delivery Foundation,\nthough my chairperson term will expire in March.\n\nI’m incredibly grateful for the undeserved opportunity and the privilege given to me during this chapter.\nI was surrounded by wonderful, inspiring, and talented people, from whom I learned a lot.\nI can only hope that I was able to make a positive impact, and give something back in return to them.\nI won’t name names, but you know who you are, and we’ll stay in touch.\n\nThis year is going to be truly exciting for me. To infinity and beyond!!","title":"A new chapter for Kohsuke","tags":["community","governance","announcement"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2020-01-10T00:00:00.000Z","id":"57fae2bf-06be-518a-aa90-8776f373d812","slug":"/blog/2020/01/10/fosdem-is-coming/","strippedHtml":"FOSDEM 2020 is coming and with it, a lot of great folks come in town.\nIt’s always a great moment to meet Jenkins community members, share stories and get inspired.\nI hope that this year will be as great as it always been and for that, we organize a few things\n\nThings we’ll do\n\nDuring the whole event, we’ll be virtually on the Gitter\n\nOn the Thursday 30 of January, there will be two workshops one about Jenkins Pipelines lead by Mark Waite, and a second one about JenkinsX by Viktor Farcic.\n\nOn the Friday 31 of January, the Jenkins project will hold a Contributor Summit where we invite active contributors and those who are interested in working on foundation projects, e.g. key architecture changes and projects (UX, JCasC, Cloud native Jenkins, etc.), governance, infrastructure. There will be no user-focused topics (no presentations, no trainings, etc.) but we will focus on defining key priorities for the project, building a roadmap and resolving issues we have in the project at the moment.\nWe’ll end up the day with our now traditional Orval and flemish beef stew at Le Roy d’Espagne\n\nFinally the FOSDEM, the 01 and 02 of February, we’ll all be at FOSDEM. So come and say \"hi\" at the Jenkins/JenkinsX stand, inside the CICD Devroom.\n\nOr just come and share beers\n\nCheers","title":"FOSDEM 2020 is coming","tags":["fosdem","events","community","outreach-programs"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/f6d731c7e61ff5c7f0ddc7f2b8a6671e/bf8e1/olblak.png","srcSet":"/gatsby-jenkins-io/static/f6d731c7e61ff5c7f0ddc7f2b8a6671e/914ee/olblak.png 32w,\n/gatsby-jenkins-io/static/f6d731c7e61ff5c7f0ddc7f2b8a6671e/1c9ce/olblak.png 64w,\n/gatsby-jenkins-io/static/f6d731c7e61ff5c7f0ddc7f2b8a6671e/bf8e1/olblak.png 128w,\n/gatsby-jenkins-io/static/f6d731c7e61ff5c7f0ddc7f2b8a6671e/acb7c/olblak.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/f6d731c7e61ff5c7f0ddc7f2b8a6671e/ef6ff/olblak.webp 32w,\n/gatsby-jenkins-io/static/f6d731c7e61ff5c7f0ddc7f2b8a6671e/8257c/olblak.webp 64w,\n/gatsby-jenkins-io/static/f6d731c7e61ff5c7f0ddc7f2b8a6671e/6766a/olblak.webp 128w,\n/gatsby-jenkins-io/static/f6d731c7e61ff5c7f0ddc7f2b8a6671e/22bfc/olblak.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"olblak","html":"<div class=\"paragraph\">\n<p>Olivier is the Jenkins infrastructure officer and Senior Operations Engineer at CloudBees.\nAs a regular contributor to the Jenkins infrastructure projects, he works on a wide range of tasks from services reliability to applications maintenance.</p>\n</div>","id":"olblak","irc":"olblak","linkedin":null,"name":"Olivier Vernin","slug":"/blog/authors/olblak","twitter":"0lblak"}]}},{"node":{"date":"2020-01-08T00:00:00.000Z","id":"9f6eb48f-3ae6-5fa4-8bc2-bee1eeeed2d0","slug":"/blog/2020/01/08/atlassians-new-bitbucket-server-integration-for-jenkins/","strippedHtml":"We know that for many of our customers Jenkins is incredibly important and its integration with Bitbucket Server is a key part of their development workflow.\nUnfortunately, we also know that integrating Bitbucket Server with Jenkins wasn’t always easy – it may have required multiple plugins and considerable time.\nThat’s why earlier this year we set out to change this.\nWe began building our own integration, and we’re proud to announce that v1.0 is out.\n\nThe new Bitbucket Server integration for Jenkins plugin, which is built and supported by Atlassian, is the easiest way to link Jenkins with Bitbucket Server.\nIt streamlines the entire set-up process, from creating a webhook to trigger builds in Jenkins, to posting build statuses back to Bitbucket Server.\nIt also supports smart mirroring and lets Jenkins clone from mirrors to free up valuable resources on your primary server.\n\nOur plugin is available to install through Jenkins now.\nWatch this video to find out how, or read the BitBucket Server solution page to learn more about it.\n\nOnce you’ve tried it out we’d love to hear any feedback you have.\nTo share it with us, visit https://issues.jenkins.io and create an issue using the component atlassian-bitbucket-server-integration-plugin.","title":"Atlassian's new Bitbucket Server integration for Jenkins","tags":["bitbucket","pipeline","plugins"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#888888","images":{"fallback":{"src":"/gatsby-jenkins-io/static/6ccab92416b4e5b2a4498ee23e6d735c/19e71/dkjellin.jpg","srcSet":"/gatsby-jenkins-io/static/6ccab92416b4e5b2a4498ee23e6d735c/77b35/dkjellin.jpg 32w,\n/gatsby-jenkins-io/static/6ccab92416b4e5b2a4498ee23e6d735c/d4a57/dkjellin.jpg 64w,\n/gatsby-jenkins-io/static/6ccab92416b4e5b2a4498ee23e6d735c/19e71/dkjellin.jpg 128w,\n/gatsby-jenkins-io/static/6ccab92416b4e5b2a4498ee23e6d735c/68974/dkjellin.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/6ccab92416b4e5b2a4498ee23e6d735c/ef6ff/dkjellin.webp 32w,\n/gatsby-jenkins-io/static/6ccab92416b4e5b2a4498ee23e6d735c/8257c/dkjellin.webp 64w,\n/gatsby-jenkins-io/static/6ccab92416b4e5b2a4498ee23e6d735c/6766a/dkjellin.webp 128w,\n/gatsby-jenkins-io/static/6ccab92416b4e5b2a4498ee23e6d735c/22bfc/dkjellin.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"dkjellin","html":"<div class=\"paragraph\">\n<p>Daniel has been with <a href=\"https://www.atlassian.com\">Atlassian</a> over ten years working on a variety of different products. Lately he has led the work to write a new and improved integration between <a href=\"https://www.atlassian.com/software/bitbucket/enterprise/data-center\">Bitbucket Server</a> and Jenkins.</p>\n</div>","id":"dkjellin","irc":null,"linkedin":null,"name":"Daniel Kjellin","slug":"/blog/authors/dkjellin","twitter":null}]}},{"node":{"date":"2020-01-07T00:00:00.000Z","id":"30b969d7-465b-5cae-b8a9-9a72456f49e4","slug":"/blog/2020/01/07/happy-new-year/","strippedHtml":"Jenkins project congratulates all users and contributors with the New Year!\nLet’s take a look at some changes this year.\n\nHighlights\n\nWe celebrated 15 years of Jenkins\n\nWe had first ever Governance Board and Officer elections\n\nJenkins project joined the Continuous Delivery Foundation (CDF)\n\nWe released Java 11 support in Jenkins\n\nJenkins X has graduated as a Jenkins sub-project and became a new project under umbrella of CDF\n\nIn October 2019 we reached the record high number of contributions: 915 unique contributors, 124 of them were first-timers\n\nWe started new special interest groups for Documentation and User Experience.\n\nA new position of the Documentation officer was introduced to highlight an important role of documentation in the project\n\nWe ran multiple mentorship programs with 12 mentees in total: Google Summer of Code, Hacktoberfest and Outreachy\n\nIf you are interested to know more about Jenkins features introduced in 2019,\nstay tuned for a separate blog post about it (coming soon!).\n\nProject updates\n\nHighlights above do not cover all advancements we had in the project.\nBelow you can find slides from the Jenkins contributor summit in Lisbon.\nThere we had project updates by officers, SIG and sub-project leaders.\nSee the slide deck to know about: Jenkins Core, Pipeline, Configuration-as-Code, Security, UX Overhaul, Jenkins Infrastructure, platform support and documentation.\n\nSome stats and numbers\n\nIf this section seems to be too long for you, here is some infographic prepared by Tracy Miranda.\nAs you may see, Jenkins is pretty big :)\n\nCommunity.\nOver the past year we had 5433 contributors in GitHub repositories (committers, reviewers, issue submitters, etc.).\nWe had 1892 unique committers who created 7122 pull requests and 45484 commits, bots excluded.\nContributors represent 273 companies and 111 countries, 8% of contributors are recognized as independent.\nThe most active repositories were Jenkins Core and jenkins.io.\nThe most active month was October 2019 when we reached the record high number of contributions: 915 unique contributors, 124 of them were first-timers, thanks to Hacktoberfest!.\n\nJenkins core.\nIn 2019 Jenkins core had 54 weekly and 13 LTS releases with several hundreds of notable fixes/enhancements.\nThere was a login screen extensibility rework, many update manager and administrative monitors improvements.\nWe also introduced support for user timezones, not speaking of emojis support 🥳.\nThere was also a lot of housekeeping work: better APIs, codebase refresh, cleaning up static analysis warnings and removing deprecated features like Remoting CLI.\nThe core’s components also got major updates.\nOnly Jenkins Remoting got 11 releases with stability improvements and new features like support of inbound connections to headless Jenkins controllers.\nThere are also major incoming features like jep:222[WebSocket Services support], UI look&feel updates, jira:JENKINS-12548[Readonly system configuration support], Docker images for new platforms like Arm.\nTo facilitate further changes we created a new Core pull request reviewers team and added 9 contributors there.\n\nPlugins.\nThere were 2654 plugin releases, and 157 NEW plugins have been hosted in the Update Center.\nJenkins ecosystem got a lot of new integrations with Development and DevOps tools.\nAlso, warm welcome back to the Scriptler Plugin which was depublished in 2017 due to security issues.\nIf you are afraid about such plugin numbers and dependency management, there is a new Plugin Installation Manager CLI Tool which should help Jenkins users to manage plugins more efficiently.\n\nSecurity.\nIt was a hot year for the Jenkins Security Team.\nThere were 5 security advisories for the core and 20 - for plugins.\nIn total we disclosed 288 vulnerabilities across the project, including some backlog cleaning for unmaintained plugins.\nScript Security Plugin was the hottest plugin with 10 critical fixes addressing various sandbox bypass vulnerabilities.\nPlain text storage and unprotected credentials were the most popular vulnerability type 120 disclosures in 2019.\nIt was made possible by hundreds of reports submitted by contributors after code surveys,\nspecial thanks to Viktor Gazdag who reported the most of the issues and became the Jenkins 2019 Security MVP (check out his story here).\n\nInfrastructure.\nGot Jenkins? If so, you rely on Jenkins update centers, website and issue tracker.\nAll these and many other services are maintained by the Jenkins Infrastructure Team.\nThis year the team handled more than 400 requests in the bugtracker, and many other informal requests.\nIn total, more than 30 people contributed to Jenkins infrastructure this year (website content is excluded).\nWe also deployed 4 new services, migrated 7 services from Azure Container Service to Azure Kubernetes Service and updated many other services.\nMore changes will happen in the next months, and we are looking for new INFRA team members!\n\nDocumentation.\nOnly last quarter we had 178 contributors to Jenkins documentation. It includes jenkins.io and other documentation hosted on GitHub, Wiki is not included.\nThere is also ongoing migration plugin documentation from Jenkins Wiki to GitHub ( announcement).\nSince the beginning of the project in Sep 2019, more than 150 plugin were migrated, and they got significant documentation revamp during the migration.\nYou can see the current status here.\nWe also work on introducing changelog automation in the project.\n123 plugins have already adopted the new changelog tools, powered by Release Drafter.\nAlso, we had more than 60 technical blog posts published on jenkins.io.\n\nConfiguration as Code was one of the most popular areas this year.\nJenkins Configuration as Code Plugin had more than 30 releases with new features and bug fixes.\nMore than 50 plugins have been also updated in order to offer better configuration-as-code support.\nAs a result, the JCasC Plugin got massive adoption this year (from 2000 to almost 8000 installations),\nand now it becomes a de-facto standard for managing Jenkins as code.\nThis year we also ran our very first CommunityBridge project devoted to JCasC Schema validation and developer tools.\n\nEvents and outreach programs.\nIn 2019 we participated in multiple conferences, including FOSDEM, DevOps World | Jenkins World, SCALE.\nMore than 40 Jenkins Area Meetups were organized across the world, and there were many other meetups devoted to Jenkins.\nWe also kept expanding our outreach programs.\nIn total we had 12 students who participated in Google Summer of Code, Outreachy and newly introduced Community Bridge.\nWe also had the biggest ever Hacktoberfest with 664 pull requests and 102 participants.\nThese outreach programs help us to deliver new features in Jenkins.\nFor example, this year we added Multi-branch Pipeline support for Gitlab and a new Plugin Installation Manager Tool during GSoC,\nand Outreachy resulted in a new Audit Log Plugin.\n\nWhere did we get those stats?\nGitHub stats came from the CDF DevStats service.\nThese stats include all repositories in the jenkinsci organization and most popular repositories in jenkins-infra, Jenkins X and other organizations/repositories within the project are not included.\nOther stats came from project reports, component changelogs, Jenkins usage statistics service, plugin releases history.\n\nWhat’s next?\n\nYear 2020 will be pretty busy for the Jenkins project.\nThere are many long-overdue changes in the project, which need to happen if we want the project to succeed.\nAs it was written Board elections blogpost,\nthere are many areas to consider: UX revamp, cloud native Jenkins, pluggable storage, etc.\nIn the coming months there will be a lot of discussions in mailing lists and special interest groups,\nand we invite all teams to work on their roadmaps and to communicate them in the community.\n\nNext month we will participate in FOSDEM, and there will be a Jenkins stand there.\nOn January 31st we will also host a traditional contributor summit in Brussels,\nwhere we will talk about next steps for the project, in terms of technical roadmaps and the project governance.\nIf you are interested in Jenkins, stop by at our community booths and join us at the summit!\nSee this thread for more information.\n\nWe also plan to continue all outreach programs.\nAt the moment we are looking for Google Summer of Code 2020 mentors and project ideas ( announcement),\nand we will be also interested to consider non-coding projects as a part of other programs like CommunityBridge.\nWe also work on improving contribution guidelines for newcomers and expert contributors.\nIf you are interested, please contact the Advocacy and Outreach SIG.\n\nAnd even more\n\nThis blog post does not provide a full overview of what changed in the project.\nThe Jenkins project consists of more than 2000 plugins and components which are developed by thousands of contributors.\nThanks to them, a lot of changes happen in the project every day.\nWe are cordially grateful to everybody who participates in the project, regardless of contribution size.\nEverything matters: new features, bug fixes, documentation, blog posts, well reported issues, Stackoverflow responses, etc.\nTHANKS A LOT FOR ALL YOUR CONTRIBUTIONS!\n\nSo, keep updating Jenkins and exploring new features.\nAnd stay tuned, there is much more to come next year!","title":"Happy New Year! 2019/2020 edition","tags":["community","new-year-blogpost","governance"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2019-12-20T00:00:00.000Z","id":"e3541aaa-92ad-5cb5-8924-7de87ca344b2","slug":"/blog/2019/12/20/call-for-mentors/","strippedHtml":"Google Summer of Code (GSoC)\nis as program where students are paid a stipend by Google to work on a free open source project.\nStudents work on the project full-time for four months (May to August).\nMentors are actively involved with students starting at the end of February when students start to work on and submit their applications.\n(see the timeline)\n\nWe are looking for project ideas and mentors to participate in GSoC 2020.\nGSoC project ideas are coding projects that university or college students can accomplish in about four months.\nThe coding projects can be new features, plugins, test frameworks, infrastructure, etc.\nAnyone can submit a project idea, but of course we like it even better if you offer to mentor your project idea.\n\nWe accept new project ideas at any time,\nBUT we need a series of ideas READY before February 5th, 2020 at 7pm UTC,\nwhich is the deadline for the Jenkins organization to apply to the GSoC program.\nSo send us your project ideas before the beginning of February so they can get a proper review by the GSoC committee and by the community.\n\nHow to submit a project idea\n\nFor 2020, we have simplified the process.\nSimply create a pull-request with your idea in a.adoc file\nin the idea folder.\nIt is no longer necessary to submit a Google Doc, but it will still work if you want to do that.\nSee the instructions on submitting ideas which include an.adoc template and some examples.\n\nCurrent list of ideas\n\nWe currently have a list of project ideas for students to browse,\ncopied from last year. Note that this list is subject to change.\n\nWhat does mentoring involve?\n\nPotential mentors are invited to read the information for mentors.\nNote that being a GSoC mentor does not require expert knowledge of Jenkins.\nMentors do not work alone. We make sure that every project has at least two mentors.\nGSoC org admins will help to find technical advisers, so you can study together with your students.\n\nMentoring takes about 5 to 8 hours of work per week (more at the start, less at the end).\nMentors provide guidance, coaching, and sometimes a bit of cheerleading.\nThey review student proposals, pull-requests and the students presentations\nat the evaluation phase.\nThey fill in the Google provided evaluation report form at the end of coding periods.\n\nWhat do you get in exchange?\n\nIn return of mentoring, a student works on your project full time for four months.\nThink about the projects that you’ve always wanted to do but never had the time…​\n\nHaving a mentoring opportunity also means that you get to improve your management and people skills.\n\nAs well, up to two mentors per organization are eligible to participate in the Google Mentor Summit taking place each year.\nThe Jenkins Org Admins try to send different mentors each year.\nIt is also possible to win an additional seat at the summit in the \"last minute draw\"\n(Google draws mentors at random to fill the cancellations and empty seats).\n\nSee this post from one of the 2019 mentors\non the kind of experience this was.\n\nGSoC is a pretty good return on the investment!\n\nFor any question, you can find the GSoC Org Admins,\nmentors and participants on the GSoC SIG Gitter chat.","title":"Google Summer of Code 2020 call for Project ideas and Mentors","tags":["gsoc","gsoc2020","community","events","developer"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#7898d8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/7b80f/martinda.png","srcSet":"/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/4c2a5/martinda.png 32w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/8bef2/martinda.png 64w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/7b80f/martinda.png 128w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/2864c/martinda.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/5abcf/martinda.webp 32w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/410d2/martinda.webp 64w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/6f814/martinda.webp 128w,\n/gatsby-jenkins-io/static/54282c2d627080ad398fbe9d5907bbf1/ca864/martinda.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":136}}},"blog":null,"github":"martinda","html":"<div class=\"paragraph\">\n<p>Martin is a Jenkins community member. He participates since 2016 in the Jenkins GSoC program as a mentor, and more recently as an organization admin.\nHe currrently works in ASIC/FPGA Development Automation, using Jenkins, Gradle, Make, Artifactory, and a million other tools and languages.</p>\n</div>","id":"martinda","irc":"martinda","linkedin":null,"name":"Martin d'Anjou","slug":"/blog/authors/martinda","twitter":"martindanjou14"}]}},{"node":{"date":"2019-12-16T00:00:00.000Z","id":"0695b632-9d61-5e3b-8e0a-2ff9637b97ae","slug":"/blog/2019/12/16/board-election-results/","strippedHtml":"The Jenkins community has recently completed the 2019 elections for Board and Officer positions.\nThe call for nominations concluded on Nov 25 and the election results were announced in the developer mailing list on Nov 28.\n\nOn behalf of the Jenkins community, we congratulate all elected board members and officers!\nWe also thank all contributors who participated this year: all nominees and hundreds of voters.\nThese are the first elections ever conducted by the Jenkins project, and it is a big milestone for the community.\n\nElection results:\n\nUllrich Hafner, Alex Earl and Oleg Nenashev will join Kohsuke Kawaguchi and R. Tyler Croy on the Jenkins Governance Board\n\nDaniel Beck was elected as Security Officer\n\nAlyssa Tong was elected as Events Officer\n\nNominations for Infrastructure, Release and Documentation officer positions were uncontested.\n\nOlivier Vernin was elected as Infrastructure Officer (uncontested)\n\nOliver Gondža was elected as Release Officer (uncontested)\n\nMark Waite was elected as Documentation Officer (uncontested)\n\nIf you are interested to learn more, please see the blog post below.\n\nBoard election details\n\nThe voting results are:\n\nOleg Nenashev (Condorcet winner: wins contests with all other choices)\n\nMark Waite loses to Oleg Nenashev by 181–127\n\nUllrich Hafner loses to Oleg Nenashev by 198–115, loses to Mark Waite by 171–133\n\nAlex Earl loses to Oleg Nenashev by 225–82, loses to Ullrich Hafner by 168–128\n\nOliver Gondža loses to Oleg Nenashev by 227–76, loses to Alex Earl by 151–136\n\nZhao Xiaojie (aka Rick) loses to Oleg Nenashev by 233–82, loses to Oliver Gondža by 160–131\n\nAlthough Mark Waite came second in the voting results, being on the board would violate the Corporate Involvement clause which states that \"the number of board members affiliated with one company must be less than 50%\".\nBased on that rule, the third seat Alex Earl will join the Jenkins board.\nAt the same time, Mark Waite will take the newly introduced role of Documentation officer.\n\nAll new board members are elected for a 2-year term, unless they step down earlier.\nThe estimated end of term for them is December 02, 2021.\nThe actual date will depend on the election schedule in 2021.\n\nOfficer election details\n\nWe have reelected all 5 officers for the new 1-year term, with the estimated end of term on Dec 02, 2020.\n\nAlyssa Tong won the biggest support as an Events officer ( voting results)\n\nDaniel Beck won the biggest support as a Security officer ( voting results)\n\nWhen an officer position has only one candidate that is willing to accept the nomination, there is no reason to vote on that position.\nThis year some nominees declined the nominations before the election happened, and 3 officer nominations were finally uncontested:\nOlivier Vernin - infrastructure officer,\nOliver Gondža - release officer,\nMark Waite - documentation officer.\n\nStatistics\n\nHere are some voting stats from these elections:\n\nTotal number of eligible accounts: 91,015\n\nTotal number of registered voters: 831\n\nTotal number of votes: 343\n\nThis election was hosted on the Condorcet Internet Voting Service (CIVS).\nWhile preparing for the elections, we discovered that CIVS is unable to support our large number of eligible voters.\nWe created a voter registration system to identify voters and then registered those voters with CIVS.\nThe workaround required a slight voting delay.\nSpecial thanks to Olivier Vernin and Tracy Miranda who made it possible!\n\nWhat’s next for the board?\n\nIn short term, the renewed board will focus on running the Jenkins governance processes (meetings, budget approvals, funding, etc.) and defining next steps towards improving the project.\nOne of the priorities will be to organize knowledge and permission transfers to new board members so that they can be effective in their new roles.\nThere are also pending activities like Jenkins' transition to Continuous Delivery Foundation which require attention from board members.\n\nFor longer term, there are some ideas floating around:\n  roadmap for key components,\n  long-anticipated architecture changes (UX revamp, pluggable storage, cloud native Jenkins),\n  adopting Linux Foundation best practices like Core Infrastructure Initiative,\n  contributor onboarding,\n  etc.\nSuch initiatives are instrumental for further evolvement of the Jenkins project,\nand the board could help to facilitate them in the community.\nThe ideas will be discussed in mailing lists and during governance meetings.\nIf you would like to share your vision and ideas about what’s needed in the project,\nit is definitely a great time to do so!\n\nFeedback\n\nWe will also also plan to conduct a public retrospective at one of the next Advocacy and Outreach SIG meetings.\n\nJenkins project plans to conduct elections every year.\nWe appreciate and welcome any feedback regarding the election process.\nPlease use the following channels for feedback and suggestions:\n\nThere is a Retrospective document in Google Docs.\nEveryone can suggest changes in this document, and we will integrate them.\n\nFor ideas about the project improvements and next steps for the board,\nplease use the Jenkins Developers mailing list.\n\nFor private feedback, please send an email to the Jenkins Board or to Tracy Miranda.\n\nReferences\n\nJenkins Governance Board\n\nJenkins Board Election Process\n\nJenkins Officers\n\n2019 election announcement\n\n2019 election updates on Nov 08\n\nRetrospective document","title":"2019 Jenkins Board and Officer Elections Results","tags":["community","governance","governance-board","elections"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png","srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/914ee/oleg_nenashev.png 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/1c9ce/oleg_nenashev.png 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/bf8e1/oleg_nenashev.png 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/acb7c/oleg_nenashev.png 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/ef6ff/oleg_nenashev.webp 32w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/8257c/oleg_nenashev.webp 64w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/6766a/oleg_nenashev.webp 128w,\n/gatsby-jenkins-io/static/611f92ce782a36a3a1454a29c79753db/22bfc/oleg_nenashev.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://oleg-nenashev.github.io/","github":"oleg-nenashev","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer and board member, open source software and open hardware advocate, TOC chair in the Continuous Delivery Foundation.\nOleg started using Hudson for Hardware/Embedded projects in 2008 and became an active Jenkins contributor in 2012.\nNowadays he maintains [Jenkinsfile Runner](<a href=\"https://github.com/jenkinsci/jenkinsfile-runner/\" class=\"bare\">https://github.com/jenkinsci/jenkinsfile-runner/</a>),\ncontributes to several Jenkins <a href=\"/sigs\">SIGs</a> and outreach programs (<a href=\"/projects/gsoc\">Google Summer of Code</a>, <a href=\"/events/hacktoberfest\">Hacktoberfest</a>)\nand organizes <a href=\"/projects/jam/\">Jenkins meetups</a> in Switzerland and Russia.\nOleg works on open source programs and [Keptn](<a href=\"https://keptn.sh/\" class=\"bare\">https://keptn.sh/</a>) at the [Dynatrace](<a href=\"https://dynatrace.com\" class=\"bare\">https://dynatrace.com</a>), Open Source Program Office.</p>\n</div>","id":"oleg_nenashev","irc":"oleg_nenashev","linkedin":"onenashev","name":"Oleg Nenashev","slug":"/blog/authors/oleg_nenashev","twitter":"oleg_nenashev"}]}},{"node":{"date":"2019-12-14T00:00:00.000Z","id":"646ce24b-257b-5341-bb67-a06739313fd5","slug":"/blog/2019/12/14/generic-webhook-trigger-plugin/","strippedHtml":"Table of Contents\n\nThe Problem\n\nCode Duplication And Security\nA Branch Is Not A Feature\nDocumentation\n\nThe Solution\n\nCode Duplication And Security\nA Branch Is Not A Feature\nDocumentation\n\nThis post will describe some common problems I’ve had with Jenkins and how I solved them by developing Generic Webhook Trigger Plugin.\n\nThe Problem\n\nI was often struggling with the same issues when working with Jenkins:\n\nCode duplication and security - Jenkinsfiles in every repository.\n\nA branch is not a feature - Parameterized jobs on master branch often mix parameters relevant for different features.\n\nPoorly documented trigger plugins - Proper documented services but poorly documented consuming plugins.\n\nCode Duplication And Security\n\nHaving Jenkinsfiles in every Git repository allows developers to let those files diverge. Developers pushes forward with their projects and it is hard to maintain patterns to share code.\n\nI have, almost, solved code duplication with shared libraries but it does not allow me to setup a strict pattern that must be followed. Any developer can still decide to not invoke the features provided by the shared library.\n\nThere is also the security aspect of letting developers run any code from the Jenkinsfiles. Developers might, for example, print passwords gathered from credentials. Letting developers execute any code on the Jenkins nodes just does not seem right to me.\n\nA Branch Is Not A Feature\n\nIn Bitbucket there are projects and each project has a collection of git repositories. Something like this:\n\nPROJ_1\n\nREPO_1\n\nREPO_2\n\nPROJ_2\n\nREPO_3\n\nLets think about some features we want to provide for these repositories:\n\nPull request verification\n\nBuilding snapshot (or pre release if you will)\n\nBuilding releases\n\nIf the developers are use to the repositories being organized like this in Bitbucket, should we not organize them the same way in Jenkins? And if they browse Jenkins should they not find one job per feature, like pull-request, snapshot and release? Each job with parameters only relevant for that feature. I think so! Like this:\n\n/ - Jenkins root\n\n/PROJ_1 - A folder, lists git repositories\n\n/PROJ_1/REPO_1 - A folder, lists jobs relevant for that repo.\n\n/PROJ_1/REPO_1/release - A job, performs releases.\n\n/PROJ_1/REPO_1/snapshot - A job, performs snapshot releases.\n\n/PROJ_1/REPO_1/pull-request - A job, verifies pull requests.\n\n…​\n\nIn this example, both snapshot and release jobs might work with the same git branch. The difference is the feature they provide. Their parameters can be well documented as you don’t have to mix parameters relevant for releases and those relevant for snapshots. This cannot be done with Multibranch Pipeline Plugin where you specify parameters as properties per branch.\n\nDocumentation\n\nWebhooks are often well documented in the services providing them. See:\n\nBitbucket Cloud\n\nBitbucket Server\n\nGitHub\n\nGitLab\n\nGogs and Gitea\n\nAssembla\n\nJira\n\nIt bothered me that, even if I understood these webhooks, I was unable to use them. Because I needed to perform development in the plugin I was using in order to provide whatever value from the webhook to the build. That process could take months from PR to actual release. Such a simple thing should really not be an issue.\n\nThe Solution\n\nMy solution is pretty much back to basics : We have an automation server (Jenkins) and we want to trigger it on external webhooks. We want to gather information from that webhook and provide it to our build. In order to support it I have created the Generic Webhook Trigger Plugin.\n\nThe latest docs are available in the repo and I also have a fully working example with GitLab implemented using configuration-as-code. See the repository here.\n\nCode Duplication And Security\n\nI establish a convention that all developers must follow. Instead of letting the developers explicitly invoke the infrastructure from Jenkinsfiles. There are rules to follow, like:\n\nAll git repositories should be built from the root of the repo.\n\nIf it contains a gradlew\n\nBuild is done with./gradlew build\n\nRelease is done with./gradlew release\n\n…​ and so on\n\nIf it contains a package.json\n\nBuild is done with npm run build\n\nRelease is done with npm run release\n\n…​ and so on\n\nWith these rules, pipelines can be totally generic and no Jenkinsfiles are needed in the repositories. Some git repositories may, for some reason, need to disable test cases. That can be solved by allowing repositories to add a special file, perhaps jenkins-settings.json, let the infrastructure discover and act on its content.\n\nThis also helps the developers even when not doing CI. When they clone a new, to them unknown, repository they will know what commands can be issued and their semantics.\n\nA Branch Is Not A Feature\n\nI implement:\n\nJenkins job configurations - With Job DSL.\n\nJenkins build process - With Pipelines and Shared Library.\n\nBy integrating with the git service from Job DSL I can automatically find the git repositories. I create jobs dynamically organized in folders. Also invoking the git service to setup webhooks triggering those jobs. The jobs are ordinary pipelines, not multibranch, and they don’t use Jenkinsfile from Git but instead Jenksinfile configured in the job using Job DSL. So that all job configurations and pipelines are under version control. This is all happening here.\n\nDocumentation\n\nThe plugin uses JSONPath, and also XPath, to extract values from JSON and provide them to the build. Letting the user pick whatever is needed from the webhook. It also has a regular expression filter to allow not triggering for some conditions.\n\nThe plugin is not very big, just being the glue between the webhook, JSONPath / XPath and regular expression. All these parts are very well documented already and I do my best supporting the plugin. That way this is a very well documented solution to use!","title":"Generic Webhook Trigger Plugin","tags":["webhooks","trigger","pipeline","security","scalability"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#98a8c8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/b56c7aed67e544184e7807e4f2d189f6/19e71/tomasbjerre.jpg","srcSet":"/gatsby-jenkins-io/static/b56c7aed67e544184e7807e4f2d189f6/77b35/tomasbjerre.jpg 32w,\n/gatsby-jenkins-io/static/b56c7aed67e544184e7807e4f2d189f6/d4a57/tomasbjerre.jpg 64w,\n/gatsby-jenkins-io/static/b56c7aed67e544184e7807e4f2d189f6/19e71/tomasbjerre.jpg 128w,\n/gatsby-jenkins-io/static/b56c7aed67e544184e7807e4f2d189f6/68974/tomasbjerre.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/b56c7aed67e544184e7807e4f2d189f6/ef6ff/tomasbjerre.webp 32w,\n/gatsby-jenkins-io/static/b56c7aed67e544184e7807e4f2d189f6/8257c/tomasbjerre.webp 64w,\n/gatsby-jenkins-io/static/b56c7aed67e544184e7807e4f2d189f6/6766a/tomasbjerre.webp 128w,\n/gatsby-jenkins-io/static/b56c7aed67e544184e7807e4f2d189f6/22bfc/tomasbjerre.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":"https://bjurr.com/","github":"tomasbjerre","html":"<div class=\"paragraph\">\n<p>Tomas Bjerre is an experienced fullstack software developer. Been working full time since 2010 after graduating with a masters degree in computer science from Lund University (Faculty of Engineering, LTH). Is currently working full time and maintaining a bunch of Jenkins plugins on his spare time.</p>\n</div>","id":"tomasbjerre","irc":null,"linkedin":"tomasbjerre","name":"Tomas Bjerre","slug":"/blog/authors/tomasbjerre","twitter":null}]}},{"node":{"date":"2019-12-10T00:00:00.000Z","id":"ed404ce2-c53c-5f43-ae06-381e9a803bce","slug":"/blog/2019/12/10/introducing-aws-secrets-manager-credentials-provider-plugin/","strippedHtml":"API keys and secrets are difficult to handle safely, and probably something you avoid thinking about. In this post I’ll show how the new AWS Secrets Manager Credentials Provider plugin allows you to marshal your secrets into one place, and use them securely from Jenkins.\n\nWhen CI/CD pipelines moved to the public cloud, credential management did not evolve with them. If you’re in this situation, you may have seen a number of tactical workarounds to keep Jenkins builds talking to the services they depend on. The workarounds range from bad (hardcoding plaintext secrets into Git) to merely painful (wrangling Hiera EYAML), but their common feature is that they tend to make copies of secrets beyond the reach of automation. This increases their attack surface, makes routine key rotation impractical, and makes remediation difficult after a breach.\n\nThe good news is that there is a better way!\n\nAWS Secrets Manager is a comprehensive solution for secure secret storage. You define a secret just once for your whole AWS account, then you give your consumers permission to use the secrets. Secrets Manager lets you manage a secret entry (name and metadata) separately from its value, and it integrates with other AWS services that you already use:\n\nSecret entry management: Manual (Web console, AWS CLI) or with an infrastructure management tool ( Terraform, CloudFormation etc.)\n\nSecret value management: Manual (Web console, AWS CLI) or automatic (secret rotation Lambda function).\n\nAccess control: AWS IAM policies (for both applications and human operators).\n\nSecret encryption: Amazon KMS automatically encrypts the secret value. Use either the account’s default KMS key, or a customer-managed KMS key.\n\nAuditing: AWS CloudTrail and CloudWatch Events.\n\nA couple of teams in my company started to use Secrets Manager from Jenkins jobs by calling the AWS CLI, but this remained a niche approach as it was quite unwieldy. There was clearly an appetite to integrate key developer apps with a centralised secrets store, but production-ready integrations were needed for wider adoption. So this year I created the AWS Secrets Manager Credentials Provider plugin for Jenkins, with help from friends in the Jenkins community, to do exactly that.\n\nThis is how you set it up…​\n\nInstall the plugin from the Jenkins update center.\n\nGive Jenkins read-only access to Secrets Manager with an IAM policy.\n\n(Optional) Configure the plugin, either through the Global Configuration screen or Jenkins Configuration As Code.\n\nThis is how you use it…​\n\nCreate your build secrets in AWS Secrets Manager. (You can start by uploading secrets via the AWS CLI. More sophisticated methods of secret creation are also available.)\n\nView the credentials in the Jenkins UI, to check that Jenkins can see them.\n\nBind the credentials by ID in your Jenkins job.\n\nThe provider supports the following standard Jenkins credential types:\n\nSecret Text\n\nUsername With Password\n\nSSH User Private Key\n\nPKCS#12 Certificate\n\nAnd it has powerful advantages over quick-fix tactical solutions:\n\nYour Jenkins jobs consume the credentials with no knowledge of Secrets Manager, so they stay vendor-independent.\n\nThe provider caches relevant Secrets Manager API calls, for a quicker and more reliable experience.\n\nThe provider integrates with the ecosystem of existing Jenkins credential consumers, such as the Git and SSH Agent plugins.\n\nThe provider records credential usage in the central Jenkins credentials tracking log.\n\nJenkins can use multiple credentials providers concurrently, so you can incrementally migrate credentials to Secrets Manager while consuming other credentials from your existing providers.\n\nAfter the plugin’s first public release, developers at other companies adopted it too. It has had contributions so far from people at Elsevier, GoDaddy, and Northeastern University, as well as the fantastic Jenkins core team. We even got fan mail for our work!\n\nIn enterprise security, \"The important things are always simple. The simple things are always hard. The easy way is always mined.\" ( @thegrugq) It’s easy to buy a shiny ‘next generation' security appliance and drop it into your network. But it’s hard to embed the security fundamentals (like secrets management, OS patching, secure development) across your organisation. This Jenkins plugin is part of the effort [ 1 ] to take one of the persistent hard problems in security, and make it easier for everyone.\n\n1. If you’re on Azure or you run most of your workload on Kubernetes, check out the Azure Credentials Plugin and the Kubernetes Credentials Provider Plugin.","title":"Introducing the AWS Secrets Manager Credentials Provider for Jenkins","tags":["pipeline","plugins","aws","credentials","security"],"authors":[{"avatar":null,"blog":null,"github":"chriskilding","html":"","id":"chriskilding","irc":null,"linkedin":"chriskilding","name":"Chris Kilding","slug":"/blog/authors/chriskilding","twitter":null}]}}]}},"pageContext":{"limit":8,"skip":104,"numPages":101,"currentPage":14}},
    "staticQueryHashes": ["3649515864"]}