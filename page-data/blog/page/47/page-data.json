{
    "componentChunkName": "component---src-templates-blog-list-template-js",
    "path": "/blog/page/47",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2016-09-06T00:00:00.000Z","id":"8ad9f6bc-3bc6-5882-82e5-d2a281d96faa","slug":"/blog/2016/09/06/jenkins-world-speaker-blog-pipeline-model-definition/","strippedHtml":"This is a guest post by Jenkins World speaker Andrew Bayer, Jenkins\ndeveloper at CloudBees.\n\nOver the last couple years, Pipeline as code has very much become the future of\nJenkins - in fact, at this point, I’d say it’s pretty well established as the\npresent of Jenkins. But that doesn’t mean it’s done, let alone that it’s\nperfect. While many developers enjoy the power and control that they get from\nwriting Pipelines using scripting, not everyone feels the same way. A lot of\ndevelopers want to specify their build as configuration and get on with building\nsoftware.\n\nPipeline scripts haven’t been a good way to do that…​until now.\n\nWith new changes to Jenkins Pipeline, you are now able to define your Pipeline\nfrom configuration in your Jenkinsfile by installing the new\nPipeline Model Definition\nplugin. It’s available today for you to try via the update center.\nBe sure to check the documentation for examples on how to get started for a\nvariety of languages and platforms.\n\nHere’s a quick example based on the plugin’s own Jenkinsfile :\n\npipeline {\n    // Make sure that the tools we need are installed and on the path.\n    tools {\n        maven \"Maven 3.3.9\"\n        jdk \"Oracle JDK 8u40\"\n    }\n\n    // Run on any executor.\n    agent label:\"\"\n\n    // The order that sections are specified doesn't matter - this will still be run\n    // after the stages, even though it's specified before the stages.\n    postBuild {\n        // No matter what the build status is, run these steps. There are other conditions\n        // available as well, such as \"success\", \"failed\", \"unstable\", and \"changed\".\n        always {\n            archive \"target/**/*\"\n            junit 'target/surefire-reports/*.xml'\n        }\n    }\n\n    stages {\n        // While there's only one stage here, you can specify as many stages as you like!\n        stage(\"build\") {\n            sh 'mvn clean install -Dmaven.test.failure.ignore=true'\n        }\n    }\n\n}\n\nIt’s still early days for this feature, with a lot of further functionality\nplanned to make it easier and more intuitive to define your Pipelines. All of\nthat functionality lives on top of Pipeline scripting, so we’ll also keep\nimproving Pipeline steps and syntax outside of the model! And perhaps most\nexciting, the Pipeline model will be used by an in-the-works visual editor\nthat will be part of the Blue Ocean project - while the editor isn’t ready yet,\nthe Pipeline Model Definition plugin will be bundled with the Blue Ocean beta\nfor you to try out.\n\nI’ll be going into all of this and more at my talk on Thursday, September 15th, at\n3:45pm at Jenkins World, and showing off the same day at the lunchtime demo\ntheater. I can’t wait to see you all there and hear what you think of all this!\n\nAndrew will be\npresenting\nmore of this concept at\nJenkins World in September.\nRegister with the code JWFOSS for 20% off your full conference pass.","title":"Introducing a New Way to Define Jenkins Pipelines","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[]}},{"node":{"date":"2016-09-01T00:00:00.000Z","id":"029c2b9c-b402-58ba-b094-5060a9fa4c30","slug":"/blog/2016/09/01/jenkins-world-contributor-summit/","strippedHtml":"At previous Jenkins User Conferences we have hosted \"Contributor Summits\" to\ngather developers and power-users in one room to discuss specific areas of\nJenkins, such as Scalability, Pipeline, etc. As part of this year’s\nJenkins World we’re hosting\nanother Contributor\nSummit, to discuss: Blue Ocean ,\nPipeline and Storage Pluggability.\n\nContributors to these three areas of the Jenkins ecosystem will be in\nattendance to present details of their design, requirements, and tentative\nroadmaps. After the presentations, the afternoon will be \"unconference style\" which\nis much more fluid to allow discussions, feedback, and brain-storming around\nthe three focus areas.\n\nThe program for the\nJenkins World\nContributor Summit includes:\n\nUpdates from the various project\nofficers.\n\nA discussion of the Blue Ocean technology stack,\noverall architecture, and how to develop plugins that integrate with Blue\nOcean. Led by Keith Zantow.\n\nPresentation on the current status of Pipeline, lessons\nlearned, new changes and the future. Led by\nJesse Glick.\n\nOverview of \"Storage Pluggability\", a new scalability-oriented project to\nrevamp the underlying storage mechanisms in Jenkins. Led by\nKohsuke Kawaguchi.\n\nI cannot recommend participating in the Contributor Summit enough. I have found\nprevious Summits to be immensely useful for sharing my own thoughts, as well as\nfor hearing new perspectives from the others in attendance.\n\nOur space is limited however! I encourage you to join us, so please\nRSVP soon!\n\nRegister for Jenkins World in\nSeptember with the code JWFOSS for a 20% discount off your pass.","title":"Jenkins World Contributor Summit","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[]}},{"node":{"date":"2016-08-31T00:00:00.000Z","id":"b54df086-f29e-5e1b-ba30-0dde098bb3d0","slug":"/blog/2016/08/31/scaling-jenkins-at-jenkins-world/","strippedHtml":"This is a guest post by R. Tyler Croy, who is a\nlong-time contributor to Jenkins and the primary contact for Jenkins project\ninfrastructure. He is also a Jenkins Evangelist at\nCloudBees, Inc.\n\nI find the topic of \"scaling Jenkins\" to be incredibly interesting because,\nmore often than not, scaling Jenkins isn’t just about scaling a single instance\nbut rather scaling an organization and its continuous delivery processes. In\nmany cases when people talk about \"scaling Jenkins\" they’re talking about\n\"Jenkins as a Service\" or \"Continuous Delivery as a Service\" which introduces a\nmuch broader scope, and also more organization-specific requirements, to the\nproblem.\n\nOne of my favorite parts of a big conference like\nJenkins World is getting to\nsee how other people are solving similar problems at different organizations,\nin essence:\n\" how\nthe sausage is made.\" This year’s Jenkins World will be no different, with a number\nof sessions by developers and engineers from the companies leading the way,\nscaling continuous delivery and Jenkins.\n\nRegister for Jenkins World in\nSeptember with the code JWFOSS for a 20% discount off your pass.\n\nIn the realm of \"scaling Jenkins\" the following sessions stand-out to me as\n\"must-attend\" for those interested in the space:\n\nJenkinsOps:\nAn Initiative to Streamline and Automate Jenkins\n\nSeptember 14th 4:15 PM - 5:00 PM, Exhibit Hall A-1\n\nNPR’s Digital Media team uses Jenkins to build, test and deploy code to various\nstaging and production environments. As the complexity of the software\ncomponents, environments and tests have grown - both generally and due to our\nquest to achieve continuous deployment - management of Jenkins has become a\nchallenge. In this talk, we share information about our “JenkinsOps” effort\nwhich has allowed us to automate many of the administrative tasks necessary to\nmanage feature code branches, handle deployments, run tests and configure our\nenvironments properly.\n\n— Paul Miles and Grant Dickie of NPR\n\nThinking\nInside the Container: A Continuous Delivery Story\n\nSeptember 15th 1:30 PM - 2:15 PM, Exhibit Hall C\n\nAt Riot Games, we build a lot of software. Come learn how we built an\nintegrated Docker solution using Jenkins that accepts Docker images submitted\nas build environments by engineers around the company. Our containerized farm\nnow creates over 10,000 containers per week and handles nearly 1,000 jobs at a\nrate of about 100 jobs per hour. All this is done with readily available, open\nsource Jenkins plugins. We’ll explore lessons learned, best practices and how\nto scale and build your own system, as well as why we chose to solve the\nproblem this way…and whether or not we succeeded!\n\n— Maxfield F Stewart of Riot Games\n\nHow\nto Do Continuous Delivery with Jenkins Pipeline, Docker and Kubernetes\n\nSeptember 15th 2:30 PM - 3:15 PM, Great America J\n\nIn this talk, we’ll show how to use Jenkins Pipeline together with Docker and\nKubernetes to implement a complete end-to-end continuous delivery and\ncontinuous improvement system for microservices and monolithic applications\nusing open source software. We’ll demonstrate how to easily create new\nmicroservices projects or import existing projects, have them automatically\nbuilt, system and integration tested, staged and then deployed. Once deployed,\nwe will also see how to manage and update applications using continuous\ndelivery practices along with integrated ChatOps - all completely automated!\n\n— James Strachan of Red Hat\n\nScaling\nJenkins with Docker: Swarm, Kubernetes or Mesos?\n\nSeptember 15th 2:30 PM - 3:15 PM, Exhibit Hall C\n\nThe Jenkins platform can be dynamically scaled by using several Docker cluster\nand orchestration platforms, using containers to run agents and jobs and also\nisolating job execution. But which cluster technology should be used? Docker\nSwarm? Apache Mesos? Kubernetes? How do they compare? All of them can be used\nto dynamically run jobs inside containers. This talk will cover these main\ncontainer clusters, outlining the pros and cons of each, the current state of\nthe art of the technologies and Jenkins support. I believe people will be very\ninterested in learning about the multiple options available.\n\n— Carlos Sanchez of CloudBees\n\nSo,\nYou Want to Build the World’s Biggest Jenkins Cluster?\n\nSeptember 15th 3:45 PM - 4:30 PM, Exhibit Hall C\n\nHow can we do it? We start with some real world results realized by Jenkins\nusers who have built large clusters and review how they got there. Next, we\nwill do experiments scaling some individual sub-components of Jenkins in\nisolation and see what challenges we will face when integrated. The famous\nlarge, distributed systems undoubtedly faced problems scaling - and we can\nlearn from them, too. The result will be recipes for building Jenkins\nclusters with different scaling capabilities. After all of this, you can\nbuild the biggest Jenkins cluster in the world…or maybe just make your own\nJenkins cluster more efficient.\n\n— Stephen Connolly of CloudBees\n\nJenkins at\nSplunk and Splunking Jenkins\n\nSeptember 15th 3:45 PM - 4:30 PM, Exhibit Hall A-1\n\nThis session will highlight how Splunk uses Jenkins to provide an end-to-end\nsolution in the development CI system. Attendees will see how test results are\ndelivered to a Splunk indexer, where they can be analyzed and presented in a\nvariety of ways. This session will also include a live demonstration.\n\n— Bill Houston of Splunk\n\nJenkins inside Google\n\nSeptember 15th 4:45 PM - 5:30 PM, Exhibit Hall C\n\nLast year, we presented our initial investigations and stress testing as we\nprepared to deploy a large-scale Jenkins installation at Google. Now, with a\nyear of real-world use under our belts, we’ll discuss how our expectations held\nup, what new issues we encountered and how we have addressed them.\n\n— David Hoover of Google\n\nIn addition to these, we will also be hosting a\nJenkins World\nContributor Summit where \"scaling\" relevant topics such as \"Storage\nPluggability\" will be discussed.\n\nThe Jenkins World agenda is packed\nwith even more sessions, so it should be a very informational event for\neverybody; hope to see you there!","title":"Scaling Jenkins at Jenkins World 2016","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[]}},{"node":{"date":"2016-08-30T00:00:00.000Z","id":"b2605074-9e8e-5012-bc3d-7f504b0e0b2f","slug":"/blog/2016/08/30/ask-experts-demos/","strippedHtml":"At this year’s Jenkins World,\nour events officer Alyssa has been working to\norganize various activities in the \"Open Source Hub\" on the expo floor.  Both\ndays of the conference (Sept. 14th and 15th), during the break for lunch, there\nwill be 15 minute demos by many of the\nexperts helping to staff\nthe Open Source Hub.\n\nDemo Schedule\n\nWednesday, September 14th\n\nTime\nSession\nDetails\nPresenter\n\n12:15 - 12:30\nBlue Ocean in Action\nShowcase of Blue Ocean and how it will make Jenkins a pleasure to use.\nKeith Zantow\n\n12:30 - 12:45\nNotifications with Jenkins Pipeline\nSending information to Slack, HipChat, email and more from your Pipeline\nLiam Newman\n\n12:45 - 13:00\nDocker and Pipeline\nLearn how to use Docker inside of Pipeline for clean, repeatable testing environments\nR Tyler Croy\n\n13:00 - 13:15\nGit plugin - large repos, submodule authentication and more\nTechniques for managing large Git repositories, Submodule authentication, Pipelines and Git\nMark Waite\n\n13:15 - 13:30\nFreestyle to Pipeline\nOverview of how easy it is to migrate from a confusing series of Freestyle Jobs to Jenkins Pipeline\nR Tyler Croy\n\n13:30 - 13:45\npackage.json and Jenkins\nUsing package.json to control your build; running tests, coverage and generating documentation in Jenkins\nCasey Vega\n\n13:45 - 14:00\nExtending Pipeline with Libraries\nWhen you have many jobs using similar configuration, it is natural to factor out the common parts into libraries. See some ways Pipeline lets you do this.\nJesse Glick\n\nThursday, September 15th\n\nTime\nSession\nDetails\nPresenter\n\n12:15 - 12:30\nA simpler way to define Jenkins Pipelines\nGet to know a new way to define your Pipelines in a more configuration-like way!\nAndrew Bayer\n\n12:30 - 12:45\nMultibranch Pipelines + Git symbolic-ref\nPipeline Multibranch Plugin is amazing, but is even better when used with\nGit symbolic references. The combination of the two gives users a way to create\nindividual Jenkins jobs for each of their build/test configurations, instead of\nusing a single parameterized job. I’ll show how to use these tools together to\nhome in on problematic tests, systems under test, or both.\nJon Hermansen\n\n12:45 - 13:00\nExternal Workspace Manager plugin for Jenkins Pipeline\nMeet the External Workspace Manager plugin, which supports managing workspaces across multiple Jenkins jobs running on different nodes and more!\nAlex Somai\n\n13:00 - 13:15\nOwnership plugin for Jenkins\nThe presentation will introduce the Ownership engine for Jenkins jobs, folders and nodes. The presentation will cover plugin WebUI features, Ownership-based security and integration with Jenkins Pipeline\nOleg Nenashev\n\n13:15 - 13:30\nPipelines for building and deploying Android apps\nUsing the various Android-related plugins for Jenkins, we will demonstrate pipelines to automatically build, test, and securely deploy Android apps.\nChristopher Orr\n\nAs you can see there is a lot to see in the Open Source Hub at Jenkins World.\nTo my knowledge these demos are not going to be recorded, so your only\nopportunities to see them might be at Jenkins World or your local\nJenkins Area Meetup!\n\nRegister for Jenkins World in\nSeptember with the code JWFOSS for a 20% discount off your pass.","title":"Demos at Jenkins World 2016","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[]}},{"node":{"date":"2016-08-29T00:00:00.000Z","id":"95ef7134-7327-5121-a920-cbff69688c23","slug":"/blog/2016/08/29/jenkins-world-speaker-blog-goodgame/","strippedHtml":"This is a guest post by Jenkins World speaker David Hinske, Release\nEngineer at Goodgame Studios.\n\nHey there, my name is David Hinske and I work at Goodgame Studios (GGS), a game\ndevelopment company in Hamburg, Germany. As Release Engineer in a company with\nseveral development teams, it comes in handy using several Jenkins instances.\nWhile this approach works fine in our company and gives the developers a lot of\nfreedom, we came across some long-term problems concerning maintenance and\nstandards. These problems were mostly caused by misconfiguration or non-use of\nplugins. With “configuration as code” in mind, I took the approach to apply\nstatic code analysis with the help of SonarQube, a platform to manage code\nquality, for all of our Jenkins job configurations.\n\nAs a small centralized team, we were looking for an easy way to control the\nhealth of our growing Jenkins infrastructure. With considering “configuration\nas code“, I developed a simple extension of SonarQube, to manage the quality\nand usage of all spawned Jenkins instances. The given SonarQube features (like\ncustomized rules/metrics, quality profiles and dashboards) allow us and the\ndevelopment teams to analyze and measure the quality of all created jobs in our\ncompany. Even though Jenkins configuration analysis cannot cover all\nSonarQube’s axes of code quality, I think there is still potential for\nconventions/standards, duplications, complexity, potential bugs\n(misconfiguration) and design and architecture.\n\nThe results of this analysis can be used by all people working with Jenkins. To\nachieve this, I developed a simple extension of SonarQube, containing\neverything which is needed to hook up our SonarQube with our Jenkins\nenvironment. The implementation contains a new basic-language “Jenkins“ and an\ninitial set of rules.\n\nOf course the needs depend strongly on the way Jenkins is being used, so not\nevery rule implemented might be useful for every team, but this applies to all\ntypes of code analysis. The main inspirations for the rules were developer\nfeedback and some articles found in the web. The different ways Jenkins can be\nconfigured provides the potential for many more rules. With this new approach\nof quality analysis, we can enforce best practices like:\n\nPolling must die (Better to triggerb uilds from pushes than poll the\nrepository every x minutes).\n\nUse Log Rotator (Not using log-rotator can result in disk space problems on\nthe controller).\n\nUse agents/labels (Jobs should be defined where to run).\n\nDon’t build on the controller (In larger systems, don’t build on the controller).\n\nEnforce plugin usage (For example: Timestamp, Mask-Passwords).\n\nNaming sanity (Limit project names to a sane (e.g. alphanumeric) character\nset).\n\nAnalyze Groovy Scripts (For example: Prevent System.exit(0) in System Groovy\nScripts).\n\nBesides taking control of all configuration of any Jenkins instance we want,\nthere is also room for additional metrics, like measuring the amount and\ndifferent types of jobs (Freestyle/Maven etc…​) to get an overview about the\ngeneral load of the Jenkins instance. A more sophisticated idea is to measure\ncomplexity of jobs and even pipelines. As code, jobs configuration gets harder\nto understand the more steps are involved. On the one hand scripts, conditions\nand many parameters can negatively influence the readability, especially if you\nhave external dependencies (like scripts) in different locations. On the other\nhand, pipelines can also grow very complex when many jobs are involved and\nchained for execution. It will be very interesting for us to see where and why\ntoo complex pipelines are being created.\n\nOn visualization we rely on the data and its interpretation of SonarQube, which\noffers a big bandwidth of widgets. Everybody can use and customize the\ndashboards. Our centralized team for example has a separate dashboard where we\ncan get a quick overview over all instances.\n\nThe problem of \"growing\" Jenkins with maintenance problems is not new.\nEspecially when you have many developers involved, including with the access to\ncreate jobs and pipelines themselves, an analysis like this SonarQube plugin\nprovides can be useful for anyone who wants to keep their Jenkins in shape.\nCustomization and standards are playing a big role in this scenario. This blog\npost surely is not an advertisement for my developed plugin, it is more about\nthe crazy idea of using static code analysis for Jenkins job configuration. I\nhaven’t seen anything like it so far and I feel that there might be some\npotential behind this idea.\n\nJoin me at my Enforcing Jenkins Best Practices session at the 2016 Jenkins\nWorld to hear more!\n\nDavid will be\npresenting\nmore of this concept at\nJenkins World in September.\nRegister with the code JWFOSS for 20% off your full conference pass.","title":"Enforcing Jenkins Best Practices","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[]}},{"node":{"date":"2016-08-29T00:00:00.000Z","id":"48307a4d-711a-56d1-885f-e9d1945fa4d5","slug":"/blog/2016/08/29/sauce-pipeline/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nTesting web applications across multiple browsers on different platforms can be challenging even for smaller applications.\nWith Jenkins and the\nSauce OnDemand Plugin,\nyou can wrangle that complexity by defining your Pipeline as Code.\n\nPipeline ♥ UI Testing, Too\n\nI recently started looking for a way to do browser UI testing for an open-source JavaScript project to which I contribute.\nThe project is targeted primarily at\nNode.js\nbut we’re committed to maintaining browser-client compatibility as well.\nThat means we should run tests on a matrix of browsers.\nSauce Labs\nhas an \"open-sauce\" program that provides free test instances to open-source projects.\nI decided to try using the\nSauce OnDemand Plugin\nand\nNightwatch.js\nto run Selenium tests on a sample project first, before trying a full-blown suite of tests.\n\nStarting from Framework\n\nI started off by following Sauce Labs' instructions on\n\" Setting up Sauce Labs with Jenkins\"\nas far as I could.\nI installed the\nJUnit and\nSauce OnDemand\nplugins, created an account with Sauce Labs, and\nadded my Sauce Labs credentials to Jenkins.\nFrom there I started to get a little lost.\nI’m new to Selenium and I had trouble understanding how to translate the instructions to my situation.\nI needed a working example that I could play with.\n\nHappily, there’s a whole range of sample projects in\n\" saucelabs-sample-test-frameworks\"\non GitHub, which show how to integrate Sauce Labs with various test frameworks, including Nightwatch.js.\nI forked the Nightwatch.js sample to\nbitwiseman/JS-Nightwatch.js\nand set to writing my Jenkinsfile.\nBetween the sample and the Sauce Labs instructions,\nI was able to write a pipeline that ran five tests on one browser via\nSauce Connect :\n\nnode {\n    stage \"Build\"\n    checkout scm\n\n    sh 'npm install' (1)\n\nstage \"Test\"\n    sauce('f0a6b8ad-ce30-4cba-bf9a-95afbc470a8a') { (2)\nsauceconnect(options: '', useGeneratedTunnelIdentifier: false, verboseLogging: false) { (3)\nsh './node_modules/.bin/nightwatch -e chrome --test tests/guineaPig.js || true' (4)\njunit 'reports/**' (5)\nstep([$class: 'SauceOnDemandTestPublisher']) (6)\n}\n    }\n}\n\n1\nInstall dependencies\n\n2\nUse my\npreviously added sauce credentials\n\n3\nStart up the\nSauce Connect\ntunnel to Sauce Labs\n\n4\nRun Nightwatch.js\n\n5\nUse JUnit to track results and show a trend graph\n\n6\nLink result details from Sauce Labs\n\nThis pipeline expects to be run from a Jenkinsfile in SCM.\nTo copy and paste it directly into a Jenkins Pipeline job, replace the checkout scm step with\ngit url:'https://github.com/bitwiseman/JS-Nightwatch.js', branch: 'sauce-pipeline'.\n\nI ran this job a few times to get the JUnit report to show a trend graph.\n\nThis sample app generates the SauceOnDemandSessionID for each test, enabling the Jenkins Sauce OnDemand Plugin’s result publisher to link results to details Sauce Labs captured during the run.\n\nAdding Platforms\n\nNext I wanted to add a few more platforms to my matrix.\nThis would require changing both the test framework configuration and the pipeline.\nI’d need to add new named combinations of platform, browser, and browser version (called \"environments\") to the Nightwatch.js configuration file,\nand modify the pipeline to run tests in those new environments.\n\nThis is a perfect example of the power of pipeline as code.\nIf I were working with a separately configured pipeline,\nI’d have to make the change to the test framework, then change the pipeline manually.\nWith my pipeline checked in as code,\nI could change both in one commit,\npreventing errors resulting from pipeline configurations going out of sync from the rest of the project.\n\nI added three new environments to nightwatch.json :\n\n\"test_settings\" : {\n  \"default\": { /*----8 <----*/ },\n  \"chrome\": { /*----8 <----*/ },\n\n  \"firefox\": {\n    \"desiredCapabilities\": {\n      \"platform\": \"linux\",\n      \"browserName\": \"firefox\",\n      \"version\": \"latest\"\n    }\n  },\n  \"ie\": {\n    \"desiredCapabilities\": {\n      \"platform\": \"Windows 10\",\n      \"browserName\": \"internet explorer\",\n      \"version\": \"latest\"\n    }\n  },\n  \"edge\": {\n    \"desiredCapabilities\": {\n      \"platform\": \"Windows 10\",\n      \"browserName\": \"MicrosoftEdge\",\n      \"version\": \"latest\"\n    }\n  }\n}\n\nAnd I modified my Jenkinsfile to call them:\n\n//----8 (1)\n'chrome',\n        'firefox',\n        'ie',\n        'edge'\n    ].join(',')\n    // Run selenium tests using Nightwatch.js\n    sh \"./node_modules/.bin/nightwatch -e ${configs} --test tests/guineaPig.js\" (2)\n} //----8\n\n1\nUsing an array to improve readability and make it easy to add more platforms later.\n\n2\nChanged from single-quoted string to double-quoted to support variable substitution.\n\nTest frameworks have bugs too. Nightwatch.js (v0.9.8) generates incomplete JUnit files,\nreporting results without enough information in them to distinguish between platforms.\nI implemented a fix for it and\nsubmitted a PR to Nightwatch.js.\nThis blog shows output with that fix applied locally.\n\nAs expected, Jenkins picked up the new pipeline and ran Nightwatch.js on four platforms.\nSauce Labs of course recorded the results and correctly linked them into this build.\nNightwatch.js was already configured to use multiple worker threads to run tests against those platforms in parallel, and\nmy Sauce Labs account supported running them all at the same time,\nletting me cover four configurations in less that twice the time,\nand that added time was most due to individual new environments taking longer to complete.\nWhen I move to the actual project, this will let me run broad acceptance passes quickly.\n\nConclusion: To Awesome and Beyond\n\nConsidering the complexity of the system, I was impressed with how easy it was to integrate Jenkins with Sauce OnDemand to start testing on multiple browsers.\nThe plugin worked flawlessly with Jenkins Pipeline.\nI went ahead and ran some additional tests to show that failure reporting also behaved as expected.\n\n//----8 (1)\n//----8\n\n1\nRemoved --test filter to run all tests\n\nEpilogue: Pipeline vs. Freestyle\n\nJust for comparison here’s the final state of this job in Freestyle UI versus fully-commented pipeline code:\n\nThis includes the\nAnsiColor Plugin\nto support Nightwatch.js' default ANSI color output.\n\nFreestyle\n\nPipeline\n\nnode {\n    stage \"Build\"\n    checkout scm\n\n    // Install dependencies\n    sh 'npm install'\n\n    stage \"Test\"\n\n    // Add sauce credentials\n    sauce('f0a6b8ad-ce30-4cba-bf9a-95afbc470a8a') {\n        // Start sauce connect\n        sauceconnect(options: '', useGeneratedTunnelIdentifier: false, verboseLogging: false) {\n\n            // List of browser configs we'll be testing against.\n            def platform_configs = [\n                'chrome',\n                'firefox',\n                'ie',\n                'edge'\n            ].join(',')\n\n            // Nightwatch.js supports color ouput, so wrap this step for ansi color\n            wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {\n\n                // Run selenium tests using Nightwatch.js\n                // Ignore error codes. The junit publisher will cover setting build status.\n                sh \"./node_modules/.bin/nightwatch -e ${platform_configs} || true\"\n            }\n\n            junit 'reports/**'\n\n            step([$class: 'SauceOnDemandTestPublisher'])\n        }\n    }\n}\n\nThis pipeline expects to be run from a Jenkinsfile in SCM.\nTo copy and paste it directly into a Jenkins Pipeline job, replace the checkout scm step with\ngit url:'https://github.com/bitwiseman/JS-Nightwatch.js', branch: 'sauce-pipeline'.\n\nNot only is the pipeline as code more compact,\nit also allows for comments to further clarify what is being done.\nAnd as I noted earlier,\nchanges to this pipeline code are committed the same as changes to the rest of the project,\nkeeping everything synchronized, reviewable, and testable at any commit.\nIn fact, you can view the full set of commits for this blog post in the\nblog/sauce-pipeline\nbranch of the\nbitwiseman/JS-Nightwatch.js\nrepository.\n\nLinks\n\nSauce OnDemand Plugin\n\nbitwiseman/JS-Nightwatch.js\n\nsaucelabs-sample-test-frameworks","title":"Browser-testing with Sauce OnDemand and Pipeline","tags":["tutorial","pipeline","plugins","saucelabs","selenium","nightwatch"],"authors":[]}},{"node":{"date":"2016-08-26T00:00:00.000Z","id":"ddf1a677-43d3-5209-a6e7-d331d574df38","slug":"/blog/2016/08/26/ask-the-experts-jenkins-world/","strippedHtml":"Our events officer Alyssa has been working for\nthe past several weeks to organize the \"Open Source Hub\" at\nJenkins World 2016. The Hub\nis a location on the expo floor where contributors to the Jenkins project can hang\nout, share demos and help Jenkins users via the \"Ask the Experts\" program. Thus\nfar we have a great list of experts who have volunteered to help staff the\nbooth, which includes many frequent contributors, JAM\norganizers and board members.\n\nA few of the friendly folks you will see at Jenkins World are:\n\nPaul Allen -\nP4 Plugin\nmaintainer and Pipeline contributor.\n\nR Tyler Croy -\nJenkins infrastructure maintainer and\nboard member.\n\nJesse Glick - Pipeline\nmaintainer and long-time contributor to Jenkins\ncore.\n\nEddú Meléndez Gonzales - Organizer for\nthe Lima (Perú)\nJenkins Area Meetup and contributor to Spring.\n\nJon Hermansen - Organizer for the\nLos Angeles\nJenkins Area Meetup, developer and Pipeline user.\n\nOwen Mehegan -\nGitLab plugin\ncontributor, release engineer and copy editor for jenkins.io.\n\nOleg Nenashev -\nGoogle Summer of Code organizer, maintainer of multiple\nplugins and St.\nPetersburg Jenkins Area Meetup organizer.\n\nChristopher Orr - Maintainer of multiple\nAndroid-related plugins, including the\nAndroid\nEmulator plugin and contributor to numerous projects behind the scenes of\nJenkins.\n\nCasey Vega - Organizer for the\nLos Angeles\nJenkins Area Meetup and release engineer at Verizon Digital Media.\n\nMark Waite - Maintainer of the\nGit plugin and\ncontributor to a number of other Git-related plugins.\n\nDean Yu - Long-time contributor, board member\nand release engineer at Shutterfly.\n\nI hope that this list isn’t exhaustive! If you are an active member of the\nJenkins community and/or a contributor, consider taking part in the \"Ask the\nExperts\" program. It’s a great opportunity to bond with other contributors and\ntalk with fellow users at Jenkins World.\n\nYou will be able to find us in the expo hall under the \"Open Source Hub\" sign;\nplease stop by at Jenkins World to say hello, pick up stickers and to ask\nquestions!\n\nRegister for Jenkins World in\nSeptember with the code JWFOSS for a 20% discount off your pass.","title":"Ask the Experts at Jenkins World 2016","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[]}},{"node":{"date":"2016-08-24T00:00:00.000Z","id":"9b375bbf-3fa2-5403-8c8a-8d26e0d78938","slug":"/blog/2016/08/24/jenkins-world-2016-festivities/","strippedHtml":"At Jenkins World 2016 on\nSeptember 14-15, stop by the \"Open Source Hub\", located in the Partner Expo\nhall at the Santa Clara Convention Center in Santa Clara, CA. The Open Source\nHub will have many Jenkins contributors, committers, JAM leaders, and\nofficers from\nthe governance board under one roof, so there will be plenty of knowledge and\ntalents on hand to share. We hope you’ll join in on the festivities.\n\nAsk the Experts\n\nThe setup that is waiting for you: white boards, monitors and lots of brain\npower to help answer those Jenkins questions that have been keeping you up at\nnight.  Jenkins experts can help with beginner questions to the more advanced\nones. All you need to do is bring your laptop and your questions; the experts\nwill help answer them!\n\nRegister for Jenkins World in\nSeptember with the code JWFOSS for a 20% discount off your pass.\n\nLive Demos\n\nSometimes seeing is believing, there will be plenty of demos in the \"Open\nSource Hub\" during the lunch hours on Wednesday September 14th, and Thursday\nSeptember 15th in the expo hall. Jenkins experts will be show-casing their\nfavorite Jenkins features, plugins and projects. Grab your lunch, take a seat\nin the open source theater to learn about:\n\nPipelines for Building and Deploying Android Apps by Android Emulator\nplugin maintainer Chris Orr\n\nGit Plugin - Large Repos, Submodule Authentication, and more by Git plugin\nmaintainer Mark Waite\n\nDocker and Pipeline by Jenkins infrastructure contributor\nR Tyler Croy\n\nExtending Pipeline with Libraries by Pipeline plugin maintainer\nJesse Glick\n\nBlue Ocean in Action by Blue Ocean contributor\nKeith Zantow\n\nExternal Workspace Manager plugin for Pipeline by\nGoogle Summer of Code student\nAlexandru Somai\n\nAnd many more\n\nJenkins Mural\n\nJenkins World participants will take part in the realization of a giant\ncollaborative mural painting with the\nCommitStrip team.  Thomas, the writer and\nEtienne, the cartoonist, teamed up with a few Jenkins contributors to design a\n5m x 2m mmural which will be drawn live! Brushes and colors will be\navailable for all attendees who wish to help paint this one of a kind piece of\nJenkins art.\n\nSticker Swap\n\nJenkins World attendees will have a chance to swap stickers. There will be a\ntable where attendees are welcome to place/take stickers. Bring your cool\nstickers to share with others and take stickers that interest you.\n\nAfter Dark Reception Sponsored by CloudBees\n\nAfter Dark reception will be from 6-8pm on Wed Sept 14 in the Partner Expo.\nEnjoy cocktails, appetizers, mingle, and dance to a live band. A big THANK\nYOU\ngoes out to CloudBees for their generous contributions! See you at After Dark!\n\nContributor Summit - Tuesday, September 13\n\nIf Blue Ocean, Pipeline and Storage Pluggability sounds interesting to you,\njoin the interactive discussions surrounding these topics. The Jenkins project\nis also looking to hear use-cases, war stories, and pain points. The objective\nof the summit is to work towards improving the Jeknins project.\nSeats are limited.\n\nDon’t forget to register; I look forward to\nseeing you at the conference!\n\nLinks\n\nJenkins World 2016\n\nAcknowledgements\n\nSpecial thanks to CloudBees as the premier\nsponsor and BlazeMeter, Microsoft, Red\nHat and all the other sponsors who have made this event possible.","title":"Jenkins World 2016 Festivities","tags":["event","jenkinsworld","jenkinsworld2016"],"authors":[]}}]}},"pageContext":{"limit":8,"skip":368,"numPages":100,"currentPage":47}},
    "staticQueryHashes": ["3649515864"]}