{
    "componentChunkName": "component---src-templates-blog-list-template-js",
    "path": "/blog/page/17",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2019-08-23T00:00:00.000Z","id":"eddbf0dc-37bf-5f4d-8a6e-0bef8711db73","slug":"/blog/2019/08/23/introducing-gitlab-branch-source-plugin/","strippedHtml":"The GitLab Branch Source Plugin has come out of its beta stage and has been released to the Jenkins update center. It allows you to create job based on GitLab user or group or subgroup project(s). You can either:\n\nImport a single project’s branches as jobs from a GitLab user/group/subgroup (Multibranch Pipeline Job)\n\nImport all or a subset of projects as jobs from a GitLab user/group/subgroup (GitLab Group Job or GitLab Folder Organization)\n\nThe GitLab Group project scans the projects, importing the pipeline jobs it identifies based on the criteria provided. After a project is imported, Jenkins immediately runs the jobs based on the Jenkinsfile pipeline script and notifies the status to GitLab Pipeline Status. This plugin unlike other Branch Source Plugins provides GitLab server configuration which can be configured in Configure System. Jenkins Configuration as Code (JCasC) can also be used to configure the server. To learn more about server configuration see my previous blog post.\n\nRequirements\n\nJenkins - 2.176.2 (LTS)\n\nGitLab - v11.0+\n\nCreating a Job\n\nTo create a Multibranch Pipeline Job (with GitLab branch source) or GitLab Group Job, you must have GitLab Personal Access Token added to the server configuration. The credentials is used to fetch meta data of the project(s) and to set up hooks on GitLab Server. If the token has admin access you can also set up System Hooks while Web Hooks can be set up from any user token.\n\nCreate a Multibranch Pipeline Job\n\nGo to Jenkins > New Item > Multibranch Pipeline > Add Source > GitLab Project\n\nServer - Select your desired GitLab server from the dropdown, needs to be configured before creating this job.\n\nCheckout Credentials - Add credentials of type SSHPrivateKey or Username/Password if there are any private projects to be built by the plugin. If all projects are public then no checkout credentials required. Checkout credential is different from the credential (of type GitLab Personal Access Token) setup in GitLab server config.\n\nOwner - Can be a user, group or subgroup. Depending on this the Projects field is populated.\n\nProjects - Select the project you want to build from the dropdown.\n\nBehaviours - These traits are very powerful tool to configure the build logic and post build logic. We have defined new traits. You can see all the information in repository documentation.\n\nSave and wait for the branches indexing. You are free to navigate from here, the job progress is displayed to the left hand side.\n\nAfter the indexing, the imported project listed all the branches, merge requests and tags as jobs.\n\nOn visiting each job, you will find some action items on the left hand side:\n\nYou can trigger the job manually by selecting Build Now.\n\nYou can visiting the particular branch/merge request/tag on your GitLab Server by selecting the corresponding button.\n\nCreate a GitLab Group Job Type\n\nGo to Jenkins > New Item > GitLab Group\n\nYou can notice the configuration is very similar to Multibranch Pipeline Job with only Projects field missing. You can add all the projects inside your Owner i.e. User/Group/Subgroup. The form validation will check with your GitLab server if the owner is valid. You can add Discover subgroup project trait which allows you to discover this child projects of all subgroups inside a Group or Subgroup but this trait is not applicable to User. While indexing, web hook is created in each project. GitLab Api doesn’t support creation of Group web hooks so this plugin doesn’t support that feature which is only available in GitLab EE.\n\nYou can now explore your imported projects, configuring different settings on each of those folders if needed.\n\nGitLab Pipeline Status Notification\n\nGitLab is notified about build status from the point of queuing of jobs.\n\nSuccess - the job was successful\n\nFailure - the job failed and the merge request is not ready to be merged\n\nError - something unexpected happened; example: the job was aborted in Jenkins\n\nPending - the job is waiting in the build queue\n\nOn GitLab Pipeline status are hyperlinks to the corresponding Jenkins job build. To see the Pipeline Stages and the console output you will be required to visit your Jenkins server. We also planned to notify the pipeline stages to GitLab but it came with some drawbacks which has been addressed so far but there is future plan to add it as trait.\n\nYou can also skip notifying GitLab about the pipeline status by selecting Skip pipeline status notifications from the traits list.\n\nMerge Requests\n\nImplementing support for Merge Requests for the projects was challenging. First, MRs are of 2 types i.e. Origin branches and Forked Project branches so there had to be different implementation for each head. Second, MRs from forks can be from untrusted sources, so a new strategy Trust Members was implemented which allows CI to build MRs only from trusted users who have accesslevel of Developer / Maintainer / Owner.\n\nThird, MRs from forks do not support pipeline status notification due to GitLab issue, see this. You can add a trait Log Build Status as Comment on GitLab that allows you to add a sudo user (leave empty if you want owner user) to comment on the commit/tag/mrs the build result. To add a sudo user your token must have admin access. By default only failure/error are logged as comment but you can also enable logging of success build by ticking the checkbox.\n\nSometimes, Merge Requests fail due to external errors so you want to trigger rebuild of mr by commenting jenkins rebuild. To enable this trigger add the trait Trigger build on merge request comment. The comment body can be changed in the trait. For security reasons, commentor should have Developer / Maintainer / Owner accesslevel in the project.\n\nHooks\n\nWeb hooks are automatically created on your projects if configured to do so in server configuration. Web hooks are ensured to pass through a CSRF filter. Jenkins listens to web hooks on the path /gitlab-webhook/post. On GitLab web hooks are triggered on the following events:\n\nPush Event - when a commit or branch is pushed\n\nTag Event - when a new tag is created\n\nMerge Request Event - when a merge request is created/updated\n\nNote Event - when a comment is made on a merge request\n\nYou can also set up System Hooks on your GitLab server if your token has admin access. System hooks are triggered when new projects are created, Jenkins triggers a rescan of the new project based on the configuration and sets up web hook on it. Jenkins listens to system hooks on the path /gitlab-systemhook/post. On GitLab system hooks are triigered on Repository Update Events.\n\nYou can also use Override Hook Management mode trait to override the default hook management and choose if you want to use a different context (say Item) or disable it altogether.\n\nJob DSL and JCasC\n\nYou can use Job DSL to create jobs. Here’s an example of Job DSL script:\n\norganizationFolder('GitLab Organization Folder') {\n    description(\"GitLab org folder created with Job DSL\")\n    displayName('My Project')\n    // \"Projects\"\n    organizations {\n        gitLabSCMNavigator {\n            projectOwner(\"baymac\")\n            credentialsId(\"i<3GitLab\")\n            serverName(\"gitlab-3214\")\n            // \"Traits\" (\"Behaviours\" in the GUI) that are \"declarative-compatible\"\n            traits {\n                subGroupProjectDiscoveryTrait() // discover projects inside subgroups\n                gitLabBranchDiscovery {\n                    strategyId(3) // discover all branches\n                }\n                originMergeRequestDiscoveryTrait {\n                    strategyId(1) // discover MRs and merge them with target branch\n                }\n                gitLabTagDiscovery() // discover tags\n            }\n        }\n    }\n    // \"Traits\" (\"Behaviours\" in the GUI) that are NOT \"declarative-compatible\"\n    // For some 'traits, we need to configure this stuff by hand until JobDSL handles it\n    // https://issues.jenkins.io/browse/JENKINS-45504\n    configure {\n        def traits = it / navigators / 'io.jenkins.plugins.gitlabbranchsource.GitLabSCMNavigator' / traits\n        traits\n\nYou can also use JCasC to directly create job from a Job DSL script. For example see the plugin repository.\n\nHow to talk to us about bugs or new features?\n\nThis project uses Jenkins JIRA to track issues. You can file issues under gitlab-branch-source-plugin component.\n\nSend your mail in the Developer Mailing list.\n\nJoin our Gitter channel.\n\nFuture work\n\nActively maintain GitLab Branch Source Plugin and take feedbacks from users to improve the plugin’s user experience.\n\nExtend support for GitLab Pipeline to Blueocean.\n\nResources\n\nGitLab API Plugin\n\nGitLab API Plugin Wiki\n\nGitLab Branch Source Plugin\n\nProject Summary\n\nGitHub Branch Source Plugin Release\n\nThank you Jenkins and Google Summer of Code :)","title":"Introducing new GitLab Branch Source Plugin","tags":["gitlab","plugins","pipeline","multibranch","gsoc","gsoc2019"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/20305/baymac.jpg","srcSet":"/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/eb017/baymac.jpg 32w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/ed0e7/baymac.jpg 64w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/20305/baymac.jpg 128w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/b3c75/baymac.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/bcdad/baymac.webp 32w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/21187/baymac.webp 64w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/33025/baymac.webp 128w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/d386c/baymac.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":192}}},"blog":null,"github":"baymac","html":"<div class=\"paragraph\">\n<p>GSoC 2019 student under Jenkins project. Maintainer of GitLab Branch Source Plugin. Software Developer at Udaan, India.</p>\n</div>","id":"baymac","irc":null,"linkedin":"parichay.barpanda","name":"Parichay Barpanda","slug":"/blog/authors/baymac","twitter":"baymac04"}]}},{"node":{"date":"2019-08-22T00:00:00.000Z","id":"9628d1b5-66f4-59a3-9d83-6daecb429bb8","slug":"/blog/2019/08/22/devops-world/","strippedHtml":"Last week I had the privilege of attending DevOps World - Jenkins World in San\nFrancisco to present my Google Summer of Code project for plugin management. It was\nan amazing experience getting to meet people from all over world who are trying\nto make the development and release process easier and more efficient. I enjoyed\nlearning more about industry tools, processes, and standards, and meeting CI/CD\nexperts and contributors in the open source community.\n\nBelow is a summary of my experience. Thank you to the Jenkins project and CloudBees for making\n my trip and attendance possible!\n\nDay 1\n\nMonday was the Continuous Delivery Contributor Summit, which focused on projects\nunder the CDF umbrella.  After checking in and grabbing my badge, I was able to\nmeet up with some of the Google Summer of Code org admins. It was great\nbeing able to actually meet them in person after talking to them over video\nconferencing and chats all summer!\n\nTracy Miranda started the summit out by introducing the Continuous Delivery Foundation,\nwhich aims to provide a vendor neutral home to help and sustain open source projects\nfocusing on all aspects of continuous delivery.  Currently, Jenkins, Tekton, Spinnaker,\nand JenkinsX have joined the foundation.  Project updates were given for Jenkins,\nTekton, and JenkinsX.  In the afternoon, attendees split into different groups for\nunconference sessions.  I presented my project to the Jenkins group.  Afterwards,\nthere was free time to chat with other attendees about my project and the other Jenkins\nprojects. Lastly, lightning talks were given before everyone headed to the contributor\nappreciation event to grab some food and drinks.\n\nDay 2\n\nI attended the Jenkins Pipeline Fundamentals Short Course in the morning. Even\nthough I’m working on a project for Jenkins, there’s still a lot I don’t know so\nI just wanted to try to learn more.\n\nA lot of the afternoon sessions filled up, so I spent the afternoon trying to meet\nother people at the conference, before heading to the keynote. The keynote\ntalked more about the CDF and some of the backstory behind its origin.  This year is also a big anniversary for Jenkins - it has now been\naround for 15 years.\n\nAfter the keynote, I checked out a Women in Tech mixer and\nthe opening of the exibition hall. Probably my favorite swag I picked up was the\n\"Will Code for Beer\" stickers and a bottle of hot sauce.\n\nDay 3\n\nThe morning began with another keynote. Shawn Ahmed of CloudBees talked about the\nchallenges of visibility into bottlenecks of the development process and Rajeev Mahajan\ndiscussed how HSBC tackled DevOps.  The rest of the day I attended different sessions\non container tooling, implementing CI/CD in a cloud native environment, running\nJenkins on Jenkins, and database DevOps.\n\nAfter the sessions finished, I wandered\naround the expo until it closed, then joined some of the other conference attendees\nto have some fun at a ping pong bar nearby.\n\nDay 4\n\nThe final and last day of the conference was probably my favorite.  The morning\nkeynote revealed that Zhao Xiaojie had won an award for his work on Jenkins advocacy,\nsome other DevOps award panelists talked about their approaches to different challenges,\nthen David Stanke gave an enjoyable presentation about cloud native CI/CD. I was\nable to present my summer project and attend a few more sessions, including one\nabout DevOps at scale, and another about use cases for machine learning in CI/CD pipelines.\n\nThe last keynote given by James Governor was a thoughtful look into the current and\nfuture states of tech. How does tech look like it will scale in the coming years\nin the U.S. and across the world? How can we make tech more inclusive and accessible?\nWhat can we do to minimize our environmental footprint?  In particular, his points\non welcoming people from a non-traditional computer science background resonated with\nme since I’m currently undergoing my own career transition to tech.\n\nAfter the conference ended, I said goodbye to the remaining GSoC org admins before\nmeeting an old friend for dinner and bringing along some new friends I met at the\nconference.  I spent the remaining part of the night singing karaoke with\nthem before heading out of San Francisco the next morning.\n\nThanks again to everyone who supported me and encouraged me leading up to and during\nmy presentation, patiently answered my questions as I tried to gather more context\nabout CI/CD tools and practices, and made my first DevOps conference so enjoyable!","title":"My DevOps World - Jenkins World 2019 Experience","tags":["pluginmanagement","devopsworld2019","gsoc","gsoc2019","community","events"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#280818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7f211/stopalopa.jpg","srcSet":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/405b9/stopalopa.jpg 32w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7b6be/stopalopa.jpg 64w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7f211/stopalopa.jpg 128w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/ebcfb/stopalopa.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/0ade5/stopalopa.webp 32w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/5b0b1/stopalopa.webp 64w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/96834/stopalopa.webp 128w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/805f6/stopalopa.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":184}}},"blog":null,"github":"stopalopa","html":"<div class=\"paragraph\">\n<p>Natasha is a Master&#8217;s student at Penn State University. She was accepted to Google Summer of Code 2019 for a project on creating <a href=\"https://jenkins.io/projects/gsoc/2019/plugin-installation-manager-tool-cli/\">a plugin management tool</a>.\nIn her spare time she enjoys spending time outdoors, listening to podcasts and cuddling with her cat.</p>\n</div>","id":"stopalopa","irc":null,"linkedin":null,"name":"Natasha Stopa","slug":"/blog/authors/stopalopa","twitter":"stopamine"}]}},{"node":{"date":"2019-08-19T00:00:00.000Z","id":"a8a6f50d-13d8-5ff0-b148-cd0ef7696ecf","slug":"/blog/2019/08/19/remoting-kafka-kubernetes-release-2.0/","strippedHtml":"I am Long Nguyen from FPT University, Vietnam. My project for Google Summer of Code 2019 is Remoting over Apache Kafka with Kubernetes features. After a successful Phase 1, finally the 2.0 version of the plugin has been released. The 2.0 version provides seamless integration with Kubernetes environment.\n\n2.0 version features\n\nStart a simple Apache Kafka server in Kubernetes.\n\nDynamically provision Remoting Kafka Agent in Kubernetes.\n\nHelm chart to bootstrap the whole system in Kubernetes.\n\nStart a simple Apache Kafka server in Kubernetes\n\nUse of the plugin requires that users have a configured Apache Zookeeper and Apache Kafka server, which could be intimidating for people who just want to try out the plugin. Now, users can start a simple, single-node Apache Kafka server in Kubernetes environment with just one button click.\n\nOn the Global Configuration page, users can input Kubernetes server information and credentials. When users click Start Kafka on Kubernetes button, Jenkins will create a Kubernetes client from the information and then apply Apache Zookeeper and Apache Kafka YAML specification files from resources. After downloading images and creating containers, it will automatically update Apache Zookeeper and Apache Kafka URLs into respective fields.\n\nDynamically provision Remoting Kafka Agent in Kubernetes\n\nWith previous version, users have to manually add/remove nodes so it is hard to scale builds quickly. Kubernetes plugin allows us to dynamically provision agents in Kubernetes but it is designed for JNLP agent. With this new version, Remoting Kafka agent can also be provisioned automatically in Kubernetes environment.\n\nUsers can find the new feature in Cloud section in /configure. Here users could input Kubernetes connection parameters and desired Remoting Kafka agent properties including labels. When new build with matching labels gets started and there are no free nodes, Cloud will automatically provision Remoting Kafka agent pod in Kubernetes to run the build.\n\nHelm Chart\n\nHelm chart for Remoting over Apache Kafka plugin is based on stable/jenkins chart and incubator/kafka chart. You can follow the instruction here to install a demo ready-to-use Helm release. Your kubectl get all should look like this:\n\nNAME                                READY   STATUS    RESTARTS   AGE\npod/demo-jenkins-64dbd87987-bmndf   1/1     Running   0          2m21s\npod/demo-kafka-0                    1/1     Running   0          2m21s\npod/demo-zookeeper-0                1/1     Running   0          2m21s\n\nNAME                              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE\nservice/demo-jenkins              NodePort    10.108.238.56 8080:30386/TCP               2m21s\nservice/demo-jenkins-agent        ClusterIP   10.98.85.184 50000/TCP                    2m21s\nservice/demo-kafka                ClusterIP   10.109.231.58 9092/TCP                     2m21s\nservice/demo-kafka-headless       ClusterIP   None 9092/TCP                     2m21s\nservice/demo-zookeeper            ClusterIP   10.103.2.231 2181/TCP                     2m21s\nservice/demo-zookeeper-headless   ClusterIP   None 2181/TCP,3888/TCP,2888/TCP   2m21s\n\nNAME                           READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/demo-jenkins   1/1     1            1           2m21s\n\nNAME                                      DESIRED   CURRENT   READY   AGE\nreplicaset.apps/demo-jenkins-64dbd87987   1         1         1       2m21s\n\nNAME                              READY   AGE\nstatefulset.apps/demo-kafka       1/1     2m21s\nstatefulset.apps/demo-zookeeper   1/1     2m21s\n\nHow to Contribute\n\nYou are welcome to try out the plugin and integrate it into your current setup. If you find out any bug or if you would like to request new feature, you can create ticket at JIRA. If you would like to contribute code directly, you can create pull requests in the GitHub page below.\n\nLinks\n\nPhase 2 Demo Video\n\nPhase 2 Presentation Slides\n\nPhase 1 Blog Post\n\nPhase 1 Demo Video\n\nPhase 1 Presentation Slides\n\nRemoting over Apache Kafka plugin source code\n\nProject Page\n\nGitter Channel","title":"Remoting over Apache Kafka 2.0: Built-in Kubernetes support","tags":["remoting","kafka","kubernetes","helm","plugin","gsoc","gsoc2019"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg","srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/77b35/longnguyen.jpg 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/d4a57/longnguyen.jpg 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/68974/longnguyen.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/ef6ff/longnguyen.webp 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/8257c/longnguyen.webp 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/6766a/longnguyen.webp 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/22bfc/longnguyen.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"longngn","html":"<div class=\"paragraph\">\n<p>Long is a Software Engineering student at FPT University, Vietnam. He started to contribute for Jenkins from Google Summer of Code 2019 for the project <a href=\"https://jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Remoting over Apache Kafka with Kubernetes features</a></p>\n</div>","id":"longnguyen","irc":null,"linkedin":null,"name":"Long Nguyen","slug":"/blog/authors/longnguyen","twitter":null}]}},{"node":{"date":"2019-08-16T00:00:00.000Z","id":"765c4285-c91b-5554-af65-6b25fe8433c3","slug":"/blog/2019/08/16/folder-auth-plugin/","strippedHtml":"During my Google Summer of Code Project,\nI have created the brand new Folder Auth Plugin for easily\nmanaging permissions to projects organized in folders from the Folders plugin.\nThis new plugin is designed for fast permission checks with easy-to-manage roles.\nThe 1.0 version of the plugin has just been released and can be downloaded\nfrom your Jenkins' Update center.\n\nThis plugin was inspired by the Role Strategy Plugin\nand brings about performance improvements and makes managing roles much easier.\nThe plugin was developed to overcome performance limitations of the Role Strategy\nplugin on a large number of roles. At the same time, the plugin addresses one\nof the most popular ways of organizing projects in Jenkins, through folders.\nThe plugin also has a new UI with more improvements to come in the future.\n\nThe plugin supports three types of roles which are applicable at different places\nin Jenkins.\n\nGlobal Roles: applicable everywhere in Jenkins\n\nAgent Roles: restrict permissions for multiple agents connected to your instance\n\nFolder Roles: applicable to multiple jobs organized inside folders\n\nPerformance Improvements over Role Strategy Plugin\n\nThis plugin, unlike the Role Strategy plugin, does not use regular expressions\nfor finding matching projects and agents giving us performance improvements\nand makes administrators' lives easier. To reduce the number of roles required\nto be managed, permissions given to a folder through a folder role get inherited\nto all of its children. This is useful for giving access to multiple projects\nthrough a single role. Similarly, an agent role can be applied to multiple agents\nand assigned to multiple users.\n\nThis plugin is designed to outperform Role Strategy Plugin in permission\nchecks. The improvements were measured using the\nmicro-benchmark framework\nI had created during the first phase of my GSoC project.\nBenchmarks for identical configurations for both plugin show that the\npermissions check are up to 934x faster for 500 global roles when compared to\nthe global roles from the Role Strategy 2.13, which in itself contains several\nperformance improvements. Comparing folder roles with Role Strategy’s project\nroles, a permission check for access to a job almost 15x faster for 250 projects\norganized in two-level deep folders on an instance with 150 users. You can see\nthe benchmarks and the result comparisons\nhere.\n\nJenkins Configuration as Code Support\n\nThe plugin supports Jenkins Configuration-as-Code so you can configure permissions\nwithout going through the Web UI. A YAML configuration looks like this:\n\njenkins:\n  authorizationStrategy:\n    folderBased:\n      globalRoles:\n        - name: \"admin\"\n          permissions:\n            - id: \"hudson.model.Hudson.Administer\"\n              # ...\n          sids:\n            - \"admin\"\n        - name: \"read\"\n          permissions:\n            - id: \"hudson.model.Hudson.Read\"\n          sids:\n            - \"user1\"\n      folderRoles:\n        - folders:\n            - \"root\"\n          name: \"viewRoot\"\n          permissions:\n            - id: \"hudson.model.Item.Read\"\n          sids:\n            - \"user1\"\n      agentRoles:\n        - agents:\n            - \"agent1\"\n          name: \"agentRole1\"\n          permissions:\n            - id: \"hudson.model.Computer.Configure\"\n            - id: \"hudson.model.Computer.Disconnect\"\n          sids:\n            - \"user1\"\n\nREST APIs with Swagger support\n\nThe plugin provides REST APIs for managing roles with OpenAPI specifications\nthrough Swagger.json. You can check out the Swagger API on\nSwaggerHub.\nSwaggerHub provides stubs in multiple languages which can be downloaded and\nused to interact with the plugin. You can also see some sample requests from\nthe command line using curl.\n\nWhat’s next\n\nIn the (not-too-distant) future, I would like to work on improving the UI and\nmake the plugin easier to work with. I would also like to work on improving the\nAPIs, documentation and more optimizations for improving the plugin’s performance.\n\nLinks and Feedback\n\nI would love to hear your comments and suggestions. Please feel free to reach\nout to me through either the\nRole Strategy Plugin Gitter chat or through\nJenkins Developer Mailing list.\n\nPresentation slides for second phase evaluations\n\nDocumentation for the Folder Auth Plugin\n\nDemo of the Folder Authorization plugin","title":"Introducing new Folder Authorization Plugin","tags":["plugins","security","performance","gsoc","gsoc2019"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#d8d8d8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/a1ce355d937f34af4ad5cbf6a6d79f30/ff5b9/abhyudayasharma.jpg","srcSet":"/gatsby-jenkins-io/static/a1ce355d937f34af4ad5cbf6a6d79f30/f4523/abhyudayasharma.jpg 32w,\n/gatsby-jenkins-io/static/a1ce355d937f34af4ad5cbf6a6d79f30/1e7bb/abhyudayasharma.jpg 64w,\n/gatsby-jenkins-io/static/a1ce355d937f34af4ad5cbf6a6d79f30/ff5b9/abhyudayasharma.jpg 128w,\n/gatsby-jenkins-io/static/a1ce355d937f34af4ad5cbf6a6d79f30/b48b6/abhyudayasharma.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/a1ce355d937f34af4ad5cbf6a6d79f30/1fd06/abhyudayasharma.webp 32w,\n/gatsby-jenkins-io/static/a1ce355d937f34af4ad5cbf6a6d79f30/9edd6/abhyudayasharma.webp 64w,\n/gatsby-jenkins-io/static/a1ce355d937f34af4ad5cbf6a6d79f30/f5f75/abhyudayasharma.webp 128w,\n/gatsby-jenkins-io/static/a1ce355d937f34af4ad5cbf6a6d79f30/05d06/abhyudayasharma.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":142}}},"blog":null,"github":"AbhyudayaSharma","html":"<div class=\"paragraph\">\n<p>Abhyudaya is a Computer Science student at Shiv Nadar University, India.\nHe is participating in Google Summer of Code 2019 to improve the performance\nof the <a href=\"https://github.com/jenkinsci/role-strategy-plugin\">Role Strategy Plugin</a>.</p>\n</div>","id":"abhyudayasharma","irc":null,"linkedin":null,"name":"Abhyudaya Sharma","slug":"/blog/authors/abhyudayasharma","twitter":null}]}},{"node":{"date":"2019-07-30T00:00:00.000Z","id":"9f72bb8f-5b81-55ef-8ffc-f58fb42841f2","slug":"/blog/2019/07/30/plugin-management-tool-phase2-updates/","strippedHtml":"At end of the first GSoC phase, I\nannounced\nthe first alpha release of the CLI tool and library that will help centralize\nplugin management and make plugin tooling easier.\n\nPhase 2 has mainly been focused on improving upon the initial CLI and library written\nin Coding Phase 1. In particular, we’ve been focusing on getting the tool ready to\nincorporate into the Jenkins Docker Image to replace the\ninstall-plugins.sh bash script\nto download plugins.  This work included parsing improvements so that blank lines and comments in the\nplugins.txt file are filtered out, allowing update centers and the plugin download\ndirectory to be set via environment variables or CLI Options, creating Windows\ncompatible defaults, and fixing a bug in which dependencies for specific\nplugin versions were not always getting resolved correctly.\n\nIn parallel to getting the tool ready for Jenkins Docker integration, Phase 2 saw\nthe addition of several new features.\n\nYaml Input\n\nIn addition to specifying the plugins they want to download via the --plugins\nCLI option or through a .txt file, users can now use a Jenkins yaml file with a\nplugins root element.\n\nSay goodbye to the days of specifying incremental\nplugins like incrementals;org.jenkins-ci.plugins.workflow;2.20-rc530.b4f7f7869384 -\n  you can enter the artifactId, groupId, and version to specify an incremental plugin.\n\nMaking the Download Process More Transparent\n\nPreviously, the plugin download process was not very transparent to users - it was\ndifficult to know the final set of plugins that would be downloaded after pulling in\nall the dependencies.  Instead of determing the set of plugins that will be downloaded\nat the time of download, users now have the option to see the full set of plugins\nand their versions that will be downloaded in advance. With the --list CLI\noption, users can see all currently downloaded and bundled plugins, the set of all\nplugins that will be downloaded, and the effective plugin set - the set of all\nplugins that are already downloaded or will be downloaded.\n\nViewing Information About plugins\n\nNow that you know which plugins will be downloaded, wouldn’t it be nice to know\nif these are the latest versions or if any of the versions you want to install have\nsecurity warnings?  You can do that now too.\n\nNext Steps and Additional Information\n\nThe updates mentioned in this blog will be released soon so you can try them out.\nThe focus of Phase 3 will be to continue to iterate upon and improve the library\nand CLI. We hope to release a first version and submit a pull request to Jenkins Docker soon.\nThanks to everyone who has already tried it out and given feedback! I will also be\npresenting my work at DevOps World\nin San Francisco in a few weeks.  You can use the code PREVIEW for a discounted registration\n($799 instead of $1,499).\n\nFeel free to reach out through\nthe Plugin Installation Manager CLI Tool Gitter chat or through\nthe Jenkins Developer Mailing list. I would love to get your questions, comments, and feedback!\nWe have meetings Tuesdays and Thursdays at 6PM UTC.\n\nPhase 2 Presentation Slides\n\nPhase 2 Recorded Demo\n\nJira Issue Search\n\nRepository","title":"Plugin Management Library and CLI Tool Phase 2 GSoC Updates","tags":["plugins","pluginmanagement","platform-sig","cli","gsoc","gsoc2019"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#280818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7f211/stopalopa.jpg","srcSet":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/405b9/stopalopa.jpg 32w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7b6be/stopalopa.jpg 64w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7f211/stopalopa.jpg 128w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/ebcfb/stopalopa.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/0ade5/stopalopa.webp 32w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/5b0b1/stopalopa.webp 64w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/96834/stopalopa.webp 128w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/805f6/stopalopa.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":184}}},"blog":null,"github":"stopalopa","html":"<div class=\"paragraph\">\n<p>Natasha is a Master&#8217;s student at Penn State University. She was accepted to Google Summer of Code 2019 for a project on creating <a href=\"https://jenkins.io/projects/gsoc/2019/plugin-installation-manager-tool-cli/\">a plugin management tool</a>.\nIn her spare time she enjoys spending time outdoors, listening to podcasts and cuddling with her cat.</p>\n</div>","id":"stopalopa","irc":null,"linkedin":null,"name":"Natasha Stopa","slug":"/blog/authors/stopalopa","twitter":"stopamine"}]}},{"node":{"date":"2019-07-25T00:00:00.000Z","id":"c8dcfc2d-fe9b-51ed-b1d8-8da5973e144c","slug":"/blog/2019/07/25/azure-artifact-manager/","strippedHtml":"Jenkins stores all generated artifacts on the controller server filesystem. This presents a couple of challenges especially when you try to run Jenkins in the cloud:\n\nAs the number of artifacts grow, your Jenkins controller will run out of disk space. Eventually, performance can be impacted.\n\nFrequent transfer of files between agents and controller may cause load, CPU or network issues which are always hard to diagnose.\n\nSeveral existing plugins allow you to manage your artifacts externally. To use these plugins, you need to know how they work and perform specific steps in your job’s configuration. And if you are new to Jenkins, you may find it hard to follow existing samples in Jenkins tutorial like Recording tests and artifacts.\n\nSo, if you are running Jenkins in Azure, you can consider automatically managing new artifacts on Azure Storage. The new Azure Artifact Management plugin allows you to store artifacts in Azure blob storage and simplify your existing Jenkins jobs that contain Jenkins general artifacts management steps. This approach will give you all the advantages of a cloud storage, with less effort on your part to maintain your Jenkins instance.\n\nConfiguration\n\nAzure storage account\n\nFirst, you need to have an Azure Storage account. You can skip this section if you already have one. Otherwise, create an Azure storage account for storing your artifacts. Follow this tutorial to quickly create one. Then navigate to Access keys in the Settings section to get the storage account name and one of its keys.\n\nExisting Jenkins instance\n\nFor existing Jenkins instance, make sure you install the Azure Artifact Manager plugin. Then you can go to your Jenkins System Configuration page and locate the Artifact Management for Builds section. Select the Add button to configure an Azure Artifact Storage. Fill in the following parameters:\n\nStorage Type: Azure storage supports several storage types like blob, file, queue etc. This plugin currently supports blob storage only.\n\nStorage Credentials: Credentials used to authenticate with Azure storage. If you do not have an existing Azure storage credential in you Jenkins credential store, click the Add button and choose Microsoft Azure Storage kind to create one.\n\nAzure Container Name: The container under which to keep your artifacts. If the container name does not exist in the blob, this plugin automatically creates one for you when artifacts are uploaded to the blob.\n\nBase Prefix: Prefix added to your artifact paths stored in your container, a forward slash will be parsed as a folder. In the following screenshot, all your artifacts will be stored in the “staging” folder in the container “Jenkins”.\n\nNew Jenkins instance\n\nIf you need to create a new Jenkins controller, follow this tutorial to quickly create an Jenkins instance on Azure. In the Integration Settings section, you can now set up Azure Artifact Manager directly. Note that you can change any of the configuration after your Jenkins instance is created. Azure storage account and credential, in this case, are still prerequisites.\n\nUsage\n\nJenkins Pipeline\n\nHere are a few commonly used artifact related steps in pipeline jobs; all are supported to push artifacts to the Azure Storage blob specified.\n\nYou can use archiveArtifacts step to archive target artifacts into Azure storage. For more details about archiveArtifacts step, see the Jenkins archiveArtifacts setp documentation.\n\nnode {\n  //...\n  stage('Archive') {\n    archiveArtifacts \"pattern\"\n  }\n}\n\nYou can use the unarchive step to retrieve the artifacts from Azure storage. For more details about unarchive step, please see unarchive step documentation.\n\nnode {\n  //...\n  stage('Unarchive') {\n    unarchive mapping: [\"pattern\": '.']\n  }\n}\n\nTo save a set of files so that you can use them later in the same build (generally on another node or workspace), you can use stash step to store files into Azure storage for later use. Stash step documentation can be found here.\n\nnode {\n  //...\n  stash name: 'name', includes: '*'\n}\n\nYou can use unstash step to retrieve the files saved with stash step from Azure storage to the local workspace. Unstash documentation can be found here.\n\nnode {\n  //...\n  unstash 'name'\n}\n\nFreeStyle Job\n\nFor a FreeStyle Jenkins job, you can use Archive the artifacts step in Post-build Actions to upload the target artifacts into Azure storage.\n\nThis Azure Artifact Manager plugin is also compatible with some other popular management plugins, such as the Copy Artifact plugin. You can still use these plugins without changing anything.\n\nTroubleshooting\n\nIf you have any problems or suggestions when using Azure Artifact Manager plugin, you can file a ticket on Jenkins JIRA for the azure-artifact-manager-plugin component.\n\nConclusion\n\nThe Azure Artifact Manager enables a more cloud-native Jenkins. This is the first step in the Cloud Native project. We have a long way to go to get Jenkins to run on cloud environments as a true “Cloud Native” application. We need help and welcome your participation and contributions to make Jenkins better. Please start contributing and/or give us feedback!","title":"Managing Jenkins Artifacts with the Azure Artifact Manager Plugin","tags":["general","azure","plugin"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/5f4c376818aa25b85cee206264e2692f/19e71/jshen.jpg","srcSet":"/gatsby-jenkins-io/static/5f4c376818aa25b85cee206264e2692f/77b35/jshen.jpg 32w,\n/gatsby-jenkins-io/static/5f4c376818aa25b85cee206264e2692f/d4a57/jshen.jpg 64w,\n/gatsby-jenkins-io/static/5f4c376818aa25b85cee206264e2692f/19e71/jshen.jpg 128w,\n/gatsby-jenkins-io/static/5f4c376818aa25b85cee206264e2692f/68974/jshen.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/5f4c376818aa25b85cee206264e2692f/ef6ff/jshen.webp 32w,\n/gatsby-jenkins-io/static/5f4c376818aa25b85cee206264e2692f/8257c/jshen.webp 64w,\n/gatsby-jenkins-io/static/5f4c376818aa25b85cee206264e2692f/6766a/jshen.webp 128w,\n/gatsby-jenkins-io/static/5f4c376818aa25b85cee206264e2692f/22bfc/jshen.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"gavinfish","html":"<div class=\"paragraph\">\n<p>Software engineer at Microsoft. Focusing on DevOps and cloud native.</p>\n</div>","id":"jshen","irc":null,"linkedin":null,"name":"Jie Shen","slug":"/blog/authors/jshen","twitter":null}]}},{"node":{"date":"2019-07-21T00:00:00.000Z","id":"e7a046ff-9ae1-585e-826a-dc8f41a2ab04","slug":"/blog/2019/07/21/Jenkins-code-coverage-diff-for-pull-request/","strippedHtml":"Hello.\n\nAs you may know, during the last year GSoC Mr. Shenyu Zheng was working on the Jenkins Code Coverage API Plugin. With Mr. Zheng we made a change so the plugin now is able to check the difference in code coverage between pull requests and target branches.\n\nIn lots of projects it is a common practice to track if unit tests code coverage doesn’t decrease. So, with this plugin, you may skip separate services that track code coverage and have this feature right in your favorite CI system.\n\nHow it works\n\nWhen you build a PR in Jenkins, using plugins like Github or Bitbucket Branch Source, that use SCM API Plugin, your PR knows what target branch commit it is based on. (The commit may change because of Discover pull requests from origin strategies). To calculate the diff, when you publish your coverage from PR, it looks for the target branch build for the commit that your PR was based on. If it finds the build on the target branch, it looks for any published code coverage for this target branch build. In case the build has it, the plugin calculates the percentage diff for the line coverage and shows it on the pull request build page. Also, it gives you a link to the target branch build that was used for the comparison.\n\nThat it how it looks like:\n\nDecreased coverage\n\nIncreased coverage\n\nHow to enable code coverage diff for pull requests\n\nTo enable this behavior you need to publish your code coverage with the calculateDiffForChangeRequests flag equals true, like this:\n.Jenkinsfile\n\nnode(...) {\n  ...\n  // Here we are using the istanbulCoberturaAdapter\n  publishCoverage adapters: [istanbulCoberturaAdapter('cobertura-coverage.xml')],\n    sourceFileResolver: sourceFiles('NEVER_STORE'),\n    calculateDiffForChangeRequests: true\n\n  ...\n}\n\nLinks and Feedback\n\nIf you have some questions about this behavior, please ask me in email.\n\nYou are free to contribute to this plugin to make it better for everyone. There are a lot of interesting features that can be added and issues that can be solved. Also, you can write some new plugins for other code coverage formats that use the Code Coverage API plugin as a base.\n\nHere is the repo of the plugin - Code Coverage API Plugin\n\nThank you.","title":"Jenkins code coverage diff in pull requests","tags":["plugins","codecoverage"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/6ea2a73294a8396d74efba91c53e1bfe/19e71/asavanchuk.jpg","srcSet":"/gatsby-jenkins-io/static/6ea2a73294a8396d74efba91c53e1bfe/77b35/asavanchuk.jpg 32w,\n/gatsby-jenkins-io/static/6ea2a73294a8396d74efba91c53e1bfe/d4a57/asavanchuk.jpg 64w,\n/gatsby-jenkins-io/static/6ea2a73294a8396d74efba91c53e1bfe/19e71/asavanchuk.jpg 128w,\n/gatsby-jenkins-io/static/6ea2a73294a8396d74efba91c53e1bfe/68974/asavanchuk.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/6ea2a73294a8396d74efba91c53e1bfe/ef6ff/asavanchuk.webp 32w,\n/gatsby-jenkins-io/static/6ea2a73294a8396d74efba91c53e1bfe/8257c/asavanchuk.webp 64w,\n/gatsby-jenkins-io/static/6ea2a73294a8396d74efba91c53e1bfe/6766a/asavanchuk.webp 128w,\n/gatsby-jenkins-io/static/6ea2a73294a8396d74efba91c53e1bfe/22bfc/asavanchuk.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"tempora-mutantur","html":"<div class=\"paragraph\">\n<p>Software developer from Minsk, Belarus.</p>\n</div>","id":"asavanchuk","irc":null,"linkedin":null,"name":"Aliaksei Savanchuk","slug":"/blog/authors/asavanchuk","twitter":null}]}},{"node":{"date":"2019-07-17T00:00:00.000Z","id":"9f73ac2f-d418-5bf3-8f3c-f90ae712af6e","slug":"/blog/2019/07/17/DevOps-World-Jenkins-World-2019-San-Francisco-Lunch-Demos/","strippedHtml":"If you’re looking for more opportunities to learn Jenkins and Jenkins X during the lunch hours while at DevOps World - Jenkins World 2019 San Francisco , come join us at the Jenkins and Jenkins X Community Booth!\n\nIf you don’t yet have your pass for DevOps World - Jenkins World 2019 San Francisco , and don’t want to miss out on the fun, you can get yours using JWFOSS for a 30% discount.\n\nDuring lunch hours we are scheduling the following demo briefs at the Jenkins and Jenkins X Community Booth:\n\nWednesday  August 14, 2019\n\n12:10 - 12:25pm \tFaster Git Mark Waite\n\nAttendees will learn the techniques they can use with Jenkins to make their systems clone and update git repositories faster and with less disc space.\n\n12:25 - 12:40pm\tObservability in Jenkins X Oscar Medina\n\nIf you are using Jenkins X, you’re already building at rapid pace.  However, most miss the opportunity to gain real insights into their build and release pipeline.  I’ll show you how you can increase observability by activating metric capture and analysis during a containerized application deployment with Jenkins X.  This  entails modifying the declarative Tekton pipelines.\n\n12:40 - 12:55pm\tFrom setup to build status on the command line Martin d’Anjou\n\nUsing bash, groovy, JCasC and the jenkins-rest, we demonstrate how to setup Jenkins from scratch, upload a configuration as code yaml file, create folders and jobs, run a build, and track it to its completion, all from the command line, without ever touching the GUI.\n\n12:55 - 1:10pm\t\tDevOps without Quality: An IT Horror Story\tLaura Keaton\n\nDevOps, the current IT Industry sweetheart, has a dark secret that has victimized organizations on their transformational journey. Investigate two case studies that left development and delivery teams in tatters and how quality engineering solutions could have prevented their disastrous outcomes.\n\n1:10 - 1:25pm\tSecuring Your Jenkins Container Pipeline with Open Source Tools Christian Wiens\n\nDiscuss the security pitfalls of containers and how embedding an open source image scanning and policy based compliance tool like Anchore into your CI/CD pipeline can mitigate this risk.\n\nThursday  August 15, 2019\n\n12:25 - 12:35pm\tResults from the 2019 Jenkins Google Summer of Code Martin d’Anjou\n\nIn 2019, the Jenkins project participated in the Google Summer of Code. This is an annual, international, program which encourages college-aged students to participate in open source projects during the summer break between classes. In 2019, we had dozens of applications and many student projects. In this session, we will showcase the students' projects and talk about what they bring to the Jenkins ecosystem.\n\n12:35 - 12:45pm\t\tPlugin installation CLI Tool Natasha Stopa\n\nThis talk will demo the new plugin installation tool done as part of a Google Summer of Code project. It will show the CLI features and how the library has been incorporated into other areas of Jenkins.\n\n12:45 - 12:55pm\t\tSysdig Secure Jenkins Plugin Marky Jackson\n\nSysdig Secure is a container security platform that brings together docker image scanning and run-time protection to identify vulnerabilities, block threats, enforce compliance, and audit activity across your microservices. The Sysdig Secure Jenkins plugin can be used in a Pipeline job, or added as a build step to a Freestyle job, to automate the process of running an image analysis, evaluating custom policies against images, and performing security scans.\n\n12:55 - 1:10pm\t\tUsing React for plugin UI Jeff Pearce\n\nThe working hours plugin has a date driven UI. During this summer’s Google Summer of Code, our student rewrite the UI in React, so that we could take advantage open source modules such as calendar pickers. I’ll talk about how the student approached the UI, demonstrate the UI and talk about particular challenges we faces.\n\n1:10 - 1:25pm\t\tJenkins GKE Plugin Craig Barber\n\nIn this demo we will showcase the Jenkins GKE plugin, newest addition to GCP’s suite of officially supported plugins. We’ll show how to leverage this plugin to deploy applications built in Jenkins pipelines to multiple clusters running in GKE.\n\nGrab your lunch and join us at the community theater!","title":"DevOps World - Jenkins World 2019 San Francisco: Lunch Time Demos","tags":["event","devopsworldjenkinsworld2019"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#281818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/a55dc/alyssat.jpg","srcSet":"/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/8d248/alyssat.jpg 32w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/c004c/alyssat.jpg 64w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/a55dc/alyssat.jpg 128w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/9e67b/alyssat.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/22924/alyssat.webp 32w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/89767/alyssat.webp 64w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/40d97/alyssat.webp 128w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/5028e/alyssat.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":166}}},"blog":null,"github":"alyssat","html":"<div class=\"paragraph\">\n<p>Member of the <a href=\"/sigs/advocacy-and-outreach/\">Jenkins Advocacy and Outreach SIG</a>.\nAlyssa drives and manages Jenkins participation in community events and conferences like <a href=\"https://fosdem.org/\">FOSDEM</a>, <a href=\"https://www.socallinuxexpo.org/\">SCaLE</a>, <a href=\"https://events.linuxfoundation.org/cdcon/\">cdCON</a>, and <a href=\"https://events19.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2019/\">KubeCon</a>.\nShe is also responsible for Marketing &amp; Community Programs at <a href=\"https://cloudbees.com\">CloudBees, Inc.</a></p>\n</div>","id":"alyssat","irc":null,"linkedin":null,"name":"Alyssa Tong","slug":"/blog/authors/alyssat","twitter":null}]}}]}},"pageContext":{"limit":8,"skip":128,"numPages":100,"currentPage":17}},
    "staticQueryHashes": ["3649515864"]}