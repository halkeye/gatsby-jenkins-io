{
    "componentChunkName": "component---src-templates-blog-list-template-js",
    "path": "/blog/page/39",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2017-04-12T00:00:00.000Z","id":"00912854-e420-592f-b78c-f52234cabf9a","slug":"/blog/2017/04/12/jenkinsworld-agenda-announced/","strippedHtml":"This is a guest post by Alyssa Tong, who runs\nthe Jenkins Area Meetup program and is also responsible for\nMarketing & Community Programs at CloudBees, Inc.\n\nI am excited to announce the agenda for\nJenkins World 2017. This\nyear’s event promises to have something for everyone - whether you are a\nnovice, intermediate, or advanced user…​you are covered.  Jenkins World 2017\nconsists of 6 tracks, 60+ Jenkins and DevOps sessions, 40+ industry speakers,\n16+ training and workshops.\n\nHere is a sneak peek at Jenkins World 2017:\n\nShow 'n Tell\n\nIt’s all about that demo. These sessions are technically advanced with some code sharing, heavy on demos and just a tad bit of slides.\n\nPlugin Development for Pipeline\n\nExtending Blue Ocean\n\nHow to Use Jenkins Less: How and Why You Can Minimize Your Jenkins Footprint\n\nJenkins Pipeline on your Local Box to Reduce Cycle Time\n\nWar Stories\n\nThese are first-hand Jenkins experience and lessons learned. These stories will inspire your innovative solutions.\n\nPipelines At Scale: How Big, How Fast, How Many?\n\nJenkinsPipelineUnit: Test Your Continuous Delivery Pipeline\n\nCodifying the Build and Release Process with a Jenkins Pipeline Shared Library\n\nJumping on the Continuous Delivery Bandwagon: From 100+ FreeStyle Jobs to Pipeline(s) - Tactics, Pitfalls and Woes\n\nTrainings and Workshops\n\n(additional fees apply to certain trainings/workshops)\n\nIntroduction to Jenkins\n\nIntroduction to Plugin Development\n\nLet’s Build a Jenkins Pipeline!\n\nFundamentals of Jenkins and Docker\n\nThe Jenkins World agenda is packed\nwith even more sessions, it will be a very informational event.\n\nConvince your Boss\n\nWe know that attending Jenkins World needs little convincing but just in case\nyou need a little help to justify your attendance, we’ve created a\nJustify your Trip\ndocument to help speed up the process.\n\nRegister for Jenkins World\n2017 with the code JWATONG for a 20% discount off your pass.\n\nHope to see you there!","title":"Jenkins World 2017 Agenda is Live!","tags":["event","jenkinsworld","jenkinsworld2017"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#281818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/a55dc/alyssat.jpg","srcSet":"/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/8d248/alyssat.jpg 32w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/c004c/alyssat.jpg 64w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/a55dc/alyssat.jpg 128w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/9e67b/alyssat.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/22924/alyssat.webp 32w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/89767/alyssat.webp 64w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/40d97/alyssat.webp 128w,\n/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/5028e/alyssat.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":166}},"publicURL":"/gatsby-jenkins-io/static/fee8c4b53c42d9c396735bc2b737ff84/alyssat.jpg"},"blog":null,"github":"alyssat","html":"<div class=\"paragraph\">\n<p>Member of the <a href=\"/sigs/advocacy-and-outreach/\">Jenkins Advocacy and Outreach SIG</a>.\nAlyssa drives and manages Jenkins participation in community events and conferences like <a href=\"https://fosdem.org/\">FOSDEM</a>, <a href=\"https://www.socallinuxexpo.org/\">SCaLE</a>, <a href=\"https://events.linuxfoundation.org/cdcon/\">cdCON</a>, and <a href=\"https://events19.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2019/\">KubeCon</a>.\nShe is also responsible for Marketing &amp; Community Programs at <a href=\"https://cloudbees.com\">CloudBees, Inc.</a></p>\n</div>","id":"alyssat","irc":null,"linkedin":null,"name":"Alyssa Tong","slug":"/blog/authors/alyssat/","twitter":null}]}},{"node":{"date":"2017-04-12T00:00:00.000Z","id":"de6a7833-33e4-5a1b-8942-62eba9d0e88e","slug":"/blog/2017/04/12/welcome-to-blue-ocean-dashboard/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nBlue Ocean is a new user experience for Jenkins,\nand version 1.0 is now live!\nBlue Ocean makes Jenkins, and continuous delivery, approachable to all team members.\nIn my previous post,\nI used the Blue Ocean Activity View to track the state of branches and\nPull Requests in one project.\nIn this video, I’ll use the Blue Ocean Dashboard get a personalized view of the\nareas that of my project that are most important to me,\nand also to monitor multiple projects.\nPlease Enjoy!","title":"Getting Started with the Blue Ocean Dashboard","tags":["blueocean","ux","pipeline","tutorial","screencast"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#382818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/19e71/lnewman.jpg","srcSet":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/77b35/lnewman.jpg 32w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/d4a57/lnewman.jpg 64w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/19e71/lnewman.jpg 128w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/68974/lnewman.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/ef6ff/lnewman.webp 32w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/8257c/lnewman.webp 64w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/6766a/lnewman.webp 128w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/22bfc/lnewman.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/lnewman.jpeg"},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/authors/lnewman/","twitter":"bitwiseman"}]}},{"node":{"date":"2017-04-11T00:00:00.000Z","id":"a9284a81-2902-5a91-9618-c11ceca70747","slug":"/blog/2017/04/11/new-cli/","strippedHtml":"In response to the zero-day vulnerability we fixed in November, I wrote the following:\n\nMoving forward, the Jenkins security team is revisiting the design of the Jenkins CLI over the coming weeks to prevent this class of vulnerability in the future.\nIf you are interested in participating in that discussion, please join in on the jenkinsci-dev@ mailing list.\n\nIn early February, several project contributors met after FOSDEM for a one day hackathon.\nI looked into the feasibility of a purely SSH-based CLI.\nWhile I considered the experiment to be a success, it was far from ready to be used in a production environment.\n\nA few weeks later, long-time contributor and Jenkins security team member Jesse Glick took over, and published a detailed proposal for a new, simple CLI protocol without remoting.\n\nIn just a month, he implemented his proposal, and I’m very happy to announce that this new implementation of the Jenkins CLI has now made it into 2.54!\n\nExisting jenkins-cli.jar clients should continue working as before, unless an administrator disables the remoting connection mode in Configure Global Security.\nThat said, we recommend you download the new jenkins-cli.jar in Jenkins, and use its new -http mode.\nWith few (now deprecated) exceptions, CLI commands work like before.\nThis will allow you to disable the remoting mode for the CLI on the Jenkins controller to prevent similar vulnerabilities in the future.\n\nSSH-based CLI use should be unaffected by this change.\nNote that new Jenkins instances now start with the SSH server port disabled, and the configuration option for that was moved into Configure Global Security.\n\nYou can learn all about the CLI and its new behavior in the Jenkins handbook.","title":"New, safer CLI in 2.54","tags":["plugins","security","remoting"],"authors":[{"avatar":null,"blog":null,"github":"daniel-beck","html":"<div class=\"paragraph\">\n<p>Daniel is a Jenkins core maintainer and, as security officer, leads the <a href=\"/security/#team\">Jenkins security team</a>.\nHe sometimes contributes to developer documentation and project infrastructure.</p>\n</div>","id":"daniel-beck","irc":null,"linkedin":null,"name":"Daniel Beck","slug":"/blog/authors/daniel-beck/","twitter":null}]}},{"node":{"date":"2017-04-11T00:00:00.000Z","id":"9d6e30d7-7295-5fb0-b863-4e1db0a6fa14","slug":"/blog/2017/04/11/welcome-to-blue-ocean-pipeline-activity/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nBlue Ocean is a new user experience for Jenkins,\nand version 1.0 is now live!\nBlue Ocean makes Jenkins, and continuous delivery, approachable to all team members.\nIn my previous post,\nI showed how easy it is to create and edit Declarative Pipelines using the Blue Ocean Visual Pipeline Editor.\nIn this video, I’ll use the Blue Ocean Activity View to track the\nstate of branches and Pull Requests in one project.\nBlue Ocean makes it so much easier to find the logs I need to triage failures.\n\nPlease Enjoy!  In my\nnext video,\nI’ll switch from looking at a single project to monitoring multiple projects with\nthe Blue Ocean Dashboard.","title":"Getting Started with Blue Ocean's Activity View","tags":["blueocean","ux","pipeline","tutorial","screencast"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#382818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/19e71/lnewman.jpg","srcSet":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/77b35/lnewman.jpg 32w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/d4a57/lnewman.jpg 64w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/19e71/lnewman.jpg 128w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/68974/lnewman.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/ef6ff/lnewman.webp 32w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/8257c/lnewman.webp 64w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/6766a/lnewman.webp 128w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/22bfc/lnewman.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/lnewman.jpeg"},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/authors/lnewman/","twitter":"bitwiseman"}]}},{"node":{"date":"2017-04-10T00:00:00.000Z","id":"0e7cf038-03bd-5373-8649-aa442a523d11","slug":"/blog/2017/04/10/jenkins-has-upgraded-to-java-8/","strippedHtml":"We announced in January\nthat Jenkins would be upgrading its Java runtime dependency to Java 8 this\nyear. After a sizable amount of preparation, this week’s release of\nJenkins 2.54 is the first weekly release to require\na Java 8 runtime.\n\nFor users of the weekly release, this means that Jenkins 2.54 must have\na Java 8 runtime installed on the system in order to\nrun. Those using the\njenkinsci/jenkins:latest\nDocker container won’t need to take any action, as the Java runtime environment\nis already bundled in the container.\n\nIn addition to upgrading the Java Runtime Environment for the controller, any\nconnected agents must upgrade to a Java 8 runtime environment.\n\nThe Long-Term Support (LTS) release line however, has\nnot yet been updated to require Java 8. We are expecting the first LTS release\nto require Java 8 in June.\n\nCompatibility Notes\n\nUsing the Maven project type with Java 7\n\nUsers with jobs configured with the \"Maven project\" type may not be able to use\nJava 7 for their Maven jobs. The correct behavior is not guaranteed so\nproceed at your own risk. The Maven Project uses Jenkins Remoting to establish\n\"interceptors\" within the Maven executable. Because of this, Maven uses\nRemoting and other Jenkins core classes, and this behavior may break an update.\n\nSee also:\nJENKINS-40990.\n\nJava 9 compatibility\n\nAt this point, Jenkins does not yet support Java 9 development releases.\n\nAs always, if you have questions please ask on the\njenkinsci-users@ mailing list or\nreport\nan issue in JIRA.\n\nReferences\n\nJVM statistics post back in November 2016.\n\nOfficial announcement blog post.\n\nOriginal JIRA ticket for this upgrade.\n\nThe 6 months, 82 messages, thread on the Jenkins developers mailing list\n\nThe announcement on the Jenkins users mailing list\n\nThe Pull request on Jenkins core","title":"Starting with 2.54, Jenkins now requires Java 8","tags":["java8"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8e8d8","images":{"fallback":{"src":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/f1e03/batmat.jpg","srcSet":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/ede19/batmat.jpg 32w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/bc20c/batmat.jpg 64w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/f1e03/batmat.jpg 128w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/b691b/batmat.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/8ba60/batmat.webp 32w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/a9ea7/batmat.webp 64w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/51559/batmat.webp 128w,\n/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/28f98/batmat.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":130}},"publicURL":"/gatsby-jenkins-io/static/05e25bcf6699abfce74f0630971e7c78/batmat.jpg"},"blog":"http://batmat.net","github":"batmat","html":"<div class=\"paragraph\">\n<p>Baptiste has been using and contributing to Jenkins since it was called differently, and is a huge proponent of the Agile, Devops &amp; Continuous Delivery movements.\nHe loves to discuss not only the technical aspects, but also the even more essential cultural aspects of this all, working together to improve the value provided to customers in a great inclusive and blameless environment.</p>\n</div>","id":"batmat","irc":null,"linkedin":null,"name":"Baptiste Mathus","slug":"/blog/authors/batmat/","twitter":"bmathus"}]}},{"node":{"date":"2017-04-10T00:00:00.000Z","id":"2ff77860-9123-5dcf-b79a-b4d987a5169e","slug":"/blog/2017/04/10/security-advisory/","strippedHtml":"These are not security fixes you can apply blindly. We strongly recommend you read this post, as well as the security advisory to understand what the vulnerabilities are, whether and how they affect you, and what to expect when upgrading plugins.\n\nMultiple Jenkins plugins received updates today that fix several security vulnerabilities or other security-related issues:\n\nEmail Extension (Email-ext)\n\nEnvironment Injector (EnvInject)\n\nExtensible Choice Parameter\n\nGroovy\n\nJob DSL\n\nLockable Resources\n\nMatrix Authorization\n\nRole Strategy\n\nWarnings\n\nWe also included some plugins that received security fixes in the past that haven’t been mentioned in a security advisory before:\n\nActive Choices (uno-choice)\n\nExtended Choice Parameter\n\nGroovy Postbuild\n\nGroovy Label Assignment\n\nAdditionally, we included other plugins in the advisory that are not getting updated today, but whose vulnerabilities are similar to those of plugins getting fixed.\nIn total, over 30 plugins are part of the advisory.\n\nWhile there are fixes for other vulnerabilities as well, the majority of the advisory (and the rest of this blog post) is about arbitrary code execution vulnerabilities in Jenkins plugins.\n\nBackground\n\nJenkins administrators have long been able to use the Groovy script console and related functionality to execute arbitrary code in Jenkins for diagnostic or otherwise administrative purposes.\nRather than having to rely on plugins implementing the desired functionality, experienced Jenkins admins were able to run a number of scripts as needed to implement various administrative features.\n\nThis bled over into plugins:\nIt’s just easy for a plugin developer to build on top of Groovy and let the users figure out exactly what they want to do.\nUnfortunately, for a long time, there was no technology in Jenkins to limit what could be done in Groovy scripts, so anywhere Groovy would be executed, arbitrary code could be executed.\n\nWe were treating this as a security issue for the first time in the fix for SECURITY-125, about two years ago, something that first required splitting off the Matrix Project type from core into a plugin, and making use of Script Security Plugin.\n\nUnfortunately, other plugins weren’t integrating with Script Security plugin.\nAnd even diligent administrators who understand the problem of arbitrary code execution via Groovy scripts may not be able to tell whether a given plugin is affected:\nIn some cases, you’d need to dive into the source code to see whether, and how, it uses Groovy in a way that can be exploited by regular users to perform actions they otherwise wouldn’t be allowed to do.\n\nAbout the advisory\n\nBroadly speaking, there are three levels of severity for scripting related vulnerabilities in Jenkins:\n\nThe lowest severity ones are those that confuse Overall/Administer and Overall/Run Scripts permissions.\nThese are irrelevant for most Jenkins instances.\nMore on that later.\n\nThe next level up are vulnerabilities that effectively grant the ability to run arbitrary scripts to users who are able to configure jobs.\nWhile these users aren’t administrators, they have a nontrivial level of permissions, so are somewhat trusted.\nThis is often a difficult configuration to adequately secure, but it’s a supported configuration, and any plugin that undermines the security of this configuration will be treated as having a vulnerability.\n\nThe most severe ones are those that require little or no access to Jenkins to successfully exploit.\nThis typically does require the Overall/Read permission to access certain endpoints, but Pipeline as Code may allow people with SCM commit access to exploit scripting related weaknesses as well.\n\nArbitrary code execution is a serious enough issue that publishing a security advisory for just a few plugins would actually be detrimental to overall security:\nMalicious users would be able to review the fixes we do publish, and try to find other plugins affected by a similar vulnerability.\n\nThe advisory issued today lists all plugins we could find that implement any arbitrary code execution vulnerability (i.e. all three levels described above).\nAs this affects over 30 plugins, many of them not actively maintained, the problem exceeds the capacity of the Jenkins security team to address them all.\n\nFor that reason, the Jenkins security team decided that we would fix as many of the plugins as we can handle, and leaving the others to their maintainers.\n\nHow to proceed\n\nWe strongly advise administrators to review the list of affected plugins in the advisory, and look for any plugins that are installed on their instances.\nIt is very likely there’s at least one plugin installed that is affected by this.\nIf you’re on Jenkins 2.40 or newer, or Jenkins LTS 2.32.2 or newer, a warning will appear that informs you about vulnerable plugins you currently have installed.\n\nOnce you’ve determined which plugins you use are included in the advisory, you need to determine whether it is something that affects your particular setup.\n\nIf the vulnerability confuses Overall/Administer and Overall/Run Scripts, but all administrators of your Jenkins instance are able to run scripts anyway, this vulnerability is not a problem for you.\nThis is the case in the vast majority of Jenkins instances.\nOnly custom setups, typically to allow for hosted Jenkins services, don’t grant Overall/Run Scripts permission to administrators.\n\nIf the vulnerability allows users with the permission to e.g. configure jobs to execute arbitrary code, it is only a problem if there are users that have the lower permission (e.g. Item/Configure) but not the higher ( Overall/Run Scripts).\nSimple authorization strategies like Logged in users can do anything are therefore not affected by this issue.\n\nEven vulnerabilities that require no notable permissions in Jenkins may have prerequisites to be exploitable.\nFor example, Overall/Read access may be required, but only granted to users who are also administrators, or in Pipeline as Code setups, everyone with SCM commit access may also be a Jenkins administrator.\n\nThe above should guide your decision how urgently you should upgrade affected plugins with a fix, or disable affected plugins without a fix.\nRemember that you may decide in the future to reconfigure Jenkins in a way that makes previously irrelevant permission distinctions a huge problem, so it is not a good idea to continue using vulnerable plugin versions indefinitely.\n\nAfter deciding to upgrade a plugin, review the advisory and the plugin documentation for information about the migration.\nThe scripts provided in this GitHub repository may help you in determining whether you’re using affected features.\nIf you’re not using any of the affected features, it’s likely that there won’t be any problems and you can just upgrade.\nIf you are using affected features, you should carefully read the documentation on how the upgrade works: Affected plugin features may effectively be disabled until an administrator approves the scripts in use, potentially resulting in build failures.\n\nDistributing vulnerable plugins\n\nFinally, there’s the issue of distribution:\nThe Jenkins project historically has performed little to no oversight over the plugins that are being published.\nThis is a direct consequence of the governance document, which gives plugin maintainers a lot of control over their plugins.\n\nThat said, in exceptional circumstances, the Jenkins project can, and should, protect its users:\nIf a plugin maintainer were to upload a clearly malicious plugin, we wouldn’t stand by the side and continue distributing it.\nIn the case of plugins with known (unintended) vulnerabilities, this obviously becomes more difficult.\nThis has been discussed in the abstract a while back on the jenkinsci-dev mailing list, and the majority of participants in that discussion agreed that we should suspend distribution of vulnerable plugins if the security team doesn’t have the capacity to address the problem, and the vulnerability would remain unfixed otherwise.\n\nWe decided to temporarily suspend distribution of plugins via the Jenkins project update sites if they allow users with lower privileges (no Overall/Administer) to execute arbitrary code.\nUsers who really need to download these plugins can do so via our Artifactory Maven repository.\nOnce an affected plugin receives a fix, we’d of course resume distribution via the update sites.\n\nPlugins that mistake Overall/Administer and Overall/Run Scripts continue being distributed, albeit with a warning shown to Jenkins administrators, as the setup required for this to make a difference is pretty rare.\n\nUnfortunately, we were unable to adequately inform all plugin maintainers before publication of the advisory, so there are several plugins with fewer than 500 installations that are actively maintained but whose maintainers we didn’t contact prior to this advisory.\nFor that, I am really sorry, and can only ask for understanding from the maintainers of affected plugins.\nThe number of affected plugins and the coordination and review required simply exceeded our capabilities.\n\nSubscribe to the jenkinsci-advisories mailing list to receive important notifications related to Jenkins security.","title":"Important Scripting-related Security Advisory","tags":["plugins","security"],"authors":[{"avatar":null,"blog":null,"github":"daniel-beck","html":"<div class=\"paragraph\">\n<p>Daniel is a Jenkins core maintainer and, as security officer, leads the <a href=\"/security/#team\">Jenkins security team</a>.\nHe sometimes contributes to developer documentation and project infrastructure.</p>\n</div>","id":"daniel-beck","irc":null,"linkedin":null,"name":"Daniel Beck","slug":"/blog/authors/daniel-beck/","twitter":null}]}},{"node":{"date":"2017-04-06T00:00:00.000Z","id":"f6b5f809-47da-5d3d-b7ca-7f843a8917d9","slug":"/blog/2017/04/06/welcome-to-blue-ocean-editor/","strippedHtml":"This is a guest post by Liam Newman,\nTechnical Evangelist at CloudBees.\n\nBlue Ocean is a new user experience for Jenkins,\nand version 1.0 is now live!\nBlue Ocean makes Jenkins, and continuous delivery, approachable to all team members.\nIn my previous post,\nI explained how to install Blue Ocean on your local Jenkins instance and switch to using Blue Ocean.\nAs promised, here’s a screencast that picks up where that post left off.\nStarting from a clean Jenkins install, the video below will guide you through\ncreating and running your first Pipeline in Blue Ocean with the Visual Pipeline Editor.\n\nPlease Enjoy! In my next video, I’ll go over the\nBlue Ocean Pipeline Activity View.","title":"Getting Started with Blue Ocean's Visual Pipeline Editor","tags":["blueocean","ux","pipeline","tutorial","screencast"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#382818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/19e71/lnewman.jpg","srcSet":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/77b35/lnewman.jpg 32w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/d4a57/lnewman.jpg 64w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/19e71/lnewman.jpg 128w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/68974/lnewman.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/ef6ff/lnewman.webp 32w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/8257c/lnewman.webp 64w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/6766a/lnewman.webp 128w,\n/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/22bfc/lnewman.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/9717c5c33fe8f4903eec2f2b5a8d1532/lnewman.jpeg"},"blog":null,"github":"bitwiseman","html":"<div class=\"paragraph\">\n<p>Liam started his software career as a tester, which might explain why he&#8217;s such a fan of CI/CD and Pipeline as Code.\nHe has spent the majority of his software engineering career implementing Continuous Integration systems at companies big and small.\nHe is a Jenkins project contributor and an expert in Jenkins Pipeline, both Scripted and Declarative.\nLiam currently works as a Jenkins Evangelist at <a href=\"https://cloudbees.com\">CloudBees</a>.\nWhen not at work, he enjoys testing gravity by doing Aikido.</p>\n</div>","id":"lnewman","irc":null,"linkedin":null,"name":"Liam Newman","slug":"/blog/authors/lnewman/","twitter":"bitwiseman"}]}},{"node":{"date":"2017-04-05T00:00:00.000Z","id":"a861a6c5-914d-5da6-9d4b-4b250827f304","slug":"/blog/2017/04/05/say-hello-blueocean-1-0/","strippedHtml":"Back in May 2016 we announced our intent\nto rethink the Jenkins User experience with the Blue Ocean project and today\nthe Jenkins project are pleased to announce the general\navailability of Blue Ocean 1.0.\n\nBlue Ocean is an entirely new, modern and fun way for developers to use Jenkins\nthat has been built from the ground up to help teams of any size approach\nContinuous Delivery. Easily installed as a plugin for Jenkins and integrated\nwith Jenkins Pipeline, it is available from today for production use.\n\nSince the start of the beta at Jenkins World 2016 in September there are now\nover 7400+ installations making use of Blue Ocean. This wouldn’t be possible\nwithout the support of the entire Jenkins developer and\nuser community - so thank you for your support!\n\nBlue Ocean is available today from the update center and also as a\nDocker image - why not give it a try?\n\nVisual Pipeline Editing - Team members of any skill level can create continuous\ndelivery pipelines from start to finish, with just several clicks, using the\nintuitive, visual pipeline editor. Any pipeline created with the visual editor\ncan also be edited in your favorite text editor\nbringing all the benefits of Pipeline as Code.\n\nPipeline Visualization - Developers can visually represent pipelines in a way\nthat anyone on the team can understand - even your boss’s boss - improving\nclarity into the continuous delivery process for the whole organization.\nThe visualization helps you focus on what the pipeline does, not how it does it.\n\nPinpoint Troubleshooting - Blue Ocean enables developers to locate automation\nproblems instantly, without endlessly scanning through logs or navigating\nthrough many screens, so you can get back to building the next big thing.\n\nGitHub and Git Integration - Pipelines are created for all feature branches\nand pull requests, with their status reported back to GitHub.\nThe whole team has visibility into whether changes need work or are good to go.\n\nPersonalization – Every team member can make Jenkins their own by customizing\nthe dashboard so that they only see those pipelines that matter to them.\nFavoriting any pipeline or branch in Blue Ocean will show a favourite card on\nthe dashboard so you can see its status at a glance.\n\nJust one more thing – I’d like to pay special thanks to:\n\nThe Core team – to Keith Zantow, Thorsten Scherler, Tom Fennelly,\nIvan Meredith, Josh McDonald, Vivek Pandey, Brody Maclean and Cliff Meyers.\nEach of and everyone of you have brought your own passion, expertise and flair\nto the project – and it shows. It’s been crazy fun and I hope working on\nBlue Ocean is something you look back on fondly.\n\nJenkins Developers past and present – we recognise that we are standing on\nthe shoulders of giants and none of this wouldn’t be possible without your\nhard work and dedication to free & open source software and Jenkins.\nHere’s to the next 10 years 🍻 !\n\nCloudBees – in particular, Sacha Labourey (CEO), Harpreet Singh\n(VP of Product) and Spike Washburn (VP of Engineering) whose dedication to\nJenkins, Open Source and continued faith in the vision and team made all of\nthis possible, and of course Bob Bickel (Advisor) who dared us to dream big.\n\nMichael Neale – who drank all the kool-aide and is just as obsessed with\nand dedicated to Blue Ocean as I am. This project would never have shipped\nwithout his hand steady at the tiller. I couldn’t ask for a better friend\nand partner-in-crime.\n\nTyler Croy – for guiding the project and myself on how to do open source\nThe Right Way™. Tyler works tirelessly behind the scenes to to make Jenkins\nawesome and it wouldn’t be possible to keep this show running without\nhis help and sage-like advice.\n\nKohsuke Kawaguchi – For creating Jenkins, getting Blue Ocean off of\nthe ground, his tour of Tokyo and above all, his trust.\n\nJenkins Users – your enthusiasm for better development tools which\nkept our spirits and momentum up when the days grew long and things\nlooked tough. We couldn’t ask for a better, more appreciative or\npassionate group of people. Hopefully we’ve done our job and you can get\nback to building your next big thing!\n\nNext stop, some well needed rest & recovery then back to to making\nJenkins one of the experiences for software developers worldwide!\n\nIf you’re interested in joining us to make Blue Ocean a great user experience\nfor Jenkins, please join the Blue Ocean development\nteam on Gitter!","title":"Say hello to Blue Ocean 1.0","tags":["blueocean","ux","pipeline"],"authors":[{"avatar":null,"blog":null,"github":"i386","html":"","id":"i386","irc":null,"linkedin":null,"name":"James Dumay","slug":"/blog/authors/i386/","twitter":"i386"}]}}]}},"pageContext":{"limit":8,"skip":304,"numPages":100,"currentPage":39}},
    "staticQueryHashes": ["3649515864"]}