{
    "componentChunkName": "component---src-templates-blog-list-template-js",
    "path": "/blog/page/74",
    "result": {"data":{"allBlog":{"edges":[{"node":{"date":"2013-11-20T00:00:00.000Z","id":"6b1ae5e1-461c-50ee-ab41-10de36763dc7","slug":"/blog/2013/11/20/juc-call-for-volunteers-to-join-the-organizing-committee-and-venues/","strippedHtml":"This is a guest post from Alyssa Tong, who drives JUC organizations around the world.\n\nIf you missed JUC Palo Alto on Oct 23, 2013 the videos are now available.\n\nWe are off to planning JUC 2014. It is hard to believe this will be the 4th annual JUC in the Bay Area. The growth in the Jenkins community since the first JUC is astounding.\n\nEvery year we are in search of a larger venue to accommodate the larger crowd. For 2014, the challenge of finding a venue for a capacity of 500+ attendees at a low cost will prove even more daunting. We would love to hear your suggestions for low cost venues (in the Bay Area) so that we may continue to keep entry cost low while providing convenience and the highest level of Jenkins education to attendees. Please send suggestion(s) to events@lists.jenkins-ci.org\n\nWe are proud to launch the call for volunteers to join the JUC organizing committee (OC). If you are interested in shaping the 4th edition of this great event, please send email to events@lists.jenkins-ci.org\n\nWe encourage you to share this blog within your network in case other people\nwould be interested in joining the JUC OC or have ideas for a great JUC 2014 location.","title":"JUC: Call for Volunteers to Join the Organizing Committee (and Venues!)","tags":["general","feedback","juc"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2013-11-17T00:00:00.000Z","id":"f69ef369-c510-5a93-a4ae-1684a3bc20bb","slug":"/blog/2013/11/17/dkim-and-spf-deployed/","strippedHtml":"+\nIn the hope of streamlining account creation e-mail delivery and mailing list moderations, I have deployed https://en.wikipedia.org/wiki/Sender_Policy_Framework[SPF] and https://en.wikipedia.org/wiki/DomainKeys_Identified_Mail[DKIM] over the weekend for e-mails coming out of `+@jenkins-ci.org+`, which includes account appliations, Confluence, and JIRA. +\n +\n\n+\nI've also used this opportunity to switch back the sender of JIRA notifications to `+noreply@jenkins-ci.org+`. It was originally this way, then changed to `+jenkinsci-no-reply@googlegroups.com+` when someone complained (on what ground I do not remember any more.) +\n +\n\n+\nTo the degree that I have tested the setup, it is working correctly, but if you notice anything strange, please let me know.","title":"DKIM and SPF deployed","tags":["infrastructure","mailing list"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2013-11-08T00:00:00.000Z","id":"8e791684-d83f-5531-a36e-0e05535a827d","slug":"/blog/2013/11/08/jenkins-scalability-summit-recap/","strippedHtml":"+\nhttps://en.wikipedia.org/wiki/Scale_(anatomy)[ +\nimage:https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Lepidoptera_wing.jpg/220px-Lepidoptera_wing.jpg[image] +\n]\n\n+\n+\n\n+\nThe day after https://jenkins-ci.org/content/jenkins-user-conference-completely-full[Jenkins User Conference], we held a smaller meet-up of serious large-scale Jenkins users dubbed as https://www.meetup.com/jenkinsmeetup/events/126595572/[\"Jenkins Scalability Summit\"]. +\n +\n\n+\nIn this https://en.wikipedia.org/wiki/Open_Space_Technology[Open Space Technology] style event, we went over war stories from users. Just to show the degree of seriousness, some of those people run 1500+ agents, and others run Jenkins in HA configuration with a data center fail over! We then picked various topics in the afternoon and discussed what people would like to see to make Jenkins scale further. Slides and raw notes from this meeting is https://bit.ly/jss13[available here]. +\n +\n\n+\nThe event allowed me to rethink and revisit what I thought we should do in coming days in the area of scalability. +\n +\n\n+\nThe event was far more popular than we anticipated originally, and we had to turn down many folks. So I'm going to do a webinar to go over what we did, and what we talked about. If you are interested in this area, and want to see what's being considered and provide your thoughts, please join us on https://www.cloudbees.com/webinars/jenkins-scalability-summit-recap.cb[Nov 19th 10am PT].","title":"Jenkins Scalability Summit Recap","tags":["general","meetup","juc"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2013-10-18T00:00:00.000Z","id":"8eeba28b-eaab-5cb7-bd40-2a51a7efb759","slug":"/blog/2013/10/18/jenkins-user-conference-is-completely-full/","strippedHtml":"+\nimage:https://jenkins-ci.org/sites/default/files/images/alyssa.jpg[image,width=150,height=150] +\n\n+\n+\n\n+\n(This is a guest post by Alyssa Tong, the lead coordinator of Jenkins User Conference) +\n +\n\n+\nOur https://www.cloudbees.com/jenkins/juc2013/juc2013-palo-alto.cb[3rd annual Jenkins User Conference in the Bay Area] being held next Wednesday in Palo Alto is booked fully to the capacity and we couldn’t be more excited for this event! It’s going to be an amazing day of learning, talking to technology experts, networking with other Jenkins users, seeing cool demos and finding out how you can contribute to the Jenkins open source projects. +\n +\n\n+\nThis event is being held at the https://www.paloaltojcc.org/[Oshman Jewish Community Center] and registration begins at 8am. There will be breakfast and plenty of coffee to get you caffeinated. Welcoming announcement will begin sharply at 9am and the keynote address follows shortly after. We’re so excited to have https://www.cloudbees.com/jenkins/juc2013/juc2013-palo-alto.cb[thirteen sponsors] investing in and supporting the Jenkins community in this continuous integration space. +\n +\n\n+\nNew this year, there will be BoF sessions so be sure to sign up for your preferred discussion at check-in. Or suggest a topic by leaving your suggestion in the comments section below. Let us know what Jenkins topic(s) is near and dear to your heart. +\n +\n\n+\nFor those who missed out on purchasing your ticket or are unable to attend, we are happy to offer the https://www.eventbrite.com/event/8328596055[live stream] of Track 1. You can choose to watch the entire track or just specific session(s). Either way don’t forget to chat and tweet. We will also tweet live from the conference so you can follow along that way as well. Follow @jenkinsconf for the latest updates. +\n +\n\n+\nThank you to everyone for making this sold-out event possible. +\n +\n\n+\nCan’t wait to see everyone on Wednesday! +\n +\n\n+\n— Alyssa","title":"Jenkins User Conference is completely full!","tags":["general","meetup","juc"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2013-10-09T00:00:00.000Z","id":"89cb0a71-0c36-5ebe-953a-46c2fe05996e","slug":"/blog/2013/10/09/jenkins-at-netflix-juc-speaker-interview/","strippedHtml":"(This is a guest post from Gareth Bowles, a Senior Software Engineer at Netflix.)\n\n+\nimage:https://www.cloudbees.com/sites/default/files/juc/juc2013/Palo-Alto-Gareth-Bowles.jpg[image] +\n\n+\n\n+\nJenkins has been a central part of the Netflix build and deploy infrastructure for several years now, and we've been attending and speaking at JUC since it started in 2011. It's a great opportunity to meet people who are as passionate about build, test and deployment automation as we are - although as Kohsuke said last year, having all those folks in one place could be dangerous if there's an earthquake ! +\n +\n\n+\nCloudBees and the JUC Organizing Committee have put another great program together this year. We'll be doing two talks. Justin Ryan and Curt Patrick will present \"Configuration as Code: Adoption of the Job DSL Plugin at Netflix\", describing how we're shifting our users from manual job configuration via the UI, to defining their jobs as Groovy code using the https://wiki.jenkins.io/display/JENKINS/Job+DSL+Plugin[Job DSL plugin]. Justin and Curt will describe how Netflix development teams can now create and maintain complex sets of jobs for their projects with the bare minimum of coding. +\n +\n\n+\nIn my lightning talk \"Managing Jenkins with Jenkins\", I'll go over how we use Jenkins' system Groovy scripts to maintain and monitor our Jenkins controllers at a scale that couldn't be achieved with manual processes, and without the overhead of writing custom plugins. +\n +\n\n+\nAs usual, there will be a whole crew of Netflix engineers at JUC this year. If you're interested in working on build and deployment at Netflix scale, find one of us (we'll all be wearing Netflix gear) to learn more - we're hiring ! +\n +\n\n+\n+\n\n+\nhttps://www.eventbrite.com/event/6367028955[Register for JUC - October 23 in Palo Alto]. If you can't make it in person, https://www.eventbrite.com/event/8328596055[register to watch the live stream!]","title":"Jenkins at Netflix / JUC speaker interview","tags":["general","guest post","interview","juc"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2013-10-09T00:00:00.000Z","id":"a739730f-a998-5e4c-9330-1c25a8390388","slug":"/blog/2013/10/09/meet-the-community-in-juc/","strippedHtml":"(This is a guest post from Owen B. Mehegan aka autojack)\n\n+\n+\n\n+\nThe Jenkins User Conference - Palo Alto is coming up on October 23rd! The schedule for talks is full, but we've been looking for a way to give other members of the Jenkins community some visibility. There are many people who have contributed to the project in various ways, whether it's contributing to core, developing plugins, writing documentation or just helping new users. +\n +\n\n+\nIf this sounds like you, we're interested in giving you 10-15 minutes to talk to the rest of the conference attendees! The format is currently undefined and may be left up to you. You could do a Q&A, talk about features you've worked on and why they were important to you, or just offer some \"pro tips\" that you've developed based on your experience. The main point is to help put faces to some of the names in the community, and also help encourage others to contribute themselves! We're thinking of having these sessions during lunch and the exhibit hour (https://www.cloudbees.com/jenkins/juc2013/juc2013-palo-alto.cb[see here for the schedule]). +\n +\n\n+\nIf you're interested in this, or know someone else who might be that I could contact, please let me (owen at nerdnetworks dot org) know! If we can get some critical mass around it then we'll go ahead. +\n +\n\n+\nThanks!","title":"\"Meet the community\" in JUC","tags":["general","meetup","juc"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2013-09-23T00:00:00.000Z","id":"897493a6-04e7-556a-b3c1-fe8522ac41a9","slug":"/blog/2013/09/23/literate-builds-wtf/","strippedHtml":"(This is a guest post by Stephen Connolly)\n\nEvery developer, at some stage, will be handed a project to maintain that somebody else was responsible for. If you are lucky, the developer will not have left the organization yet and you get a brief Knowledge Transfer as the developer packs up their desk before heading on to their new job. If you are unlucky, you don’t even get given the details of where the source code is hiding.\n\nNow begins the detective work, as you try to figure out how to build and release the project, set up Jenkins jobs to build the project and run the tests…​\n\nIt doesn’t have to be this way, you know!\n\nWhat if I told you there was a file sitting at the top level that told you exactly how to build the project and do the important things? You’d be interested, wouldn’t you?\n\nWhen I tell you it’s the README file? “But that’s all lies. Nobody keeps that up to date. Argh!!!”\n\nBut what if Jenkins reads the README file and uses it for the build definition? Now you not only have a CI system ensuring that the build definition is correct, but you have less work to do setting up the job.\n\nWhat if, because the build definition is now in Source Control, you can have Jenkins create jobs for each branch with ease? The joy of cheap branches that modern source control systems such as GIT and Mercurial give us, no longer comes with the pain of having to create Jenkins jobs for each branch (and more pain having to remember to tidy up when the branch is gone.)\n\nThat is the promise delivered by the Literate plugin.\n\nHow does it work?\n\nFirst of all, because Jenkins will be looking at all your branches, you need a way to tell Jenkins which branches it makes sense to try and build. For example, if your project lives on GitHub, you are unlikely to want the gh-pages branch to be treated like a branch of your actual code, and there are going to be branches that have a README file, but not one that Jenkins understands, so we will want to ignore them too.\n\nYou tell Jenkins that a branch is one to build by putting a marker file in the root of the branch. By default the marker file is called.cloudbees.md. If the marker file is present and empty, then the literate job type will assume the build instructions are in README.md. If the marker file is present and has build instructions, then the literate job type will just use those instructions.\n\nIn order to make it easy to provide the instructions, there is rather minimal formatting requirements for a literate description of a project’s build commands.\n\nThe minimal description is just a section with the word build and a verbatim code block in that section. Here is the obligatory minimal “hello world” project description:\n\n# Build\n\n    echo hello world\n\nor if you don’t like indenting you could use the GitHub style triple-back-tick\n\n# Build\n\n```\necho hello world\n```\n\nPart of what makes this a literate style of build description is that you can freely intersperse the description of what and why the commands do with the actual commands, e.g.\n\n# Build\n\nWe will greet the world with our great literate project description\n\n    echo -n \"Hello\"\n\nNow that we have announced our intention to greet some people, we need to qualify exactly who we are greeting\n\n    echo \" world\"\n\nThat was just perfect. Time for a cup of tea\n\nThe first section heading containing the word build identifies the section that is assumed to be the build instructions. (The keyword that is searched for is configurable, but not yet exposed in the literate plugin’s UI). The following is also a valid README.md for printing hello world:\n\nOur super hello world project\n=============================\n\nThis is a project to say hello to the world\n\nHow to build\n------------\n\nYou can build this project by running the following command:\n\n    echo hello world\n\nCredits\n-------\n\nThis project would not have been possible without the existence of Assam loose leaf tea.\n\nNow this is all very well, but what about if you need different instructions for building on Windows versus on Linux, and for that matter how does Jenkins know where we should build this project. Plus Mr Joe Random needs to know what he needs to install on his machine to build it for himself.\n\nThe first section containing the word environment identifies the section that contains the details of the environments to run the build on.\n\nHello world project\n===================\n\nThis is a simple hello world literate project\n\nEnvironment requirements\n------------------------\n\nThe project is built and tested by Jenkins on the following build environments, so it is known that the build instructions work on the following environments:\n\n* `windows`\n* `linux`\n\nHow to build\n------------\n\nThe build instructions are platform dependent:\n\n* On `windows`:\n\n        echo \"hello world\"\n\n* On `linux`:\n\n        echo hello\\ world\n\nWhen Jenkins sees bullet points in the environment section it assumes each bullet point corresponds to an environment to run the build on. Each environment is specified by at least one code snippet which helps define the requirements of the environment. By default Jenkins will look for tool installers with the same name as the labels. If it cannot find any matching tool installers it assumes that the labels are Jenkins agent node labels. (The strategy is plugable, but not yet exposed in the UI of literate builds)\n\nWhen you have multiple environments on which to build and test, you have two choices on your build instructions. You can either:\n\nHave one and only one set of commands that work on all environments; or\n\nHave bullet points that cover all the specified environments.\n\nSo for example, if you are building on the following environments:\n\nwindows, java-1.6, ant-1.7\n\nwindows, java-1.6, ant-1.8\n\nwindows, java-1.7, ant-1.8\n\nlinux, java-1.7, ant-1.7\n\nlinux, java-1.7, ant-1.8\n\nYou need to have bullet points in your build section that can match each of those options, but as long as there is a match for every option you are ok. So for example:\n\nANT version finder\n==================\n\nFinding out the version of ANT on various platforms\n\nEnvironments\n------------\n\nNesting bullet points multiplies out the options\n\n* `windows`\n    * `java-1.6`\n        * `ant-1.6`\n        * `ant-1.7`\n    * `java-1.7`, `ant-1.8`\n* `linux`, `java-1.7`\n    * `ant-1.7`\n    * `ant-1.8`\n\nBuild\n-----\n\nThe first match with the highest number of matches wins, so we want windows to get special treatment:\n\n* `windows`\n\n        call ant.bat -version\n\n* `java-1.7`\n\n        ant -version\n\nWe could have picked `linux` for the above if we wanted, but this matching will have the same effect and better illustrates how matching works.\n\nThat is a mostly complete detail of how the build and environment sections work. In general everything except verbatim code blocks and bullet points with code snippets get ignored.\n\nThere are other sections that the literate project type allows for, these are called “task” sections. We haven’t written the code to support them yet, but the idea is that these will work a bit like basic build promotions with the promoted builds plugin. There will be a UI in Jenkins that lets you kick off any of the task sections that you define as being valid for the job type, in pretty much exactly the same was as the promoted builds plugin works.\n\nAfter that, everything else in the README.md is ignored.\n\nHow do I get the test results into Jenkins?\n\nJenkins is not just about build and test. A lot of the utility in Jenkins comes from the additional reporting plugins that are available for Jenkins. (The build step ones are less relevant with literate style projects because you want to give people consuming the content instructions they can also follow)\n\nSo there is additional metadata about your project that you want to give to Jenkins. We put that metadata into a folder called.jenkins in the root of your source control.\n\nThere are two levels of integration that a Publisher/Notifier can have with the literate project type. The first level is a basic XML description of the plugin configuration. If you have ever looked at the config.xml of a Jenkins job, you will be familiar with this format.\n\nIf we have a Maven project and we want to collect the Unit test results in Jenkins we might have a README.md like this:\n\nMaven project with tests\n========================\n\nEnvironments\n------------\n\n* `java-1.7`, `maven-3.0.5`\n\nBuild\n-----\n\n```\nmvn clean verify\n```\n\nAnd then we create a.jenkins/hudson.tasks.junit.JUnitResultArchiver.xml file with the following:\n\n**/target/surefire-reports/*.xml, **/target/failsafe-reports/*.xml\ntrue\n\nThe literate plugin adds an Action to all Free-style projects that allows exporting these XML configuration snippets in a.zip file for unpacking into your project’s source control. Each publisher/notifier has its own file, so it should be easy to mix and match configuration across different projects and enable/disable specific publishers just by adding/removing each publisher’s file.\n\nThe XML itself can be a bit ugly, so there is a second level integration, where a Publisher/Notifier plugin can implement its own DSL. The literate plugin ships with two such DSLs. One for archiving artifacts and the other for JUnit test results. So the above XML file could be replaced by a.jenkins/junit.lst file with the following contents\n\n**/target/surefire-reports/*.xml\n**/target/failsafe-reports/*.xml\n\nNot everything makes sense in source control though…​\n\nThere are always going to be things that you need to configure in Jenkins. So for example there may be some sources of branches that you don’t trust. A good example would be pull requests on GitHub. We have a concept of branch properties in the literate project type that will allow defining what exactly a trusted branch source should be allowed do and what an untrusted branch source should be allowed do. It does not make sense for that information to be embedded within the untrusted branch itself.\n\nSimilarly coordination between different Jenkins projects is something that does not make sense in source control. The names of those Jenkins projects (and even their existence) is not knowable from source control. It does not make sense to keep that information in source control.\n\nInformation about how to map the description of the build environment in the README.md file to the build environments available to Jenkins does not make sense in source control because your Jenkins node configuration details may change over time.\n\nIn other words, literate projects do not remove the need to configure things in Jenkins. They do however remove a lot of the need, and especially the need to tweak the exact build commands and the location of where build results should be picked up from.\n\nWhat’s not done yet?\n\nHere is a list of some things I want to see for literate builds:\n\nA literate build step so that people can use some of the literate magic in their free-style projects while they migrate them to literate-style\n\nSupport for literate task promotion flows (I think Kohsuke has signed up to help deliver this)\n\nExposing the configuration points such as the marker file name (a global config option as well as per-project override) and the keywords to search for in the README.md (this is mostly UI work)\n\nAdding in some support for other markup languages (I’d really like to see AsciiDoc formatted README parsing, e.g. README.asc)\n\nBranch properties for untrusted builds (to do things like restrict the build execution to one explicit environment, put an elastic build timeout in place, wrap the shell commands in a chroot jail, etc)\n\nBranch properties for build secrets (So that the production and staging branches can get the keys to deploy into their respective environments.\n\nCollapsing the intermediate level in the UI when there is only one build environment.\n\nEliminating the double SCM checkout when the backing SCM supports the SCMFileSystem API so that builds work even faster\n\nReusing the GIT repository cache when using GIT branch sources.\n\nSome nicer integration with GitHub (I have most of this done, but I think it would be irresponsible to release this without having the Untrusted branch properties implemented as otherwise Pull Requests could become a vector for abuse)\n\nFinishing the support for Subversion credentials migration from the legacy credentials storage mechanism to the new Credentials plugin storage mechanism (not strictly literate project related, but Subversion is still a popular SCM and until this gets done we cannot release a version of the Subversion plugin with literate project support)\n\nAdding nice DSLs for all the Publishers and Notifiers\n\nAdding SCM support to all the SCM plugins\n\nAdding branch property support for the Build Wrapper / Build Environment / Job Property plugins where that makes sense.\n\nHaving said all that, the core functionality works right now for GIT/Subversion/Mercurial on Jenkins 1.509+, and it is only by playing with this functionality that you can see how this could change the way you use Jenkins.\n\nHow do I try this out myself\n\nLast week Kohsuke set up a new “Experimental” update center in Jenkins OSS. The reason for this new update center is that we have a lot of (potentially disruptive) changes to many plugins and if we started cutting releases, users may get annoyed if they end up upgrading to these plugins until they have all been better tested.\n\nThe “Experimental” update center includes plugins that have alpha or beta in their version number, while the other update centers now exclude those plugin versions.\n\nSo if you want to play with these plugins you need to change your Jenkins instance’s update center URI to:\n\nhttps://updates.jenkins-ci.org/experimental/update-center.json\n\nI would recommend that you use a test Jenkins instance for playing with.\n\n(WARNING: shameless plug) You could also just fire up a Jenkins in the cloud using CloudBee’s DEV@cloud service and follow these handy instructions to enable access to the experimental plugins:\n\nThe 10 best bug reports on literate builds before the Jenkins User Conference next month will receive a prise from CloudBees, Inc. I was able to get a commitment that the prise would be at least a T-shirt. I am hoping to get some more swag added to the prize pool. CloudBees employees or relatives of CloudBees employees are not eligible for the bug report prise!","title":"Literate builds, WTF?","tags":["development","plugins","javaone"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg","srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/f81fe/kohsuke.jpg 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/01b1b/kohsuke.jpg 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/edb43/kohsuke.jpg 128w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/035c3/kohsuke.webp 32w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/273f8/kohsuke.webp 64w,\n/gatsby-jenkins-io/static/dd191cfa3b1158515bff16d455e6117b/e3840/kohsuke.webp 128w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":148}}},"blog":null,"github":"kohsuke","html":"<div class=\"paragraph\">\n<p>Kohsuke is the creator of Jenkins.</p>\n</div>","id":"kohsuke","irc":null,"linkedin":null,"name":"Kohsuke Kawaguchi","slug":"/blog/authors/kohsuke","twitter":"kohsukekawa"}]}},{"node":{"date":"2013-09-16T00:00:00.000Z","id":"51160967-83d6-5930-8771-417c2ae8f20e","slug":"/blog/2013/09/16/continuous-information-jenkins-newsletter-vol-5/","strippedHtml":"+\n +\nThe latest edition of Continuous Information is out for your reading pleasure. +\nHighlights: +\n\nHealth Check-up for Jenkins: Kohsuke’s Tips on Keeping Jenkins Happy\n\nJenkins continues to take over the world, with more than 65,000 active installations and more than 800 plugins\n\nEvents: Jenkins User Conference – 10/23 in Palo Alto, CA (use discount code BEE-JUC); Jenkins Scalability Summit 10/24; and more\n\nJenkins made the SD Times 2013 Top 100!\n\nWhat’s new in Jenkins? The hottest new Jenkins improvements…\n\nHow to build your own Jenkins Traffic Light\n\n+\n +\nhttps://pages.cloudbees.com/index.php/email/emailWebview?mkt_tok=3RkMMJWWfF9wsRonvanBZKXonjHpfsX%2B4%2B0uT%2Frn28M3109ad%2BrmPBy82IoIWp8na%2BqWCgseOrQ8kFQLV9C%2BRs0Vq6c%3D[Read the whole newsletter], and then https://www.cloudbees.com/jenkins/jenkins-ci/jenkins-newsletter.cb[sign up to receive it directly when it comes out]. +\n +\n +\nPS - We love contributions to Continuous Information, so if you have a Jenkins tip, trick, or plugin you’d like to feature, please mailto:continuous-information@cloudbees.com[email us].","title":"Continuous Information - Jenkins Newsletter vol. 5","tags":["general","just for fun","meetup","news","jenkinsci"],"authors":[{"avatar":null,"blog":null,"github":"lisawells","html":"","id":"lisawells","irc":null,"linkedin":null,"name":"Lisa Wells","slug":"/blog/authors/lisawells","twitter":null}]}}]}},"pageContext":{"limit":8,"skip":584,"numPages":100,"currentPage":74}},
    "staticQueryHashes": ["3649515864"]}