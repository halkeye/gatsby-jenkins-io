{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2021/08/23/jenkins-operator-security-work-report/",
    "result": {"data":{"blog":{"html":"<div class=\"sect1\">\n<h2 id=\"background\"><a class=\"anchor\" href=\"#background\"></a>Background</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Jenkins custom resources on a Kubernetes cluster are deployed using declarative YAML configuration files; hence some of the plugins declared in these files may contain security warnings.\nSo there is no way for the user to know other than manually checking for each on the site.\nThis project aims to add an extra step of validation before creating/updating a new Jenkins Custom Resource.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"deliverables\"><a class=\"anchor\" href=\"#deliverables\"></a>Deliverables</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This project aims to add a validating admission webhook to the Jenkins Operator for Kubernetes to detect potential security vulnerabilities in the plugins before the object is created.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"dependencies\"><a class=\"anchor\" href=\"#dependencies\"></a>Dependencies</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Webhooks communicate to the API server over HTTPS and use TLS. Thus, <a href=\"https://cert-manager.io/docs/\">Jetstack/cert-manager</a> is used to provision TLS certificates and establish connection between Kubernetes API and webhook.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"implementaion\"><a class=\"anchor\" href=\"#implementaion\"></a>Implementaion</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Operator-SDK takes care of creating a new webhook and appending it to the manager and creating handlers.\nTls certificates are managed using cert-manager.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Validation Logic:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Proposed Implementations: Iterate through the list of plugins to be installed and fetch warnings for each plugin from the plugin center API and check if the version of that plugin has any of those warnings.</p>\n</li>\n<li>\n<p>Caveats: Webhooks add latency to an API request, hence they should evaluate as quickly as possible thus having max allowed timeout of 30s. In the earlier approach I was fetching the security warnings from the plugin site API in the validator interface itself, and since network operations are slow, it was causing a timeout in the case of validating a larger number of plugins or when the Internet connection was not good.</p>\n</li>\n<li>\n<p>Updated Implementaion: Instead of fetching information for each plugin, the information about all the plugins is downloaded and cached at the start of the operator and updated periodically, thus eliminating network calls and finishing validation in less than a second.</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"evaluation-phase-1\"><a class=\"anchor\" href=\"#evaluation-phase-1\"></a>Evaluation Phase 1:</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Scaffoled a new validation webhook</p>\n</li>\n<li>\n<p>Added manifests for ValidatingWebhookConfiguration, certificates and volumes, and updated Makefile</p>\n</li>\n<li>\n<p>Implemented the validator interface</p>\n</li>\n<li>\n<p>Updated helm charts</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"evaluation-phase-2\"><a class=\"anchor\" href=\"#evaluation-phase-2\"></a>Evaluation Phase 2:</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Reimplemented the validator interface.</p>\n</li>\n<li>\n<p>Added unit tests for internal functions</p>\n</li>\n<li>\n<p>Added e2e tests along with helm tests</p>\n</li>\n<li>\n<p>Updated helm charts</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"resources\"><a class=\"anchor\" href=\"#resources\"></a>Resources</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Pull Requests</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/jenkinsci/kubernetes-operator/pull/585\">Added validation webhook,manifests,and updated Makefile</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/kubernetes-operator/pull/593\">Implemented validation logic,added tests and updated helm charts</a></p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><a href=\"https://www.youtube.com/watch?v=xO2jGmv1fLo\">Phase 1 demo</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"user-guide\"><a class=\"anchor\" href=\"#user-guide\"></a>User Guide</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The webhook feature is completely optional for the user. It can be easily deployed using Helm Chart by setting webhook.enabled in values.yaml and in the Operator command line flag.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"nowrap\"> webhook.enabled=true</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>To enable security validation in the jenkins custom resource set</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">jenkins.ValidateSecurityWarnings=true</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Note: The webhook takes some time to get up and running, also when helm renders the template, the validating webhook configuration is applied last, hence if the user wants to deploy the Jenkins Custom Resource with validation turned on, he needs to wait for some time. After the webhook is up and running the user can deploy the Jenkins Custom Resource using <strong>helm</strong> or <strong>kubectl</strong></p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"future-work\"><a class=\"anchor\" href=\"#future-work\"></a>Future work</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Implementing a post-install hook in the helm charts that checks whether the webhook is up and running.</p>\n</li>\n<li>\n<p>Adding validation for required core version of plugin and core version of Jenkins.</p>\n</li>\n<li>\n<p>Migrating other validation logic from controller to the webhook.</p>\n</li>\n<li>\n<p>Adding validation for the dependencies of the plugins.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>","id":"b598f8c2-ebc7-5a4d-9b91-8a9ea0e5e989","title":"Security Validator for Jenkins Operator for Kubernetes","date":"2021-08-23T00:00:00.000Z","slug":"/blog/2021/08/23/jenkins-operator-security-work-report/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#a88848","images":{"fallback":{"src":"/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/67151/sharmapulkit04.jpg","srcSet":"/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/ede19/sharmapulkit04.jpg 32w,\n/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/bc20c/sharmapulkit04.jpg 64w,\n/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/67151/sharmapulkit04.jpg 128w,\n/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/f76df/sharmapulkit04.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/8ba60/sharmapulkit04.webp 32w,\n/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/a9ea7/sharmapulkit04.webp 64w,\n/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/8c23b/sharmapulkit04.webp 128w,\n/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/fc98a/sharmapulkit04.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":131}},"publicURL":"/gatsby-jenkins-io/static/a0f57d401b1a73bd732b30a1dfa27287/sharmapulkit04.jpg"},"blog":null,"github":"sharmapulkit04","html":"<div class=\"paragraph\">\n<p>A Student at the Indian Institute of Technology(BHU) Varanasi, Pulkit is currently working on a GSoC Project under Jenkins where he aims to add a security validator to the Jenkins Kubernetes Operator.</p>\n</div>","id":"sharmapulkit04","irc":null,"linkedin":null,"name":"Pulkit Sharma","slug":"/blog/authors/sharmapulkit04/","twitter":"anarchist_04"}]}},"pageContext":{"id":"b598f8c2-ebc7-5a4d-9b91-8a9ea0e5e989"}},
    "staticQueryHashes": ["1271460761","3649515864"]}