{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2021/05/20/configure-plugins-with-jcasc/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>This blog post is for anyone interested to know how to configure a plugin using the Jenkins Configuration as a Code (JCasC) plugin, more specifically, this blog will guide you to get the YAML equivalent of a plugin’s configuration and use it to do some changes to the plugin without using the Jenkins UI.</p>\n</div>\n<hr>\n<div class=\"paragraph\">\n<p>If you’re a beginner at JCasC and want to learn more about it, you can head over to the following resources to understand JCasC better:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://plugins.jenkins.io/configuration-as-code/\">JCasC Documentation</a></p>\n</li>\n<li>\n<p><a href=\"https://www.youtube.com/watch?v=wTzljM-EDjI\">Overview of JCasC (Video Presentation)</a></p>\n</li>\n<li>\n<p><a href=\"https://www.youtube.com/watch?v=47D3H1BZi4o\">Manage JCasC (DevOps World 2018)</a></p>\n</li>\n</ul>\n</div>\n<hr>\n<div class=\"videoblock\">\n<div class=\"title\">Configuring your first plugin using JCasC (Video Demo)</div>\n<div class=\"content\">\n<iframe width=\"852\" height=\"480\" src=\"https://www.youtube.com/embed/YeWhqLPjvMs?rel=0\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n</div>\n<hr>\n<div class=\"sect1\">\n<h2 id=\"overview\"><a class=\"anchor\" href=\"#overview\"></a>Overview</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>So, these are the steps we will be following to achieve our aim:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p><a href=\"#brief-introduction-to-jenkins-yaml-file\">Brief Introduction to jenkins.yaml file</a></p>\n</li>\n<li>\n<p><a href=\"#configure-the-plugin-on-the-ui\">Configure the plugin on the UI</a></p>\n</li>\n<li>\n<p><a href=\"#download-the-configuration\">Download the Configuration</a></p>\n</li>\n<li>\n<p><a href=\"#update-jcasc-file-locally\">Update JCasC file locally</a></p>\n</li>\n<li>\n<p><a href=\"#load-the-jenkins-yaml-file-on-the-jenkins-server\">Load the jenkins.yaml file on the Jenkins server</a></p>\n</li>\n<li>\n<p><a href=\"#verify-the-changes-on-the-ui\">Verify the changes on the UI</a></p>\n</li>\n</ol>\n</div>\n<hr>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"brief-introduction-to-jenkins-yaml-file\"><a class=\"anchor\" href=\"#brief-introduction-to-jenkins-yaml-file\"></a>Brief Introduction to jenkins.yaml file</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The <code>jenkins.yaml</code> file contains the configuration of the Jenkins instance in YAML format.\nThe JCasC plugin refers to this file to configure the Jenkins instance.</p>\n</li>\n<li>\n<p>The default location of <code>jenkins.yaml</code> is <code>$JENKINS_HOME/jenkins.yaml</code>, from where it can be fetched into the Jenkins server whenever you apply a new configuration.</p>\n</li>\n<li>\n<p>Download your <code>jenkins.yaml</code> file by going to <code>Manage Jenkins</code> &gt; <code>Configuration as Code</code> &gt; <code>Download Configuration</code>.</p>\n</li>\n<li>\n<p>Make sure this file is saved at location <code>$JENKINS_HOME/jenkins.yaml</code>.</p>\n</li>\n<li>\n<p>Let&#8217;s change the <code>systemMessage</code> field to:</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2021-05-15-configure-plugins-with-jcasc/updating-the-jenkins-file.png\" alt=\"Updating the jenkins.yaml file\" width=\"700px\">\n</div>\n<div class=\"title\">Figure 1. Updating the jenkins.yaml file</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Reload the existing configuration to apply the system message change</p>\n</li>\n<li>\n<p>Now, go back to the Dashboard and you can see the updated System Message on top:</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2021-05-15-configure-plugins-with-jcasc/viewing-changes-in-jenkins-file.png\" alt=\"Viewing the changes\">\n</div>\n<div class=\"title\">Figure 2. Viewing the changes on Dashboard</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>This file will be used later to configure the plugin using JCasC.</p>\n</li>\n</ul>\n</div>\n<hr>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"configure-the-plugin-on-the-ui\"><a class=\"anchor\" href=\"#configure-the-plugin-on-the-ui\"></a>Configure the plugin on the UI</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>For this demo, install the <code>View Job Filters</code> plugin.</p>\n</li>\n<li>\n<p>Let’s create a view by clicking on the <code>New View</code> option on the left side of the Dashboard.</p>\n</li>\n<li>\n<p>Give it a name (say, “testView”) and set its type to <code>List View</code>, and click on the <code>OK</code> button.</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2021-05-15-configure-plugins-with-jcasc/naming-the-view.png\" alt=\"Naming the View\" width=\"700px\">\n</div>\n<div class=\"title\">Figure 3. Creating the View</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Now click on <code>Add Job Filter</code> to add any kind of filter, so let’s select <code>Build Duration Filter</code> and fill the field with any value (say, \"60\" minutes),</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2021-05-15-configure-plugins-with-jcasc/add-filters-to-view.png\" alt=\"Add Filters\" width=\"700px\">\n</div>\n<div class=\"title\">Figure 4. Adding filter to the view</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Click on <code>Apply</code> &gt; <code>Save</code>.</p>\n</li>\n<li>\n<p>To view the full configuration, check out your main <code>jenkins.yaml</code> configuration file, by clicking on <code>Manage Jenkins</code> &gt; <code>Configuration as Code</code> &gt; <code>View Configuration</code></p>\n</li>\n<li>\n<p>Go to the <code>views</code> section in this YAML file to see details related to the view,</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2021-05-15-configure-plugins-with-jcasc/yaml-file-on-jenkins-ui.png\" alt=\"YAML file on Jenkins UI\" width=\"750px\">\n</div>\n<div class=\"title\">Figure 5. Here, details regarding the view (which we just created) is visible</div>\n</div>\n<hr>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"download-the-configuration\"><a class=\"anchor\" href=\"#download-the-configuration\"></a>Download the Configuration</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Now that you have successfully configured your plugin by UI, let’s download the configuration by going to <code>Manage Jenkins</code> on the Dashboard, then click on <code>Configuration as Code</code> under \"System Configuration\".</p>\n</li>\n<li>\n<p>Now click on the <code>Download Configuration</code> button to save the configuration file locally.</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2021-05-15-configure-plugins-with-jcasc/download-config-button.png\" alt=\"Download Configuration\" height=\"400px\">\n</div>\n<div class=\"title\">Figure 6. Downloading the Configuration</div>\n</div>\n<hr>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"update-jcasc-file-locally\"><a class=\"anchor\" href=\"#update-jcasc-file-locally\"></a>Update JCasC file locally</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Add some changes in your downloaded copy of the <code>jenkins.yaml</code> file, to see those changes being automatically reflected on the UI.</p>\n</li>\n<li>\n<p>For demo purposes, let’s change the <code>name</code> to “YoutubeDemoView” and set the <code>buildDurationMinutes</code> as \"55\".</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2021-05-15-configure-plugins-with-jcasc/yaml-file-on-local-text-editor.png\" alt=\"YAML file on Text Editor\" width=\"750px\">\n</div>\n<div class=\"title\">Figure 7. Changing the View details locally</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Save the file.</p>\n</li>\n</ul>\n</div>\n<hr>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"load-the-jenkins-yaml-file-on-the-jenkins-server\"><a class=\"anchor\" href=\"#load-the-jenkins-yaml-file-on-the-jenkins-server\"></a>Load the jenkins.yaml file on the Jenkins server</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Now to reflect the local changes done in the <code>jenkins.yaml</code> file onto the Jenkins server, click on the <code>Reload existing configuration</code> button.</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2021-05-15-configure-plugins-with-jcasc/apply-new-config.png\" alt=\"Apply New Configuration\" height=\"400px\">\n</div>\n<div class=\"title\">Figure 8. Applying the New Configuration to the Jenkins instance</div>\n</div>\n<hr>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"verify-the-changes-on-the-ui\"><a class=\"anchor\" href=\"#verify-the-changes-on-the-ui\"></a>Verify the changes on the UI</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Go back to the main page by clicking on the Jenkins logo on the top-left side.</p>\n</li>\n<li>\n<p>And you will notice that the name of your view has been changed from \"testView\" to “YoutubeDemoView”,</p>\n</li>\n<li>\n<p>And the field value of <code>Build Duration Filter</code> has been changed from \"60\" to “55”.</p>\n</li>\n<li>\n<p>These two are the exact changes that we did locally in our <code>jenkins.yaml</code> file.</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2021-05-15-configure-plugins-with-jcasc/view-final-changes.png\" alt=\"View Updated Changes\" width=\"700px\">\n</div>\n<div class=\"title\">Figure 9. Verifying the changes</div>\n</div>\n<div class=\"paragraph\">\n<p>Congratulations! You’ve successfully configured a plugin (“View Job Filter”) automatically with the help of the “Jenkins Configuration as Code” plugin! You can repeat the same process for other plugins as well.</p>\n</div>\n<hr>\n</div>\n</div>","id":"95f5c8b2-77be-5e34-b420-2968ceb655ee","title":"Configure Plugins with JCasC","date":"2021-05-20T00:00:00.000Z","slug":"/blog/2021/05/20/configure-plugins-with-jcasc/","links":{"discourse":""},"authors":[]}},"pageContext":{"next":"/blog/2021/06/04/digester-removal/","previous":"/blog/2021/04/23/jenkins-contributor-awards/","id":"95f5c8b2-77be-5e34-b420-2968ceb655ee"}},
    "staticQueryHashes": ["1271460761","3649515864"]}