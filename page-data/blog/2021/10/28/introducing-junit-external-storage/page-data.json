{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2021/10/28/introducing-junit-external-storage/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>In common CI/CD use-cases a lot of the space is consumed by test reports.\nThis data is stored within <code>JENKINS_HOME</code>,\nand the current storage format requires huge overheads when retrieving statistics and, especially, trends.\nIn order to display trends, each report has to be loaded and then processed in-memory.</p>\n</div>\n<div class=\"paragraph\">\n<p>The main purpose of externalising Test Results is to optimize Jenkins performance and storage\nby querying the desired data from external storages.</p>\n</div>\n<div class=\"paragraph\">\n<p>I&#8217;m please to announce that the <a href=\"https://plugins.jenkins.io/junit\">JUnit Plugin</a> external storage is now available for use.</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"getting-started\"><a class=\"anchor\" href=\"#getting-started\"></a>Getting started</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Install your database vendor specific plugin, you can use the Jenkins plugin site to search for it:</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://plugins.jenkins.io/ui/search/?labels=database\" class=\"bare\">https://plugins.jenkins.io/ui/search/?labels=database</a></p>\n</div>\n<div class=\"paragraph\">\n<p>e.g. you could install the <a href=\"https://plugins.jenkins.io/database-postgresql\">PostgreSQL Database</a> plugin.</p>\n</div>\n<div class=\"paragraph\">\n<p>We currently support <a href=\"https://plugins.jenkins.io/database-postgresql\">PostgreSQL</a> or <a href=\"https://plugins.jenkins.io/database-mysql\">MySQL</a>, but can support others, just create an issue or send a pull request.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"from-jenkins-ui\"><a class=\"anchor\" href=\"#from-jenkins-ui\"></a>From Jenkins UI</h3>\n<div class=\"paragraph\">\n<p>Navigate to: Manage Jenkins → Configure System → Junit</p>\n</div>\n<div class=\"paragraph\">\n<p>In the dropdown select 'SQL Database'</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/2021/junit-external-storage/junit-sql-config-screen.png\" alt=\"JUnit SQL plugin configuration\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Now configure your Database connection details.</p>\n</div>\n<div class=\"paragraph\">\n<p>Search for 'Global Database' on the same 'Configure System' page.</p>\n</div>\n<div class=\"paragraph\">\n<p>Select the database implementation you want to use and click 'Test Connection' to verify Jenkins can connect</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/2021/junit-external-storage/junit-sql-config-screen.png\" alt=\"JUnit SQL plugin database configuration\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Click 'Save'</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"configuration-as-code\"><a class=\"anchor\" href=\"#configuration-as-code\"></a>Configuration as code</h3>\n<div class=\"paragraph\">\n<p>If you want to configure the plugin via <a href=\"https://plugins.jenkins.io/configuration-as-code\">Configuration as Code</a> then see the below sample:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-yaml\" data-lang=\"yaml\">unclassified:\n  globalDatabaseConfiguration:\n    database:\n      postgreSQL:\n        database: \"jenkins\"\n        hostname: \"${DB_HOST_NAME}\"\n        password: \"${DB_PASSWORD}\"\n        username: \"${DB_USERNAME}\"\n        validationQuery: \"SELECT 1\"\n  junitTestResultStorage:\n    storage: \"database\"</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"using-the-plugin\"><a class=\"anchor\" href=\"#using-the-plugin\"></a>Using the plugin</h3>\n<div class=\"paragraph\">\n<p>Now run some builds, here&#8217;s an example pipeline configuration to get you started if you&#8217;re just trying out the plugin:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">node {\n  writeFile file: 'x.xml', text: '''\n  &lt;testsuite name='sweet' time='200.0'&gt;\n    &lt;testcase classname='Klazz' name='test1' time='198.0'&gt;\n      &lt;error message='failure'/&gt;\n    &lt;/testcase&gt;\n    &lt;testcase classname='Klazz' name='test2' time='2.0'/&gt;\n    &lt;testcase classname='other.Klazz' name='test3'&gt;\n    &lt;skipped message='Not actually run.'/&gt;\n    &lt;/testcase&gt;\n  &lt;/testsuite&gt;\n  '''\n  junit 'x.xml'\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You will see a test result trend appear like below on the builds project page:</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/2021/junit-external-storage/junit-trend.png\" alt=\"JUnit Trend\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>If you check on the controller&#8217;s file system you will see no <code>junitResult.xml</code> for new builds.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you connect to your database and run:</p>\n</div>\n<div class=\"paragraph\">\n<p><code>SELECT * FROM caseresults;</code></p>\n</div>\n<div class=\"paragraph\">\n<p>You will see a number of test results in the database.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"what-happens-to-existing-test-results\"><a class=\"anchor\" href=\"#what-happens-to-existing-test-results\"></a>What happens to existing test results?</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Existing test results will stay on disk but will not be loaded.</p>\n</div>\n<div class=\"paragraph\">\n<p>Currently there is no migration scripts or plugin functionality to do this, if you need it then please raise an issue.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"how-are-test-results-cleaned-up\"><a class=\"anchor\" href=\"#how-are-test-results-cleaned-up\"></a>How are test results cleaned up</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>When a job or build is deleted the related test results are removed.</p>\n</div>\n<div class=\"paragraph\">\n<p>This is expected to be done as part of a 'Build Discarder'.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you wish to keep your results longer than this you can disable this feature by enabling:</p>\n</div>\n<div class=\"paragraph\">\n<p><code>Skip cleanup of test result on build deletion</code> on the system configuration page.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you need more complex cleanup strategies built into the plugin then please raise an issue.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"api\"><a class=\"anchor\" href=\"#api\"></a>API</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The API is defined at:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>jenkinsdoc:junit:io.jenkins.plugins.junit.storage.JunitTestResultStorage[]</p>\n</li>\n<li>\n<p>jenkinsdoc:junit:io.jenkins.plugins.junit.storage.JunitTestResultStorageDescriptor[]</p>\n</li>\n<li>\n<p>jenkinsdoc:junit:io.jenkins.plugins.junit.storage.TestResultImpl[]</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><code>JunitTestResultStorage#load</code> is passed a job name and build which can be used to construct an instance of the external storage implementation.</p>\n</div>\n<div class=\"paragraph\">\n<p>This implementation will then act on that job and build except for the optimised calls that act across all builds.</p>\n</div>\n<div class=\"paragraph\">\n<p>The API contains the basic methods like <code>getFailCount</code>, <code>getSkipCount</code>, but also APIs that are optimised for retrieving data for the trend graphs on the job page and the test result history page.</p>\n</div>\n<div class=\"paragraph\">\n<p>These allow single API calls to be made for what used to be a lot of work for Jenkins to look up before.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"feedback\"><a class=\"anchor\" href=\"#feedback\"></a>Feedback</h3>\n<div class=\"paragraph\">\n<p>I would love to hear your feedback &amp; suggestions for this feature.</p>\n</div>\n<div class=\"paragraph\">\n<p>Please create an issue at <a href=\"https://github.com/jenkinsci/junit-plugin\" class=\"bare\">https://github.com/jenkinsci/junit-plugin</a> or provide feedback on <a href=\"https://community.jenkins.io\" class=\"bare\">https://community.jenkins.io</a></p>\n</div>\n</div>\n</div>\n</div>","id":"bb5b6b61-0b2c-523e-9fa6-6f2912642e51","title":"Introducing external storage for JUnit test results","date":"2021-10-28T00:00:00.000Z","slug":"/blog/2021/10/28/introducing-junit-external-storage/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"timja","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer, along with slack, azure-keyvault and configuration-as-code plugins.\nTim started using Jenkins in 2013 and became an active contributor in 2018.\nTim enjoys working on open source software in his “free” time.</p>\n</div>","id":"timja","irc":null,"linkedin":"tim-jacomb-98043174","name":"Tim Jacomb","slug":"/blog/authors/timja","twitter":"Tjaynz"}]}},"pageContext":{"next":"/blog/2021/10/31/hacktoberfest-results-2021/","previous":"/blog/2021/10/26/just-enough-pipeline/","id":"bb5b6b61-0b2c-523e-9fa6-6f2912642e51"}},
    "staticQueryHashes": ["1271460761","3649515864"]}