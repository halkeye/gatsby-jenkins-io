{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2020/06/30/machine-learning-plugin-coding-phase1/",
    "result": {"data":{"blog":{"html":"<div class=\"imageblock text-center\">\n<div class=\"content\">\n<img src=\"/images/gsoc/jenkins-gsoc-logo_small.png\" alt=\"jenkins gsoc logo small\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Welcome back !</p>\n</div>\n<div class=\"paragraph\">\n<p>This blog post is briefing my coding phase 1 in Jenkins <a href=\"/projects/gsoc/2020/projects/machine-learning/\">Machine Learning Plugin</a> for this GSoC 2020.</p>\n</div>\n<div class=\"paragraph\">\n<p>After a fresh introduction of community bonding, On June 1st, coding of GSoC had started officially with phase 1. At this point, every GSoC student should be expected to have a rigid plan with their entire project. With the guidance of mentors I was able to complete a design document and timeline which can be slightly adjustable during the coding. The coding phase was more about coding and discussion.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"quick-review\"><a class=\"anchor\" href=\"#quick-review\"></a>Quick review</h3>\n<table class=\"tableblock frame-all grid-all\" style=\"width: 25%;\">\n<colgroup>\n<col style=\"width: 83.3333%;\">\n<col style=\"width: 16.6667%;\">\n</colgroup>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Pull Requests</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">21</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Jira Issues</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">11</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Major Tasks</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">3</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Completed</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">3</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">In progress</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">0</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"week-1\"><a class=\"anchor\" href=\"#week-1\"></a>Week 1</h3>\n<div class=\"paragraph\">\n<p>I have to ensure that I have a solid architecture for implementing the core of this plugin such that perhaps I or future community will be able to develop R and Julia kernels for this plugin. Factory method design patterns are suitable when users need different types of products ( Python, R and Julia) without knowing much about the internal infrastructure ( Manager of these interpreters ).</p>\n</div>\n<div class=\"paragraph\">\n<p>All the base classes were implemented this week.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Design the Kernel connectors</p>\n</li>\n<li>\n<p>Initiate the interpreter</p>\n</li>\n<li>\n<p>Close the connection</p>\n</li>\n<li>\n<p>Add simple tests</p>\n</li>\n<li>\n<p>Update pom.xml</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>More than these changes, repo was updated with pull request template and licence header. Readme was extended a little at the end of the week.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"issues-and-challenges\"><a class=\"anchor\" href=\"#issues-and-challenges\"></a>Issues and Challenges</h4>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Git rebase and squash</p>\n</li>\n<li>\n<p>Tests invokes ipython client in the server failed during the CI build</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"week-2\"><a class=\"anchor\" href=\"#week-2\"></a>Week 2</h3>\n<div class=\"paragraph\">\n<p>With the help of a design document, I had a plan to do the configurations globally and using the Abstract Folder property I could save the configuration and retrieve for the job configuartion. I used to reference some other well developed plugin for the structure of code. That helped me a lot while I was coding. Our first official contributor has popped out his pull request.</p>\n</div>\n<div class=\"paragraph\">\n<p>Form validations and helper html will be a great help in the user point of view as well as developers. A minor bug was fixed with the guidance of mentors by writing tests with ‘Jenkins WebClient`. Until the end of the week, builder class of the plugin has been implemented with lots of research and discussion. Finally,  Test connection was added to the global configuration page to start the connection and test it. A single issue that blocked me using py4j authentication about zeppelin-python was reported in Jira.</p>\n</div>\n<div class=\"paragraph\">\n<div class=\"title\">Server Configuration</div>\n<p><span class=\"image\"><img src=\"https://raw.githubusercontent.com/jenkinsci/machine-learning-plugin/master/docs/images/global_config.png\" alt=\"global_config\"></span></p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"issues-and-challenges-2\"><a class=\"anchor\" href=\"#issues-and-challenges-2\"></a>Issues and challenges</h4>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Backend depends on Apache zeppelin-python API to connect IPython</p>\n</li>\n<li>\n<p>Find relevant extension points to extend the plugin</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"week-3\"><a class=\"anchor\" href=\"#week-3\"></a>Week 3</h3>\n<div class=\"paragraph\">\n<p>Earlier in this week, we were trying to merge our IPython builder PR without any memory leaks or bugs that will cause the system to be devastating while running this plugin. Later, this whole week I was implementing a file parser that could copy the necessary files and had the ability to accomplish the file conversion.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"supported-file-types\"><a class=\"anchor\" href=\"#supported-file-types\"></a>Supported file types</h4>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Python (.py)</p>\n</li>\n<li>\n<p>JSON (Zeppelin notebooks format)</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>IPython builder was able to run Jupyter Notebooks and Zeppelin formatted JSON files at the end of the 3rd week. Minor issues were fixed in the code. We used ANSI color plugin to fix the abnormal view of error messages produced by the ipython kernel.</p>\n</div>\n<div class=\"paragraph\">\n<div class=\"title\">Copying and converting Jupyter Notebook</div>\n<p><span class=\"image\"><img src=\"https://raw.githubusercontent.com/jenkinsci/machine-learning-plugin/master/docs/images/file_parser.png\" alt=\"file_convert\"></span></p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"issues-and-challenges-3\"><a class=\"anchor\" href=\"#issues-and-challenges-3\"></a>Issues and Challenges</h4>\n<div class=\"paragraph\">\n<p>Python error messages could not be displayed in rich format\nIf a job is running at user level, but if the python code access file/file path which is not authorized to the user, it returns a permission denied message.\nWhile running on agent, notebook has to be written/copied to agent workspace\nArtifacts should be maintained/reachable from controller after build.</p>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"week-4\"><a class=\"anchor\" href=\"#week-4\"></a>Week 4</h3>\n<div class=\"paragraph\">\n<p>As all the major tasks has done, the demo preparation and plan for a experimental release was carried during the last week. There were lots of research on how to connect to a existing kernel in remote. Demo and presentation were prepared along the week.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"issues-and-challenges-4\"><a class=\"anchor\" href=\"#issues-and-challenges-4\"></a>Issues and Challenges</h4>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Releasing the first version was bit late</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"knowledge-transfer\"><a class=\"anchor\" href=\"#knowledge-transfer\"></a>Knowledge transfer</h3>\n<div class=\"sect3\">\n<h4 id=\"how-to-debug-the-code-through-intellij\"><a class=\"anchor\" href=\"#how-to-debug-the-code-through-intellij\"></a>How to debug the code through IntelliJ</h4>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Edit configuration → Add new Configuration → Maven</p>\n</li>\n<li>\n<p>Command line → type <code>hpi:run</code></p>\n</li>\n<li>\n<p>Click the debug icon on the toolbar or go to <code>Run</code> menu then <code>Debug</code></p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"how-to-setup-to-test-the-plugin\"><a class=\"anchor\" href=\"#how-to-setup-to-test-the-plugin\"></a>How to setup to test the plugin</h4>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Setup JDK 8 and Maven 3.5.*</p>\n</li>\n<li>\n<p>Create a directory <code>$ mkdir machine-learning-plugin</code></p>\n</li>\n<li>\n<p>Create a virtual environment <code>$ virtualenv venv</code></p>\n</li>\n<li>\n<p>Activate your virtual environment $ source venv/bin/activate</p>\n</li>\n<li>\n<p>Run <code>$ which python</code> to ensure your python path</p>\n</li>\n<li>\n<p><code>$ git clone <a href=\"https://github.com/jenkinsci/machine-learning-plugin.git\" class=\"bare\">https://github.com/jenkinsci/machine-learning-plugin.git</a></code></p>\n</li>\n<li>\n<p>Run <code>$ mvn clean install</code> from the machine-learning-plugin directory</p>\n</li>\n<li>\n<p>Run <code>$ mvn hpi:run</code> to start Jenkins with the plugin</p>\n</li>\n<li>\n<p>Set up the builder with localhost and other parameters</p>\n</li>\n<li>\n<p>Create a job</p>\n</li>\n<li>\n<p>Write python code like print(“plugin works”)</p>\n</li>\n<li>\n<p>Build the job</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"issues-and-bugs\"><a class=\"anchor\" href=\"#issues-and-bugs\"></a>Issues and bugs</h4>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-62528\">JENKINS-62528</a> Issues on Jenkins build in the plugin repository</p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-\">JENKINS-62621</a> Global configuration for IPython servers</p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-62649\">JENKINS-62649</a> Implementation of IPython Builder</p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-62711\">JENKINS-62711</a> File parser to copy source files to workspace</p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-62733\">JENKINS-62733</a> Python errors are not displayed properly in console log</p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-62735\">JENKINS-62735</a> Send/Receive necessary files from controller/agent to agent/controller</p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-62593\">JENKINS-62593</a> Improve the documentation</p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-62742\">JENKINS-62742</a> Increase Test coverage</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"resources-and-links\"><a class=\"anchor\" href=\"#resources-and-links\"></a>Resources and Links</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/jenkinsci/machine-learning-plugin.git\">Github</a></p>\n</li>\n<li>\n<p><a href=\"/projects/gsoc/2020/projects/machine-learning/\">Project page</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.google.com/document/d/10FjktNmWpdjgbGg3tEViadV_JNevn9W0sMOu-bF8m-o/edit?usp=sharing\">Design document</a></p>\n</li>\n</ul>\n</div>\n</div>","id":"9a5f343b-e83f-526e-aab4-05c8c88ea996","title":"Machine Learning Plugin project - coding phase 1 blog post","date":"2020-06-30T00:00:00.000Z","slug":"/blog/2020/06/30/machine-learning-plugin-coding-phase1/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"loghijiaha","html":"<div class=\"paragraph\">\n<p>Computer Science and Engineering Student at University of Moratuwa, Sri Lanka. He has been selected for Machine Learning plugin for Data Science in GSoC 2020 for Jenkins project. Hightly interested and contributing on open source projects.</p>\n</div>","id":"loghijiaha","irc":null,"linkedin":"loghi","name":"Loghi Perinpanayagam","slug":"blog/author/loghijiaha","twitter":"loghi5"}]}},"pageContext":{"next":"/blog/2020/07/08/winsw-yaml-support/","previous":"/blog/2020/06/27/external-fingerprint-storage/","id":"9a5f343b-e83f-526e-aab4-05c8c88ea996"}},
    "staticQueryHashes": ["1271460761","3649515864"]}