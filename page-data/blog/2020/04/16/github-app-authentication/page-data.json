{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2020/04/16/github-app-authentication/",
    "result": {"data":{"blog":{"html":"<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nThis blogpost was updated to reflect the general availability of the feature after the release of GitHub Branch Source 2.7.1 on April 26th, 2020.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>I&#8217;m excited to announce support for authenticating as a GitHub app in Jenkins.\nThis has been a long awaited feature by many users.\nIt has been released in <a href=\"https://github.com/jenkinsci/github-branch-source-plugin/releases/tag/github-branch-source-2.7.1\">GitHub Branch Source 2.7.1</a> which is now available in the Jenkins update centers.</p>\n</div>\n<div class=\"paragraph\">\n<p>Authenticating as a GitHub app brings many benefits:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><strong>Larger rate limits</strong> - The rate limit for a GitHub app scales with your organization size,\nwhereas a user based token has a limit of 5000 regardless of how many repositories you have.</p>\n</li>\n<li>\n<p><strong> User-independent authentication</strong> - Each GitHub app has its own user-independent authentication. No more need for 'bot' users or figuring out who should be the owner of 2FA or OAuth tokens.</p>\n</li>\n<li>\n<p><strong>Improved security and tighter permissions</strong> - GitHub Apps offer much finer-grained permissions compared to a service user and its personal access tokens. This lets the Jenkins GitHub app require a much smaller set of privileges to run properly.</p>\n</li>\n<li>\n<p><strong>Access to GitHub Checks API</strong> - GitHub Apps can access the the  <a href=\"https://developer.github.com/v3/checks/\">GitHub Checks API</a> to create check runs and check suites from Jenkins jobs and provide detailed feedback on commits as well as code annotation</p>\n</li>\n</ul>\n</div>\n<div class=\"sect1\">\n<h2 id=\"getting-started\"><a class=\"anchor\" href=\"#getting-started\"></a>Getting started</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Install the <a href=\"https://plugins.jenkins.io/github-branch-source/\">GitHub Branch Source plugin</a>,\nmake sure the version is <code>2.7.1</code> or above.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"configuring-the-github-organization-folder\"><a class=\"anchor\" href=\"#configuring-the-github-organization-folder\"></a>Configuring the GitHub Organization Folder</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Follow the <a href=\"https://github.com/jenkinsci/github-branch-source-plugin/blob/master/docs/github-app.adoc\">GitHub App Authentication setup guide</a>.  These instructions are also linked from the plugin’s README on GitHub.</p>\n</div>\n<div class=\"paragraph\">\n<p>Once you&#8217;ve finished setting it up, Jenkins will validate your credential and you should see your new rate limit.\nHere&#8217;s an example on a large org:</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/github-app-rate-limit.png\" alt=\"GitHub app rate limit\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"how-do-i-get-an-api-token-in-my-pipeline\"><a class=\"anchor\" href=\"#how-do-i-get-an-api-token-in-my-pipeline\"></a>How do I get an API token in my pipeline?</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>In addition to usage of GitHub App authentication for Multi-Branch Pipeline, you can also use app authentication directly in your Pipelines.\nYou can access the Bearer token for the GitHub API by just loading a 'Username/Password' credential as usual,\nthe plugin will handle authenticating with GitHub in the background.</p>\n</div>\n<div class=\"paragraph\">\n<p>This could be used to call additional GitHub API endpoints from your pipeline, possibly the\n<a href=\"https://developer.github.com/v3/repos/deployments/\">deployments api</a> or you may wish to implement your own\n<a href=\"https://developer.github.com/v3/checks/\">checks api</a> integration until Jenkins supports this out of the box.</p>\n</div>\n<div class=\"paragraph\">\n<p><em>Note: the API token you get will only be valid for one hour, don&#8217;t get it at the start of the pipeline and assume it will be valid all the way through</em></p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Example:</strong> Let&#8217;s submit a check run to Jenkins from our Pipeline:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">pipeline {\n  agent any\n\n  stages{\n    stage('Check run') {\n      steps {\n        withCredentials([usernamePassword(credentialsId: 'githubapp-jenkins',\n                                          usernameVariable: 'GITHUB_APP',\n                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {\n            sh '''\n            curl -H \"Content-Type: application/json\" \\\n                 -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n                 -H \"authorization: Bearer ${GITHUB_ACCESS_TOKEN}\" \\\n                 -d '{ \"name\": \"check_run\", \\\n                       \"head_sha\": \"'${GIT_COMMIT}'\", \\\n                       \"status\": \"in_progress\", \\\n                       \"external_id\": \"42\", \\\n                       \"started_at\": \"2020-03-05T11:14:52Z\", \\\n                       \"output\": { \"title\": \"Check run from Jenkins!\", \\\n                                   \"summary\": \"This is a check run which has been generated from Jenkins as GitHub App\", \\\n                                   \"text\": \"...and that is awesome\"}}' https://api.github.com/repos/&lt;org&gt;/&lt;repo&gt;/check-runs\n            '''\n        }\n      }\n    }\n  }\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"whats-next\"><a class=\"anchor\" href=\"#whats-next\"></a>What&#8217;s next</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>GitHub Apps authentication in Jenkins is a huge improvement.  Many teams have already started using it and have helped improve it by giving pre-release feedback. There are more improvements on the way.</p>\n</div>\n<div class=\"paragraph\">\n<p>There&#8217;s a proposed Google Summer of Code project: <a href=\"https://jenkins.io/projects/gsoc/2020/project-ideas/github-checks/\">GitHub Checks API for Jenkins Plugins</a>.\nIt will look at integrating with the <a href=\"https://developer.github.com/v3/checks/\">Checks API</a>,\nwith a focus on reporting issues found using the <a href=\"https://plugins.jenkins.io/warnings-ng/\">warnings-ng plugin</a>\ndirectly onto the GitHub pull requests, along with test results summary on GitHub.\nHopefully it will make the Pipeline example below much simpler for Jenkins users :)\nIf you want to get involved with this, join the <a href=\"https://gitter.im/jenkinsci/gsoc-sig\">GSoC Gitter channel</a>\nand ask how you can help.</p>\n</div>\n</div>\n</div>","id":"c9bdc8f4-e8bc-5080-883f-d67fbd7f7847","title":"GitHub App authentication support released","date":"2020-04-16T00:00:00.000Z","slug":"/blog/2020/04/16/github-app-authentication/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"timja","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer, along with slack, azure-keyvault and configuration-as-code plugins.\nTim started using Jenkins in 2013 and became an active contributor in 2018.\nTim enjoys working on open source software in his “free” time.</p>\n</div>","id":"timja","irc":null,"linkedin":"tim-jacomb-98043174","name":"Tim Jacomb","slug":"blog/author/timja","twitter":"Tjaynz"}]}},"pageContext":{"next":"/blog/2020/04/30/jenkins-is-the-way/","previous":"/blog/2020/03/30/azure-key-vault-cred-provider/","id":"c9bdc8f4-e8bc-5080-883f-d67fbd7f7847"}},
    "staticQueryHashes": ["1271460761","3649515864"]}