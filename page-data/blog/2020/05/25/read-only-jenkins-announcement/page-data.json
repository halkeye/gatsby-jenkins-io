{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2020/05/25/read-only-jenkins-announcement/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>I&#8217;m excited to announce that the 'read-only' Jenkins feature is now available for preview.\nThis feature allows restricting configuration UIs and APIs while providing access to essential Jenkins system configuration, diagnostics, and self-monitoring tools through Web UI.\nSuch mode is critical for instances managed as code, e.g. with <a href=\"https://plugins.jenkins.io/configuration-as-code\">Jenkins Configuration-as-Code</a> plugin.\nIt is delivered as a part of the jep:224[Readonly system configuration] effort.</p>\n</div>\n<div class=\"paragraph\">\n<p>You will want to use at least Jenkins 2.238 to have all the features mentioned in this post.</p>\n</div>\n<div class=\"paragraph\">\n<p>Read-only Jenkins currently allows users to have access to:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>job configuration</p>\n</li>\n<li>\n<p>system configuration</p>\n</li>\n<li>\n<p>plugin manager</p>\n</li>\n<li>\n<p>system logs</p>\n</li>\n<li>\n<p>cloud configuration</p>\n</li>\n<li>\n<p>agent configuration</p>\n</li>\n<li>\n<p>agent logs</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>For more planned integrations see the jira:JENKINS-12548[] epic.</p>\n</div>\n<div class=\"paragraph\">\n<p>Read-only Jenkins is split into three permissions:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><strong>Job/ExtendedRead</strong> - Read-only access to job configurations</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>existed since 2009 but the UI didn&#8217;t do anything to indicate to the users\nthat they couldn&#8217;t edit the job configuration page.\nThis has now been adapted to the new read-only engine.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><strong>Agent/ExtendedRead</strong> - Read-only access to agent configurations</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>existed since 2013 but it was undocumented and only allowed access to API and no UI</p>\n</li>\n<li>\n<p>UI support added in Jenkins 2.238</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><strong>Overall/SystemRead</strong> - Read-only access to Jenkins system configuration.\nIt is very useful for Jenkins instances managed as code, e.g. with help of the <a href=\"https://plugins.jenkins.io/configuration-as-code\">Jenkins Configuration as Code Plugin</a>.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Introduced in Jenkins 2.222 as a part of jep:224[Readonly system configuration]</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>You can selectively grant the permission(s) as you wish.</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"why-do-i-want-this\"><a class=\"anchor\" href=\"#why-do-i-want-this\"></a>Why do I want this?</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Given the rise of the configuration-as-code plugin a lot of Jenkins instances are fully managed as code,\nwhich means that no changes are allowed through the UI.</p>\n</div>\n<div class=\"paragraph\">\n<p>The problem with this is you don’t know when new plugin versions are available and in order to see what other configuration options are available to a plugin you currently need the 'Administer' permission.</p>\n</div>\n<div class=\"paragraph\">\n<p>Read-only access to system administration information allows users who are not administrators to more easily debug build issues.\nFor example, given a 'Jenkins' error message in a build the user can check:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>which plugins are installed</p>\n</li>\n<li>\n<p>the version of the plugin</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>This can allow the user to solve their issue themselves and makes it easier for the user to report an issue with a plugin directly to the maintainers.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"what-can-i-expect\"><a class=\"anchor\" href=\"#what-can-i-expect\"></a>What can I expect</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>All built in UI controls have been adapted to clearly distinguish between\nan editable control and a control you don&#8217;t have permission to edit:</p>\n</div>\n<div class=\"paragraph\">\n<p>Editable:</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/2020/05-read-only-jenkins-announcement/build-discarder-edit.png\" alt=\"build discarder edit\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Non editable:</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/2020/05-read-only-jenkins-announcement/build-discarder-read.png\" alt=\"build discarder read\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p><em>Note: there are other controls such as in the credentials and pipeline plugins that have\nnot been updated yet.</em></p>\n</div>\n<div class=\"paragraph\">\n<p>Action buttons, (Such as 'Save' and 'Apply') have been hidden in most cases.</p>\n</div>\n<div class=\"paragraph\">\n<p>Work will continue on read-only configuration.  Some plugins need support added and certain controls\ncould have some improvements done to render better.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"how-can-i-use-it\"><a class=\"anchor\" href=\"#how-can-i-use-it\"></a>How can I use it?</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>These permissions are currently available in beta and for now disabled by default.\nYou can enable them by installing the <a href=\"https://plugins.jenkins.io/extended-read-permission\">Extended read permission plugin</a> v3.2 or above.</p>\n</div>\n<div class=\"paragraph\">\n<p>Then you will need to add the following permissions to a user / group depending on your use case:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Overall/SystemRead</p>\n</li>\n<li>\n<p>Job/ExtendedRead</p>\n</li>\n<li>\n<p>Agent/ExtendedRead</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><em>Note: You will need to set the Overall/Read and Job/Read permissions as well.  You might\nwant to consider creating a role containing the required permissions.</em></p>\n</div>\n<div class=\"paragraph\">\n<p>Here is an example using the <a href=\"https://plugins.jenkins.io/configuration-as-code\">Configuration as Code plugin</a> and the <a href=\"https://plugins.jenkins.io/folder-auth\">Folder-based Authorization Strategy plugin</a>:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-yaml\" data-lang=\"yaml\">jenkins:\n  authorizationStrategy:\n    folderBased:\n      globalRoles:\n        - name: \"admin\"\n          permissions:\n            - id: \"Overall/Administer\"\n          sids:\n            - \"admin\"\n        - name: \"global read\"\n          permissions:\n            - id: \"Agent/ExtendedRead\"\n            - id: \"Overall/SystemRead\"\n            - id: \"Overall/Read\"\n            - id: \"Job/Read\"\n            - id: \"Job/ExtendedRead\"\n          sids:\n            - \"reader\"</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"i-cant-see-a-configuration-that-i-think-should-be-allowed\"><a class=\"anchor\" href=\"#i-cant-see-a-configuration-that-i-think-should-be-allowed\"></a>I can&#8217;t see a configuration that I think should be allowed</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Most of Jenkins itself has been updated to support read-only Jenkins, but not very many plugins.\nPlease create an enhancement issue on the plugins issue tracker.\nIf the plugin uses Jira to track issues, then you can add it to the jira:JENKINS-12548[] epic.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"how-do-i-update-my-plugin-to-support-it\"><a class=\"anchor\" href=\"#how-do-i-update-my-plugin-to-support-it\"></a>How do I update my plugin to support it</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>See the <a href=\"/doc/developer/views/read-only/\">Read only view</a> section of the developer documentation.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"whats-next\"><a class=\"anchor\" href=\"#whats-next\"></a>What&#8217;s next</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>In this release we introduce a foundation feature which is already supported in all key Jenkins core controls and in some plugins.\nThere are many plugins which contribute to global configurations and diagnostics which still need to be adapted to support the new mode.\nWe will keep working on this feature and its adoption so that the next LTS baseline in September provides a full-fledged user experience for Jenkins admins.</p>\n</div>\n<div class=\"paragraph\">\n<p>System read permission is a featured project in the <a href=\"/events/online-hackfest/2020-uiux/\">UI/UX Hackfest</a>\nhappening May 25-29 2020. If you want to get involved please check it out!</p>\n</div>\n</div>\n</div>","id":"bbaf3958-fe7d-5fd6-a06c-16651d385923","title":"Read-only Jenkins Configuration","date":"2020-05-25T00:00:00.000Z","slug":"/blog/2020/05/25/read-only-jenkins-announcement/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"timja","html":"<div class=\"paragraph\">\n<p>Jenkins core maintainer, along with slack, azure-keyvault and configuration-as-code plugins.\nTim started using Jenkins in 2013 and became an active contributor in 2018.\nTim enjoys working on open source software in his “free” time.</p>\n</div>","id":"timja","irc":null,"linkedin":"tim-jacomb-98043174","name":"Tim Jacomb","slug":"/blog/authors/timja","twitter":"Tjaynz"}]}},"pageContext":{"id":"bbaf3958-fe7d-5fd6-a06c-16651d385923"}},
    "staticQueryHashes": ["1271460761","3649515864"]}