{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2020/08/03/github-checks-api-plugin-coding-phase-2/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>Another great coding phase for <a href=\"https://www.jenkins.io/projects/gsoc/2020/projects/github-checks/\">GitHub Checks API Project</a> ends!\nIn this phase, we focused on consuming the checks API in two widely used plugins:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://plugins.jenkins.io/warnings-ng/\">Warnings NG Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/code-coverage-api/\">Code Coverage API Plugin</a></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Besides the external usage, we have also split the general checks API from its GitHub implementation and released both of the plugins:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://plugins.jenkins.io/checks-api/\">Checks API Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/github-checks/\">GitHub Checks Plugin</a></p>\n</li>\n</ul>\n</div>\n<div class=\"videoblock\">\n<div class=\"title\">Coding Phase 2 Demo [starts from 25:20]</div>\n<div class=\"content\">\n<iframe width=\"800\" height=\"420\" src=\"https://www.youtube.com/embed/b67I6spBdTg?rel=0\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"warning-checks\"><a class=\"anchor\" href=\"#warning-checks\"></a>Warning Checks</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The newly released <a href=\"https://github.com/jenkinsci/warnings-ng-plugin/releases/tag/warnings-ng-8.4.0\">Warnings NG plugin 8.4.0</a> will use checks API to publish different check runs for different static analysis tools.\nWithout leaving GitHub, users are now able to see the analysis report they interested in.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/warning-checks.png\" alt=\"Warning Checks Summary\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>On GitHub&#8217;s conversation tab for each PR, users will see summaries for those checks like the screenshot above. The summaries will include:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The status that indicates the quality gate</p>\n</li>\n<li>\n<p>The name of the analysis tool used</p>\n</li>\n<li>\n<p>A short message that indicates statistics of new and total issues</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>More fine-grained statistics can be found in the <code>Details</code> page.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/severity-statistics.png\" alt=\"Severity Statis\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Another practical feature is the annotation for specific lines of code. Users can now review the code alone with the annotations.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/annotations.png\" alt=\"Warning Annotations\">\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"try-it\"><a class=\"anchor\" href=\"#try-it\"></a>Try It</h3>\n<div class=\"paragraph\">\n<p>In <a href=\"https://github.com/jenkinsci/warnings-ng-plugin/releases/tag/warnings-ng-8.4.0\">Wanings NG plugin 8.4.0</a>, the warning checks is set as a default feature only for GitHub.\nFor other SCM platforms, a <code>NullPublisher</code> will be used which does nothing.\nTherefore, you can get those checks for your own GitHub project just in a few steps:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Update Warnings NG plugin to 8.4.0</p>\n</li>\n<li>\n<p>Install <a href=\"https://plugins.jenkins.io/github-checks/\">GitHub Checks plugin</a> on your Jenkins instance</p>\n</li>\n<li>\n<p>Follow the <a href=\"https://github.com/jenkinsci/github-branch-source-plugin/blob/master/docs/github-app.adoc\">GitHub app authentication guide</a> to configure the credentials for the multi-branch project or GitHub organization project you are going to use</p>\n</li>\n<li>\n<p>Use warnings-ng plugin in your Jenkinsfile for the project you configured in the last step, e.g.</p>\n</li>\n</ol>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">node {\n    stage ('Checkout') {\n        checkout scm\n    }\n\n    stage ('Build and Static Analysis') {\n        sh 'mvn -V -e clean verify -Dmaven.test.failure.ignore'\n\n        recordIssues tools: [java(), javaDoc()], aggregatingResults: 'true', id: 'java', name: 'Java'\n        recordIssues tool: errorProne(), healthy: 1, unhealthy: 20\n        recordIssues tools: [checkStyle(pattern: 'target/checkstyle-result.xml'),\n            spotBugs(pattern: 'target/spotbugsXml.xml'),\n            pmdParser(pattern: 'target/pmd.xml'),\n            cpd(pattern: 'target/cpd.xml')],\n            qualityGates: [[threshold: 1, type: 'TOTAL', unstable: true]]\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><em>For more about the pipeline usage of warnings-ng plugin, please see <a href=\"https://github.com/jenkinsci/warnings-ng-plugin/blob/master/doc/Documentation.md#pipeline-configuration\">the official documentation</a>.</em></p>\n</div>\n<div class=\"paragraph\">\n<p>However, if you don&#8217;t want to publish the warnings to GitHub, you can either uninstall the GitHub Checks plugin or disable it by adding <code>skipPublishingChecks: true</code>.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">recordIssues enabledForFailure: true, tools: [java(), javaDoc()], skipPublishingChecks: true</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"coverage-checks\"><a class=\"anchor\" href=\"#coverage-checks\"></a>Coverage Checks</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The coverage checks are achieved by consuming the API in <a href=\"https://plugins.jenkins.io/code-coverage-api/\">Code Coverage API plugin</a>.\nFirst, in the conversation tab of a PR, users will be able to see the summary about the coverage difference compared to previous builds.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/coverage-summary.png\" alt=\"Coverage Summary\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <code>Details</code> page will contain some other things:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Links to the reference build, including the target branch build from the master branch and the last successful build from this branch</p>\n</li>\n<li>\n<p>Coverage healthy score (the default value is 100% if the threshold is not configured)</p>\n</li>\n<li>\n<p>Coverages and trends of different types in table format</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/coverage-details.png\" alt=\"Coverage Details\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <a href=\"https://github.com/jenkinsci/code-coverage-api-plugin/pull/169\">pull request</a> for this feature will soon be merged and will be included in the next release of Coverage Checks API plugin. After that, you can use it by adding the below section to your pipeline script:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">node {\n    stage ('Checkout') {\n        checkout scm\n    }\n\n    stage ('Line and Branch Coverage') {\n        publishCoverage adapters: [jacoco('**/*/jacoco.xml')], sourceFileResolver: sourceFiles('STORE_ALL_BUILD')\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Like the warning checks, you can also disable the coverage checks by setting the field <code>skipPublishingChecks</code>, e.g.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">publishCoverage adapters: [jacoco('**/*/jacoco.xml')], sourceFileResolver: sourceFiles('STORE_ALL_BUILD'), skipPublishingChecks: true</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"next-phase\"><a class=\"anchor\" href=\"#next-phase\"></a>Next Phase</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>In the next phase, we will turn our attention back to <a href=\"https://plugins.jenkins.io/checks-api/\">Checks API Plugin</a> and <a href=\"https://plugins.jenkins.io/github-checks/\">GitHub Checks Plugin</a> and add the following features in future versions:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Pipeline Support</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Users can publish checks directly in a pipeline script without requiring a consumer plugin that supports the checks.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Re-run Request</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Users can re-run Jenkins build through Checks API.</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Lastly, it is exciting to inform that we are currently making the checks feature available on <a href=\"https://ci.jenkins.io\">ci.jenkins.io</a> for all plugins hosted in the jenkinsci GitHub organization, please see <a href=\"https://issues.jenkins.io/browse/INFRA-2694\">INFRA-2694</a> for more details.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"resources\"><a class=\"anchor\" href=\"#resources\"></a>Resources</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/jenkinsci/checks-api-plugin\">Checks API Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/github-checks-plugin\">GitHub Checks Plugin</a></p>\n</li>\n<li>\n<p><a href=\"/projects/gsoc/2020/projects/github-checks/\">Project Page</a></p>\n</li>\n<li>\n<p><a href=\"https://gitter.im/jenkinsci/github-checks-api\">Gitter Channel</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","id":"1a966f1b-f29c-510f-943e-ff264acdf7dd","title":"GitHub Checks API Plugin Project - Coding Phase 2","date":"2020-08-03T00:00:00.000Z","slug":"/blog/2020/08/03/github-checks-api-plugin-coding-phase-2/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/19e71/XiongKezhi.jpg","srcSet":"/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/77b35/XiongKezhi.jpg 32w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/d4a57/XiongKezhi.jpg 64w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/19e71/XiongKezhi.jpg 128w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/68974/XiongKezhi.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/ef6ff/XiongKezhi.webp 32w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/8257c/XiongKezhi.webp 64w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/6766a/XiongKezhi.webp 128w,\n/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/22bfc/XiongKezhi.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/bedf23c1062bf01bb5bdcdd5aea7730e/XiongKezhi.jpeg"},"blog":null,"github":"XiongKezhi","html":"<div class=\"paragraph\">\n<p>Jenkins Google Summer of Code 2020 Student. Kezhi is an open source enthusiast who enjoys sharing ideas with other developers. He started contributing to Jenkins in March 2020. Currently, he is working on <a href=\"https://github.com/XiongKezhi/checks-api-plugin\">GitHub Checks API Plugin</a>.</p>\n</div>","id":"XiongKezhi","irc":null,"linkedin":"kezhi-xiong-44234a188","name":"Kezhi Xiong","slug":"/blog/authors/xiongkezhi","twitter":"AugustX_"}]}},"pageContext":{"id":"1a966f1b-f29c-510f-943e-ff264acdf7dd"}},
    "staticQueryHashes": ["1271460761","3649515864"]}