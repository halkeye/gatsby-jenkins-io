{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2020/11/04/codeql/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>A little over a month ago, <a href=\"https://github.blog/2020-09-30-code-scanning-is-now-available/\">GitHub announced the general availability of its code scanning solution</a>.\nIt&#8217;s based on <a href=\"https://github.com/github/codeql\">CodeQL</a>, which makes it pretty easy to write queries for it and run them using the CodeQL GitHub action, CodeQL command line tools, or on <a href=\"https://lgtm.com\">lgtm.com</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Many of the security vulnerabilities discovered in Jenkins plugins are fairly similar to each other, and unfortunately they&#8217;re usually specific to Jenkins, which means existing generic tools would not be able to discover them.\nSo I decided to write CodeQL queries for Jenkins-specific issues and <a href=\"https://groups.google.com/d/msg/jenkinsci-dev/0hw97zAdUMw/zt4TeGV7AQAJ\">invited maintainers to sign their plugins up for a \"private beta\"</a> of code scanning for these issues.</p>\n</div>\n<div class=\"paragraph\">\n<p>Today&#8217;s security advisory is the first one that includes findings discovered through that initiative.\nAll these issues were discovered with assistance by this tooling:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"/security/advisory/2020-11-04/#SECURITY-2101\">SECURITY-2101</a> in <a href=\"https://plugins.jenkins.io/aws-global-configuration\">AWS Global Configuration Plugin</a>,</p>\n</li>\n<li>\n<p><a href=\"/security/advisory/2020-11-04/#SECURITY-2102\">SECURITY-2102</a> and <a href=\"/security/advisory/2020-11-04/#SECURITY-2103\">SECURITY-2103</a> in <a href=\"https://plugins.jenkins.io/kubernetes\">Kubernetes Plugin</a>,</p>\n</li>\n<li>\n<p><a href=\"/security/advisory/2020-11-04/#SECURITY-2104\">SECURITY-2104</a> and <a href=\"/security/advisory/2020-11-04/#SECURITY-2115\">SECURITY-2115</a> in <a href=\"https://plugins.jenkins.io/mercurial\">Mercurial Plugin</a>,</p>\n</li>\n<li>\n<p><a href=\"/security/advisory/2020-11-04/#SECURITY-2110\">SECURITY-2110</a> in <a href=\"https://plugins.jenkins.io/azure-keyvault\">Azure Key Vault Plugin</a>, and</p>\n</li>\n<li>\n<p><a href=\"/security/advisory/2020-11-04/#SECURITY-2126\">SECURITY-2126</a> in <a href=\"https://plugins.jenkins.io/active-directory\">Active Directory Plugin</a></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>While there were of course also false positives we had to review and mark as ignored, the integration with the GitHub UI made this pretty straightforward.\nOverall I&#8217;m very happy with the results so far, especially considering how new this initiative is.</p>\n</div>\n<div class=\"paragraph\">\n<p>Interested in making the plugin you are maintaining more secure?\nSign up now by <a href=\"https://issues.jenkins.io/browse/INFRA\">filing an INFRA issue</a> in the <code>github</code> component and list the plugin repositories you&#8217;d like to have scanned.</p>\n</div>","id":"507874d6-f29d-5e57-82cd-0383757359fc","title":"First results from using GitHub CodeQL to discover security vulnerabilities in Jenkins plugins","date":"2020-11-04T00:00:00.000Z","slug":"/blog/2020/11/04/codeql/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"daniel-beck","html":"<div class=\"paragraph\">\n<p>Daniel is a Jenkins core maintainer and, as security officer, leads the <a href=\"/security/#team\">Jenkins security team</a>.\nHe sometimes contributes to developer documentation and project infrastructure.</p>\n</div>","id":"daniel-beck","irc":null,"linkedin":null,"name":"Daniel Beck","slug":"blog/author/daniel-beck","twitter":null}]}},"pageContext":{"next":"/blog/2020/11/05/installing-jenkins-on-kubernetes/","previous":"/blog/2020/10/28/election-candidates/","id":"507874d6-f29d-5e57-82cd-0383757359fc"}},
    "staticQueryHashes": ["1271460761","3649515864"]}