{
    "componentChunkName": "component---src-templates-author-blog-list-template-js",
    "path": "/blog/author/samatdav",
    "result": {"data":{"author":{"avatar":null,"blog":null,"github":"samatdav","html":"","id":"samatdav","irc":null,"linkedin":null,"name":"Samat Davletshin","slug":"blog/author/samatdav","twitter":null},"allBlog":{"edges":[{"node":{"date":"2016-05-26T00:00:00.000Z","id":"4a650522-ee39-5465-887f-963c348a9754","slug":"/blog/2016/05/26/gsoc-jenkins-web-ui-project/","strippedHtml":"About me\n\nMy name is Samat Davletshin and I am from HSE University from Moscow, Russia. I\ninterned at Intel and Yandex, and cofounded a startup\nproject where I personally developed front-end and back-end of the website.\n\nI am excited to participate in GSoC with Jenkins this summer as a chanсe to make\na positive change for thousands of users as well as to learn from great mentors.\n\nAbstract\n\nAlthough powerful, Jenkins new job creation and configuration process may be non\nobvious and time consuming. This can be improved by making UI more intuitive,\nconcise, and functional. I plan to achieve this by creating a simpler new job\ncreation, configuration process focused on essential elements, and embedding new\nfunctionality.\n\nMy mentors are Kirill Merkushev and\nMichael Neale\n\nDeliverables\n\nNew job creation\n\nNew job name validation\n\nInitially, job validation was unresponsive, job creation was still allowed with\nan invalid name, and some allowed characters even crashed Jenkins. Happily, two\nof this problems were fixed in recent improvements and I plan add only a real\ntime name check for invalid characters.\n\nPopup window\n\nJenkins has a lot of windows reloads that may time consuming. The creation of\nnew job is a simple process requiring only job name and job type. This way UI\nmay be improved by reducing page reloads and putting new job creation interface\nin a dialog window. Such popup would likely consist of three steps of\nimplementation: rendering a dialog window, receiving JSON with job types,\nsending a POST request to create the job.\n\nConfiguration page\n\nChanging help information\n\nAs reported by some users, it would be useful to have the functionality to\nchange help information. Installation administrators would be able to change the\nhelp info and choose editing rights for other users. That would likely require a\ncreation of extension points and a plugin using them. I also would like to\ninclude the ability to style the help information using markdown as shown above.\n\n[Optional] The functionality is extended to creation of crowd sourced \"wiki like\" documentation\n\nAs in\nlocalization\nplugin the changes are gathered and applied beyond installation of a particular\nuser.\n\nMore intuitive configuration page.\n\nPursuing to solve this  issue\n\nAlthough there are a lot improvements in new configuration page, there is always\na room for improvements. An advanced job still has a very complicated and hard\nto read configuration page. It is still open to discussion, but I may approach\nit by better division of configuration parts such as an accordion based\nnavigation.\n\nHome page\n\n[Optional] Removing \"My Views\" page\n\n\"My Views\" page may unnecessary complicate essential sidepanel navigation. Since\nit contains very small functionality, the functions may be moved to the home\npage and the whole page may be removed. That may be implemented by adding icons\nto \"My Views\" tabs. Additionally, the standard view creation page can create\neither of the types\n\n[Optional] Reducing number of UI elements\n\nThe home page may contain some UI elements that are not essential and rarely\nused. This way elements \"enable auto refresh\", “edit description”, “icon sizes”,\n”legend”, “RSS” may be removed from home page and placed under \"Manage Jenkins\"\nor an upper menu. It is also possible to create new extension points to support\nnew UI elements through plugins.\n\nCredentials store page\n\n[Optional] Grouping credentials and their domains\n\nCredentials page has too many reloads and requires many clicks to get to a\nrequired credentials page. That may be improved by removing the last page and\nshowing credentials under domains.\n\nCurrent progress\n\nBy May 25th I learned about the structure and tools of Jenkins and started\nworking on the first project:\n\nI started with New Job Name validation first. Luckily, in last updates the\nchanges of recena there\nwere implemented all of the changes I proposed except real time check on name\nvalidity. Here I proposed the change which fixes it by\nsending GET request on keyup event in addition to blur.\n\nI also made a New Job Popup with using existing interface.\n\nView the current\npop-up progress\n\nI used Remodal library for popup and put\nthere\nexisting\nNew Job container. Surprisingly, it was fully functional right away. On the GIF\nyou can see that popup receives all job types and then successfully submits the\npost form creating a new job. I think that could be a good first step. Further I\ncan start changing the window itself.\n\nLinks\n\nInitial proposal of the project\n\nThe project discussion on mailing list\n\nJenkins GSoC Page\n\nProject repository","title":"GSoC Project Intro: Improving Job Creation/Configuration","tags":["core","gsoc"],"authors":[{"avatar":null,"blog":null,"github":"samatdav","html":"","id":"samatdav","irc":null,"linkedin":null,"name":"Samat Davletshin","slug":"blog/author/samatdav","twitter":null}]}}]}},"pageContext":{"author":"samatdav","limit":8,"skip":0,"numPages":1,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}