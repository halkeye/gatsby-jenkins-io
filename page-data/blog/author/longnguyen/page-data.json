{
    "componentChunkName": "component---src-templates-author-blog-list-template-js",
    "path": "/blog/author/longnguyen",
    "result": {"data":{"author":{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg","srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/77b35/longnguyen.jpg 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/d4a57/longnguyen.jpg 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/68974/longnguyen.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/ef6ff/longnguyen.webp 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/8257c/longnguyen.webp 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/6766a/longnguyen.webp 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/22bfc/longnguyen.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"longngn","html":"<div class=\"paragraph\">\n<p>Long is a Software Engineering student at FPT University, Vietnam. He started to contribute for Jenkins from Google Summer of Code 2019 for the project <a href=\"https://jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Remoting over Apache Kafka with Kubernetes features</a></p>\n</div>","id":"longnguyen","irc":null,"linkedin":null,"name":"Long Nguyen","slug":"/blog/author/longnguyen","twitter":null},"allBlog":{"edges":[{"node":{"date":"2019-08-19T00:00:00.000Z","id":"a8a6f50d-13d8-5ff0-b148-cd0ef7696ecf","slug":"/blog/2019/08/19/remoting-kafka-kubernetes-release-2.0/","strippedHtml":"I am Long Nguyen from FPT University, Vietnam. My project for Google Summer of Code 2019 is Remoting over Apache Kafka with Kubernetes features. After a successful Phase 1, finally the 2.0 version of the plugin has been released. The 2.0 version provides seamless integration with Kubernetes environment.\n\n2.0 version features\n\nStart a simple Apache Kafka server in Kubernetes.\n\nDynamically provision Remoting Kafka Agent in Kubernetes.\n\nHelm chart to bootstrap the whole system in Kubernetes.\n\nStart a simple Apache Kafka server in Kubernetes\n\nUse of the plugin requires that users have a configured Apache Zookeeper and Apache Kafka server, which could be intimidating for people who just want to try out the plugin. Now, users can start a simple, single-node Apache Kafka server in Kubernetes environment with just one button click.\n\nOn the Global Configuration page, users can input Kubernetes server information and credentials. When users click Start Kafka on Kubernetes button, Jenkins will create a Kubernetes client from the information and then apply Apache Zookeeper and Apache Kafka YAML specification files from resources. After downloading images and creating containers, it will automatically update Apache Zookeeper and Apache Kafka URLs into respective fields.\n\nDynamically provision Remoting Kafka Agent in Kubernetes\n\nWith previous version, users have to manually add/remove nodes so it is hard to scale builds quickly. Kubernetes plugin allows us to dynamically provision agents in Kubernetes but it is designed for JNLP agent. With this new version, Remoting Kafka agent can also be provisioned automatically in Kubernetes environment.\n\nUsers can find the new feature in Cloud section in /configure. Here users could input Kubernetes connection parameters and desired Remoting Kafka agent properties including labels. When new build with matching labels gets started and there are no free nodes, Cloud will automatically provision Remoting Kafka agent pod in Kubernetes to run the build.\n\nHelm Chart\n\nHelm chart for Remoting over Apache Kafka plugin is based on stable/jenkins chart and incubator/kafka chart. You can follow the instruction here to install a demo ready-to-use Helm release. Your kubectl get all should look like this:\n\nNAME                                READY   STATUS    RESTARTS   AGE\npod/demo-jenkins-64dbd87987-bmndf   1/1     Running   0          2m21s\npod/demo-kafka-0                    1/1     Running   0          2m21s\npod/demo-zookeeper-0                1/1     Running   0          2m21s\n\nNAME                              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE\nservice/demo-jenkins              NodePort    10.108.238.56 8080:30386/TCP               2m21s\nservice/demo-jenkins-agent        ClusterIP   10.98.85.184 50000/TCP                    2m21s\nservice/demo-kafka                ClusterIP   10.109.231.58 9092/TCP                     2m21s\nservice/demo-kafka-headless       ClusterIP   None 9092/TCP                     2m21s\nservice/demo-zookeeper            ClusterIP   10.103.2.231 2181/TCP                     2m21s\nservice/demo-zookeeper-headless   ClusterIP   None 2181/TCP,3888/TCP,2888/TCP   2m21s\n\nNAME                           READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/demo-jenkins   1/1     1            1           2m21s\n\nNAME                                      DESIRED   CURRENT   READY   AGE\nreplicaset.apps/demo-jenkins-64dbd87987   1         1         1       2m21s\n\nNAME                              READY   AGE\nstatefulset.apps/demo-kafka       1/1     2m21s\nstatefulset.apps/demo-zookeeper   1/1     2m21s\n\nHow to Contribute\n\nYou are welcome to try out the plugin and integrate it into your current setup. If you find out any bug or if you would like to request new feature, you can create ticket at JIRA. If you would like to contribute code directly, you can create pull requests in the GitHub page below.\n\nLinks\n\nPhase 2 Demo Video\n\nPhase 2 Presentation Slides\n\nPhase 1 Blog Post\n\nPhase 1 Demo Video\n\nPhase 1 Presentation Slides\n\nRemoting over Apache Kafka plugin source code\n\nProject Page\n\nGitter Channel","title":"Remoting over Apache Kafka 2.0: Built-in Kubernetes support","tags":["remoting","kafka","kubernetes","helm","plugin","gsoc","gsoc2019"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg","srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/77b35/longnguyen.jpg 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/d4a57/longnguyen.jpg 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/68974/longnguyen.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/ef6ff/longnguyen.webp 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/8257c/longnguyen.webp 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/6766a/longnguyen.webp 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/22bfc/longnguyen.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"longngn","html":"<div class=\"paragraph\">\n<p>Long is a Software Engineering student at FPT University, Vietnam. He started to contribute for Jenkins from Google Summer of Code 2019 for the project <a href=\"https://jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Remoting over Apache Kafka with Kubernetes features</a></p>\n</div>","id":"longnguyen","irc":null,"linkedin":null,"name":"Long Nguyen","slug":"/blog/author/longnguyen","twitter":null}]}},{"node":{"date":"2019-07-11T00:00:00.000Z","id":"0f6a7c3f-b06c-5c30-a7c4-31c396c5fecf","slug":"/blog/2019/07/11/remoting-kafka-kubernetes-phase-1/","strippedHtml":"I am Long Nguyen from FPT University, Vietnam. My project for Google Summer of Code 2019 is Remoting over Apache Kafka with Kubernetes features. This is the first time I have contributed for Jenkins and I am very excited to announce the features that have been done in Phase 1.\n\nProject Introduction\n\nCurrent version of Remoting over Apache Kafka plugin requires users to manually configure the entire system which includes Zookeeper, Kafka and remoting agents. It also doesnâ€™t support dynamic agent provisioning so scalability is harder to achieve. My project aims to solve two problems:\n\nOut-of-the-box solution to provision Apache Kafka cluster.\n\nDynamic agent provisioning in a Kubernetes cluster.\n\nCurrent State\n\nKubernetes connector with credentials supported.\n\nApache Kafka provisioning in Kubernetes feature is fully implemented.\n\nHelm chart is partially implemented.\n\nApache Kafka provisioning in Kubernetes\n\nThis feature is part of 2.0 version so it is not yet released officially. You can try out the feature by using the Experimental Update Center to update to 2.0.0-alpha version or building directly from master branch:\n\ngit clone https://github.com/jenkinsci/remoting-kafka-plugin.git\ncd remoting-kafka-plugin/plugin\nmvn hpi:run\n\nOn the Global Configuration page, users can input Kubernetes server information and credentials. Then they can start Apache Kafka with only one button click.\n\nWhen users click Start Kafka on Kubernetes button, Jenkins will create a Kubernetes client from the information and then apply Zookeeper and Kafka YAML specification files from resources.\n\nHelm Chart\n\nHelm chart for Remoting over Apache Kafka plugin is based on stable/jenkins chart and incubator/kafka chart. As of now, the chart is still a Work in Progress because it is still waiting for Cloud API implementation in Phase 2. However, you can check out the demo chart with a single standalone Remoting Kafka Agent:\n\ngit clone -b demo-helm-phase-1 https://github.com/longngn/remoting-kafka-plugin.git\ncd remoting-kafka-plugin\nK8S_NODE=./helm/jenkins-remoting-kafka/do.sh start\n\nThe command do.sh start will do the following steps:\n\nInstall the chart (with Jenkins and Kafka).\n\nLaunch a Kafka computer on Jenkins controller by applying the following JCasC.\n\njenkins:\n  nodes:\n    - permanent:\n        name: \"test\"\n        remoteFS: \"/home/jenkins\"\n        launcher:\n          kafka: {}\n\nLaunch a single Remoting Kafka Agent pod.\n\nYou can check the chart state by running kubectl, for example:\n\n$ kubectl get all -n demo-helm\nNAME                                    READY   STATUS    RESTARTS   AGE\npod/demo-jenkins-998bcdfd4-tjmjs        2/2     Running   0          6m30s\npod/demo-jenkins-remoting-kafka-agent   1/1     Running   0          4m10s\npod/demo-kafka-0                        1/1     Running   0          6m30s\npod/demo-zookeeper-0                    1/1     Running   0          6m30s\n\nNAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE\nservice/demo-0-external           NodePort    10.106.254.187 19092:31090/TCP              6m30s\nservice/demo-jenkins              NodePort    10.101.84.33 8080:31465/TCP               6m31s\nservice/demo-jenkins-agent        ClusterIP   10.97.169.65 50000/TCP                    6m31s\nservice/demo-kafka                ClusterIP   10.106.248.10 9092/TCP                     6m30s\nservice/demo-kafka-headless       ClusterIP   None 9092/TCP                     6m30s\nservice/demo-zookeeper            ClusterIP   10.109.222.63 2181/TCP                     6m30s\nservice/demo-zookeeper-headless   ClusterIP   None 2181/TCP,3888/TCP,2888/TCP   6m31s\n\nNAME                           READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/demo-jenkins   1/1     1            1           6m30s\n\nNAME                                     DESIRED   CURRENT   READY   AGE\nreplicaset.apps/demo-jenkins-998bcdfd4   1         1         1       6m30s\n\nNAME                              READY   AGE\nstatefulset.apps/demo-kafka       1/1     6m30s\nstatefulset.apps/demo-zookeeper   1/1     6m30s\n\nNext Phase Plan\n\nImplement Cloud API to provision Remoting Kafka Agent. ( JENKINS-57668)\n\nIntegrate Cloud API implementation with Helm chart. ( JENKINS-58288)\n\nUnit tests and integration tests.\n\nRelease version 2.0 and address feedbacks. ( JENKINS-58289)\n\nLinks\n\nPhase 1 Demo Video\n\nPhase 1 Presentation Slides\n\nRemoting over Apache Kafka plugin\n\nProject Page\n\nGitter Channel","title":"Remoting over Apache Kafka plugin with Kafka launcher in Kubernetes","tags":["remoting","kafka","kubernetes","helm","developer","gsoc","gsoc2019"],"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg","srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/77b35/longnguyen.jpg 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/d4a57/longnguyen.jpg 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/68974/longnguyen.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/ef6ff/longnguyen.webp 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/8257c/longnguyen.webp 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/6766a/longnguyen.webp 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/22bfc/longnguyen.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"longngn","html":"<div class=\"paragraph\">\n<p>Long is a Software Engineering student at FPT University, Vietnam. He started to contribute for Jenkins from Google Summer of Code 2019 for the project <a href=\"https://jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Remoting over Apache Kafka with Kubernetes features</a></p>\n</div>","id":"longnguyen","irc":null,"linkedin":null,"name":"Long Nguyen","slug":"/blog/author/longnguyen","twitter":null}]}}]}},"pageContext":{"author":"longnguyen","limit":8,"skip":0,"numPages":1,"currentPage":1}},
    "staticQueryHashes": ["3649515864"]}