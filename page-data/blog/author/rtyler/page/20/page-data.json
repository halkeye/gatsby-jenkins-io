{
    "componentChunkName": "component---src-templates-author-blog-list-template-js",
    "path": "/blog/author/rtyler/page/20",
    "result": {"data":{"author":{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"},"allBlog":{"edges":[{"node":{"date":"2010-02-22T00:00:00.000Z","id":"f3a9b5ed-57ae-5584-924b-67bf0b9b498a","slug":"/blog/2010/02/22/hudson-1-347-released/","strippedHtml":"The release of Hudson 1.347 last friday, February 19th, was a relatively \"minor\" one insofar that it contained an assortment of smaller fixes instead of fixes to major regressions (they weren’t any to be fixed) or major features added. There were however some notable commits in this release cycle that didn’t make the changelog just yet, for example https://twitter.com/ godin [godin] committed an ebuild which will allow for a native package of Hudson for Gentoo Linux, joining the ranks of the existing packages for Debian/Ubuntu, FreeBSD, OpenSolaris, openSUSE and RedHat/Fedora Linux. The bundled Subversion plugin was updated and thanks to sogabe and wyukawa the Japanese translations for Hudson got some updates as well.\n\nFor Hudson developers, both plugin and core, this release contains some notable changes from mindless (a.k.a Alan Harder), a number of calls which have been deprecated for over two years have finally been pruned from the code base:\n\nHudson.addListener(JobListener), Hudson.removeListener(JobListener)\n\nEntire listeners.JobListener class (replaced by ItemListener)\n\nOne form of DirectoryBrowser constructor\n\nOne form of Descriptor.configure() (with HttpServletRequest param)\n\nDescriptor.convert(Map) and 4 implementations of this method, and code calling it in Descriptor.readResolve() (this code called save() whenever updating data, so there should be no remaining cases out there)\n\nAlan’s quest for removing deprecated code will likely continue for a while, but this is a good step in the right direction, keeping Hudson’s internals in good working order. Worth mentioning, the influx of plugin releases in the This Week in Plugins from a couple weeks ago, was driven largely by Alan, rummaging through the code of older plugins, updating plugins left and right.\nNow the breakdown for this release:\n\nBugs fixed\n\nFix javascript problem showing test failure detail for test name with a quote character. ( issue 1544)\n\nHudson can incorrectly configure labels for the controller when bleeding edge EC2 plugin is used.\n\nFixed the regression wrt the whitespace trimming caused by 1.346. ( issue 5633)\n\nUnder some circumstances, Hudson can incorrectly delete the temporary directory itself. ( issue 5642)\n\nNewlines in MAVEN_OPTS environment variable can cause problems in other contexts. ( issue 5651)\n\nEnhancements\n\nImproved the form validation mechanism to support multiple controls. ( issue 5610)\n\nAdded message to agent log when it has successfully come online. ( issue 5630)\n\nContributors\n\nThis release of Hudson contained 36 commits from 7 different contributors to \"core\":\n\nabayer\n\nhttps://twitter.com/ godin [godin]\n\nhuybrechts\n\nkohsuke\n\nmindless\n\nsogabe\n\nwyukawa\n\nAs usual, you can go grab the latest .war file straight from hudson-ci.org or if you’re using a native package, use your package manager to upgrade.","title":"Hudson 1.347 Released","tags":["development","feedback","just for fun","links"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-19T00:00:00.000Z","id":"b2019f50-9069-58bc-a953-a153928b72e7","slug":"/blog/2010/02/19/this-week-in-plugins/","strippedHtml":"Last week’s TWIP enumerated the release of 26 different plugin, this past week has seen 19 unique releases in comparison. You might be tempted to assume that less plugin development has occurred over the past week, which isn’t the case. Last week a number of the releases were \"code updates\", i.e. plugins being rebuilt against the latest Hudson plugin API as opposed to new features or bug-fixes. With the releases of plugins this past week, it seems a large number of the releases contained new features and bug fixes, including three new plugins!\n\nMaking their Hudson debut are the following\n\nAgent Monitor for system load average\n\nTool Environment plugin\n\nIvy plugin\n\nIf you’re interested in contributing to an existing plugin, or building your own, I highly recommend checking out the plugin tutorial and joining the dev@ mailing list. That said, here are this week’s releases, starting with last Friday.\n\nFeb 12th, 2010\n\nFile System SCM 1.6 released\n\nJIRA plugin 1.19 released\n\nJob Configuration History Plugin 1.2 released\n\nMSTest plugin 0.6 released\n\nAgent Monitor for system load average 1.1 released\n\nTemplate Project plugin 1.2 released\n\nFeb 13th, 2010\n\nxUnit plugin 0.5.2 released\n\nFeb 14th, 2010\n\nAmazon EC2 plugin 1.6 released\n\nDependency Analyzer Plugin 0.5 released\n\nDocLinks plugin 0.3 released\n\nTool Environment plugin 1.0 released\n\nFeb 15th, 2010\n\nArtifactory Plugin 1.0.6 released\n\nDimensions SCM plugin 0.6.8 released\n\nFeb 16th, 2010\n\nHTML Publisher plugin 0.2.2 released\n\nFeb 17th, 2010\n\nIvy plugin 1.0 released\n\nJBoss Management Plugin 1.0.2 released","title":"This Week in Plugins","tags":["infrastructure","feedback"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-18T00:00:00.000Z","id":"31ee437f-9e98-5ac2-b284-4a71fe1a1813","slug":"/blog/2010/02/18/spotlight-on-visfleet/","strippedHtml":"For this week’s user spotlight, I’m talking to Rasheed Abdul-Aziz of\nVisFleet Ltd. out of New Zealand. This being our second \"spotlight\" on a particular company, the format can still be considered beta; if you have any additional questions for Rasheed, feel free to ask them in the comments and I’ll try to get Rasheed to answer.\n\nSimilar to the spotlight on ITA Software from last week, VisFleet builds business software helping their customers operate their businesses more effectively through web applications in tandem with mobile applications. While I could endlessly discuss the power and flexibility of Hudson, particularly for building web software, I’ll let Rasheed do the majority of the talking, so let’s get to it.\nintroducing VisFleet, would you mind explaining a bit more of what you guys do and some of the challenges it presents?\n\nRasheed It’s a pleasure. VisFleet has changed it’s direction somewhat, moving from\nservices into product development. As we move into product, we want to be\nresponsive to our customers. Agile development is becoming core to how we\noperate, and as such, continuous builds and integration became a major\nfactor. We now plan to offer two products for work planning and and vehicle\ntracking. We want to present these systems with a SaaS model. The world of\nonline, pay as you go software, has a culture of frequent improvements and\nresponsiveness to user feedback. If we want to do well in this space, it’s\nimportant that we can code, test, release and feed back in\ntight iterations.\n\nHudson How long has VisFleet been using Hudson?\n\nRasheed About 14 months now.\n\nHudson Did you guys work with continuous integration prior to starting to use\nHudson? If so, what system was VisFleet using and what compelled the switch\nto\nHudson?\n\nRasheed We didn’t actually, but certainly everyone I knew who was doing continuous\nintegration recommended Hudson.\n\nHudson That’s good to hear! How lucky you are to know so many smart people :)\nWhat kinds of projects is VisFleet building with Hudson?\n\nRasheed We build and test Ruby On Rails service layer applications. We also build Flex applications using the Flex SDK for our web-deployed RIA offering. Lastly, we build our iPhone applications using Hudson.\n\nHudson I’d say building and testing web applications alone with Hudson would be quite notable, but to add Flex and iPhone applications into the mix as well is certainly interesting! Anything specific that’s interesting about VisFleet’s use of Hudson?\n\nRasheed It runs multiple agent types, and automates deploys to different cloud\ninfrastructures. At the moment we have 2 Flex build agents running Ubuntu, A\nMac Mini building our iPhone app, and several Ubuntu Servers testing our web\ntier. We currently deploy to Citrix Xen servers, and soon to Rackspace Cloud as well.\n\nIn the near future, we will automate integration by first updating an\nintegration system on the cloud, deploying our system and then running our\ntests. All very quickly.\n\nWe have very little metric and reporting output from Hudson, and this is\nnoteworthy in it’s absence. It’s very important  to use to provide clear\ndevelopment metrics and integrate those into our Scrum / Kanban approach. What\nHudson has done for us is educate us about the possibilities in\nvisualisation and reporting, and is informing the way we structure our\ncodebase going forward. Soon, we expect to have a premium test driven\ndevelopment environment and workflow.\n\nHudson We all know Hudson isn’t perfect but there’s a lot of room for extending it to meet your demands if need be, what additional tools have you written to glue everything together behind\nthe scenes?\n\nRasheed We are using ' Vlad the Deployer ' and in legacy, ' Capistrano ' for a lot of\nour deployment and build tasks. These are merely infrastructure specific\nscripts to ensure we can bring up live environments in the shortest amount\nof time possible.\n\nHudson So it sounds like you guys are all on board with Hudson, on a 1-10 scale, how important would you rate Hudson’s importance to VisFleet’s workflow?\n\nRasheed 7, aiming at 10. The missing points are just a matter of time :)\n\nThanks again to Rasheed for chatting with me about how Hudson helps VisFleet keep cranking on what they do best. If you would like to discuss your company’s use of Hudson for Continuous Blog, you can contact me at tyler at linux.com\n\nEditor’s Note: Rasheed Abdul-Aziz is a Software Architect at VisFleet Ltd. Rasheed specializes in Flex RIA development, but also loves a good build script and manages Hudson for VisFleet. Find out more about VisFleet and Rasheed on the VisFleet devblog and Rasheed’s blog","title":"Spotlight on: VisFleet","tags":["general","feedback","interview"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-17T00:00:00.000Z","id":"8c069e9b-d471-5bea-86b9-a057759e2c8c","slug":"/blog/2010/02/17/getting-started-building-android-apps-with-hudson/","strippedHtml":"In this post I’ll show a very basic tips on how to compile an Android project using Hudson. Specifically how  I use Hudson to create release versions of my apps.\n\nDebug vs Release\n\nI’m assuming that you are using Eclipse with the ADT plugin. During development you can test your app on the emulator or a device and resources like R.java and aidl files are compiled for you automatically by the plugin. When it’s time to release your app, you’ll need to go through some steps:\n\nYou must sign your app using a certificate\n\nYou must update your AndroidManifest.xml to remove the android:debuggable attribute\n\nReplace your Google Maps API debug key with the one belonging to your release certificate (if you are using a MapView)\n\nGenerate an apk package for the release and test it on a device or emulator\n\nIt would be nice to automate a few of these steps, and this is where Hudson comes in.\n\nAutomated builds: Ant\n\nFor automated builds the Android SDK uses Apache Ant, which Hudson has great support for. To generate a template build.xml you can use the android tool from the SDK using the following command:\n\nandroid create project -n template -t android-7 -p template -k dummy.pkg -a Dummy\n\nThe target is specified as \"android-7\" meaning that we are building for Android 2.1. For apps that use MapView we would use \"Google Inc.:Google APIs:7\". It is a good idea to always target the latest SDK. From this template project we’ll grab the build.properties and the build.xml and copy those to the Android project that we want to build. Edit build.xml and set the project name to your Android project name.\n\nThe local.properties file contains the path to the SDK root and shouldn’t be checked in to version control. For our use we’ll set the properties that are in that file on the Hudson job configuration page.\n\nRunning the build in Hudson\n\nThis part is easy: create a new freestyle job and let it be build with ant. The targets that we want to execute are clean release. Release will compile, package and sign your apk. Now to get this working right, some custom properties should be set (use the Advanced button).\n\nsdk.dir=/Users/hugo/Code/android-sdk-mac\ntarget=Google Inc.:Google APIs:7\nkey.store=certs/rd-release.keystore\nkey.alias=rainydays\nkey.store.password=thisisnotmypassword\nkey.alias.password=thisisnotmypassword\n\nThe sdk.dir should point to the Android SDK root on your Hudson node. In my case I’m running Hudson locally on my machine.  The target property refers to the SDK we want to use as mentioned earlier.  The key. properties are related to signing of the apk. My strategy is to have a separate key store and private key for each application that I develop. I also check that keystore in to SVN. I also archive the -release.apk artifact so that I can download the latest release apk directly from Hudson.  After completing these steps, you should be able to build your Android app with Hudson.\n\nUpdating the AndroidManifest for release\n\n…​But we’re not done yet :) Remember what I said about updating the AndroidManifest.xml? For that we need to edit the build.xml, which by default contains nothing more then a tag to pull in the Android SDK ant target definitions. For my Rainy Days application, I adjusted build.xml like this:\n\n...\n\nRemoving debug attribute from AndroidManifest.xml\n\nSetting release maps key\n\nWhat the above snippet does is removing the android:debuggable attribute from the AndroidManifest.xml and replacing the maps API key in res/layout/maplayout.xml with the correct key for release. The -package-resources target is pulled in from the Android android_rules.xml file.\n\nNow when Hudson builds my app I get a ready to release apk that I can install on my device or emulator, which is pretty nice.\n\nThere is are some issues with this approach however. As you might have noticed:\n\nReplacements are done in the workspace, we are not really building exactly what’s in svn\n\nEach new build should start out fresh for that reason, for example by using the svn revert option.\n\nAdditionally I can not yet tag the release version with the updated files, because the subversion tagging plugin doesn’t support this by design. This could be worked around by adding svn statements in the build.xml however.  For now I don’t really mind as I make minor changes to the resource files, but I’ll be looking at improving this situation.\n\nThings to add: unit testing, coverage…​\n\nOne thing that I’d really like to add is unit testing. This is a little bit more complicated though, since unit tests require a running emulator and a running emulator requires a gui. The Hudson Xvnc plugin could be very helpful here.\n\nThe Android build scripts for test projects already include EMMA output, it shouldn’t be to hard to use the Hudson plugin for that.\n\nWhen Hudson is running on a local machine, the Batch task plugin can automate installing the apk on a device to automate things further.\n\nSummary\n\nBuilding Android applications with Hudson is not that hard, since the builds are based on Ant. By hooking in to the standard Android build targets it’s easy to update files like AndroidManifest.xml which in turn makes sure the release process is controlled and predictable.\nAndroid unit tests depend on the emulator which is a little bit more challenging to set up, but Hudson already has some plugins available to make this easier.\n\nEditor’s Note: Hugo Visser is the developer of Rainy Days and Engine Watch for Android. You can\nfollow him on Twitter and on his blog.","title":"Getting started: Building Android apps with Hudson","tags":["general","guest post","jobs","tutorial"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-16T00:00:00.000Z","id":"d8a54963-98f5-5089-94f4-d01ae20a6094","slug":"/blog/2010/02/16/performance-improvements-in-1-346/","strippedHtml":"From time to time, we get a report of out of memory problems in Hudson. It’s frequent enough that we have a dedicated Wiki page that talks about how to obtain information to help devs work on the problem.\n\nSo the latest thread from David Woon was assumed to be one of those ordinary trouble-shooting sessions, but thanks to Gustaf Lundh, it turned out to be a very interesting exercise.\n\nWhat we discovered was that the profiler I was using ( Your Kit Profiler), was basically eliminating all the weak/soft references from the picture entirely. If we are looking for leaks, this was the right thing, as those references will be cleared before VM chokes with OutOfMemoryError. But because of this elimination, I was completely blind to the wasteful memory usage in Jelly, which are only reachable via soft references.\n\nSo I used Eclipse Memory Analyzer and YJP side by side to look into Jelly’s memory usage, and based on that insight, I was able to substantially improve the memory usage and speed of Jelly.\n\nI monitor my production Hudson deployment with VisualGC, and the result was quite noticable. And I hope you’ll notice that the response from Hudson is also snappier.\n\nAll these changes are a part of the latest 1.346 release.\n\nEditor’s Note: Kohsuke Kawaguchi a senior engineer at Oracle (formerly Sun) and is the founder and author of the Hudson project. To learn more about Kohsuke, you can follow him on Twitter or subscribe to his blog.","title":"Performance improvements in 1.346","tags":["development"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-15T00:00:00.000Z","id":"14568d6a-fed2-5300-b85e-0b16bfc36af4","slug":"/blog/2010/02/15/hudson-1-346-released/","strippedHtml":"After some scrambling earlier in the week to get 1.345 out the door, correcting some regressions in 1.344, the Hudson team still rolled out a 1.346 release last Friday, February 12th, 2010. Similar to the past couple releases, 1.346 had a good number of bug fixes, including a a performance fix when dealing with larger build submissions and a substantial revision of the SCM polling code to fix a long-standing issue with the quiet period blocking the build from running ( issue 2180), there were also some additionally memory improvements made to Jelly, the library with which the majority of Hudson’s web interface is rendered, that Kohsuke will detail in a later post.\n\nHere’s the breakdown:\n\nBugs fixed\n\nMaven modules should not be buildable when the parent project is disabled. ( issue 1375)\n\nFixed the broken quiet period implementation when polling interval is shorter than the quiet period. (Changes in SCM impls are needed for this to take effect.) ( issue 2180)\n\nEscape username in URLs in case it contains special characters such as \"#\". ( issue 2610)\n\nFix sidepanel link for People to be visible and show view-specific info when appropriate. ( issue 5443)\n\nImproved HTML rendering, not using closing tags that do not exist in HTML. ( issue 5458)\n\nShow better error message for missing view type selection when creating a view. ( issue 5469)\n\nHudson wasn’t properly streaming a large external build submission, which can result in OOME and unresponsiveness.\n# Enhancements\n\nUse fixed-width font in text area for shell/batch build steps. ( issue 5471)\n\nUse user selected icon size on People page. ( issue 5447)\n\nSpeed/footprint improvement in the HTML rendering.\n\n# Contributors This release of Hudson contained 37 commits from 3 different contributors to \"core\": * kohsuke * mindless * sogabe\nAs usual, you can go grab the [latest .war file]( http://mirrors.jenkins.io/war-stable/latest/jenkins.war) straight from hudson-ci.org or if you’re using a native package, use your package manager to upgrade. ---- Updated: Added the \"official\" changelog notes","title":"Hudson 1.346 Released","tags":["development","feedback","just for fun","links"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-14T00:00:00.000Z","id":"84b99421-35ba-54b4-ac47-36143a5e7a39","slug":"/blog/2010/02/14/thanks-for-the-help/","strippedHtml":"A great community of developers and users is one of the many things that make Hudson a great tool and a fun project to work with, after launching Continuous Blog as an extensions of that community earlier this week there are some thanks in order to those that helped spread the word about CB and in turn, Hudson. Thanks to:\n\nEverybody on Twitter who retweeted the Continuous Blog launch announcement\n\nJulian Simpson, also known as The Build Doctor for helping spread the word\n\nKevin Farnham for featuring the launch of Continuous Blog on the Java.net home page!\n\nOf course, none of this would be possible without Kohsuke and a large collection of contributors that have made Hudson what it is today.","title":"Thanks for the help!","tags":["core"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"}]}},{"node":{"date":"2010-02-12T00:00:00.000Z","id":"951ade56-1f15-5d62-baf7-28408a9805fb","slug":"/blog/2010/02/12/this-week-in-plugins/","strippedHtml":"Since this is the first \"This Week in Plugins\" (TWiP), I’m trying a fairly basic format out. I’m debating how much information I want to include in these, while I would like to include details on \"what’s changed\" for each plugin over the course of the week, the means of fetching that information would be incredibly tedious (read: no fun) since there’s not particularly any standard meta-data to be scraped from the wiki. Duplicates have been pruned from the list, meaning the latest release of a plugin is what’s being shown; sorting is also by day of release then alphabetical.\n\nFeb 4th, 2010\n\nCodescanner Plug-in 0.9 released\n\nFeb 5th, 2010\n\nCentralized Job(Re)Action 1.1 released\n\nPerformance Publisher plugin 7.95 released\n\nSelenium Auto Exec Server(AES) plugin 0.3 released\n\nFeb 6th, 2010\n\nMSTest plugin 0.5 released\n\nTextFinder plugin 1.8 released\n\nFeb 7th, 2010\n\nConfiguration Slicing plugin 1.16 released\n\nFeb 8th, 2010\n\nClearCase UCM Baseline Plug-in 1.2 released\n\nJoin plugin 1.8 released\n\nFeb 9th, 2010\n\nDownstream-Ext 1.5 released\n\nGroovy Postbuild 1.1 released\n\nFeb 10th, 2010\n\nBatch task plugin 1.13 released\n\ndisk-usage plugin 0.10 released\n\nJBoss Management Plugin 1.0 released\n\nSidebar Link 1.3 released\n\nslave-status 1.4 released\n\nSLOCCount Plug-in 1.4 released\n\nStarTeam plugin 0.2 released\n\nTemplate Project plugin 1.1 released\n\nTuxDroid Plugin 1.6 released\n\nZentimestamp plugin 1.2 released\n\nFeb 11th, 2010\n\nBackup plugin 1.4 released\n\nPromoted Builds (Simple) 1.2 released\n\nPython Plugin 1.1 released\n\nSubversion Plug-in 1.11 released","title":"This Week in Plugins","tags":["infrastructure","feedback"],"authors":[{"avatar":{"childImageSharp":null},"blog":"http://unethicalblogger.com","github":"rtyler","html":"<div class=\"paragraph\">\n<p>R&#46; Tyler Croy has been part of the Jenkins project for the past seven years.\nWhile avoiding contributing any Java code, Tyler is involved in many of the\nother aspects of the project which keep it running, such as this website,\ninfrastructure, governance, etc.</p>\n</div>","id":"rtyler","irc":null,"linkedin":null,"name":"R. Tyler Croy","slug":"blog/author/rtyler","twitter":"agentdero"}]}}]}},"pageContext":{"author":"rtyler","limit":8,"skip":152,"numPages":21,"currentPage":20}},
    "staticQueryHashes": ["3649515864"]}