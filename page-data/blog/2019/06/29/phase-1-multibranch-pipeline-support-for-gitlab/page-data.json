{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2019/06/29/phase-1-multibranch-pipeline-support-for-gitlab/",
    "result": {"data":{"blog":{"html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This is one of the Jenkins project in GSoC 2019. We are working on adding support\nfor <a href=\"/projects/gsoc/2019/gitlab-support-for-multibranch-pipeline/\">Multi-branch\nPipeline Jobs and Folder Organisation in GitLab</a>. The plan is to create the following\nplugins:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/jenkinsci/gitlab-api-plugin\">GitLab API Plugin</a> - Wraps GitLab Java APIs.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/baymac/gitlab-branch-source-plugin\">GitLab Branch Source Plugin</a> - Contains two packages:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>io.jenkins.plugins.gitlabserverconfig</code> - Manages server configuration and web hooks management.\nIdeally should reside inside another plugin with name <code>GitLab Plugin</code>. In future, this package should\nbe moved into a new plugin.</p>\n</li>\n<li>\n<p><code>io.jenkins.plugins.gitlabbranchsource</code> - Adds GitLab Branch Source for Multi-branch Pipeline Jobs (including\nMerge Requests) and Folder organisation.</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"present-state\"><a class=\"anchor\" href=\"#present-state\"></a>Present State</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>FreeStyle Job and Pipeline(Single Branch) Job are fully supported.</p>\n</li>\n<li>\n<p>Multi-branch Pipeline Job is partially supported (no MRs detection).</p>\n</li>\n<li>\n<p>GitLab Folder Organisation is not supported.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"goals-of-this-project\"><a class=\"anchor\" href=\"#goals-of-this-project\"></a>Goals of this project</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Implement a lightweight GitLab Plugin that depends on GitLab API Plugin.</p>\n</li>\n<li>\n<p>Follow convention of 3 separate plugins i.e. <code>GitLab Plugin</code>, <code>GitLab API Plugin</code>, <code>GitLab Branch Source Plugin</code>.</p>\n</li>\n<li>\n<p>Implement GitLab Branch Source Plugin with support for Multi-branch Pipeline Jobs.</p>\n</li>\n<li>\n<p>Support new Jenkins features such as\n<a href=\"https://github.com/jenkinsci/configuration-as-code-plugin\">Jenkins Code as Configuration</a> (JCasC),\n<a href=\"https://github.com/jenkinsci/incrementals-tools/\">Incremental Tools</a>.</p>\n</li>\n<li>\n<p>Clear &amp; Efficient design.</p>\n</li>\n<li>\n<p>Support new SCM Trait APIs.</p>\n</li>\n<li>\n<p>Support Java 8 and above.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"building-the-plugin\"><a class=\"anchor\" href=\"#building-the-plugin\"></a>Building the plugin</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>No binaries are available for this plugin as the plugin is in the very early alpha stage, and not ready for the general\npublic quite yet.  If you want to jump in early, you can try building it yourself from source.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"installation\"><a class=\"anchor\" href=\"#installation\"></a>Installation:</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Checkout source code to your local machine:</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-bash\" data-lang=\"bash\">git clone https://github.com/baymac/gitlab-branch-source-plugin.git\n\ncd gitlab-branch-source-plugin</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Install the plugin:</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-bash\" data-lang=\"bash\">mvn clean install\n\nmvn clean install -DskipTests # to skip tests</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Run the plugin:</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-bash\" data-lang=\"bash\">mvn hpi:run # runs a Jenkins instance at localhost:8080\n\nmvn hpi:run -Djetty.port=&lt;port&gt; # to run on your desired port number</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If you want to test it with your Jenkins server, after <code>mvn clean install</code> follow these steps in your Jenkins instance:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Select <code>Manage Jenkins</code></p>\n</li>\n<li>\n<p>Select <code>Manage Plugins</code></p>\n</li>\n<li>\n<p>Select <code>Advanced</code> tab</p>\n</li>\n<li>\n<p>In <code>Upload Plugin</code> section, select <code>Choose file</code></p>\n</li>\n<li>\n<p>Select <code>$&lt;root_dir&gt;/target/gitlab-branch-source.hpi</code></p>\n</li>\n<li>\n<p>Select <code>Upload</code></p>\n</li>\n<li>\n<p>Select <code>Install without restart</code></p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"usage\"><a class=\"anchor\" href=\"#usage\"></a>Usage</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Assuming plugin installation has done been already.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"setting-up-gitlab-server-configuration-on-jenkins\"><a class=\"anchor\" href=\"#setting-up-gitlab-server-configuration-on-jenkins\"></a>Setting up GitLab Server Configuration on Jenkins</h3>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>On jenkins, select <code>Manage Jenkins</code></p>\n</li>\n<li>\n<p>Select <code>Configure System</code></p>\n</li>\n<li>\n<p>Scroll down to find the <code>GitLab</code> section</p>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/2019/06/2019-06-29-multibranch-pipeline-support-for-gitlab/gitlab-section.png\" alt=\"gitlab-section\"></span></p>\n</div>\n</li>\n<li>\n<p>Select <code>Add GitLab Server</code> | Select <code>GitLab Server</code></p>\n</li>\n<li>\n<p>Now you will now see the GitLab Server Configuration options.</p>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/2019/06/2019-06-29-multibranch-pipeline-support-for-gitlab/gitlab-server.png\" alt=\"gitlab-server\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>There are 4 fields that needs to be configured:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>Name</code> - Plugin automatically generates an unique server name for you. User may want to configure this field\nto suit their needs but should make sure it is sufficiently unique. We recommend to keep it as it is.</p>\n</li>\n<li>\n<p><code>Server URL</code> - Contains the URL to your GitLab Server. By default it is set to \"https://gitlab.com\". User can\nmodify it to enter their GitLab Server URL e.g. <a href=\"https://gitlab.gnome.org/\" class=\"bare\">https://gitlab.gnome.org/</a>, <a href=\"http://gitlab.example.com:7990\" class=\"bare\">http://gitlab.example.com:7990</a>. etc.</p>\n</li>\n<li>\n<p><code>Credentials</code> - Contains a list of credentials entries that are of type GitLab Personal Access Token. When\nno credential has been added it shows \"-none-\". User can add a credential by clicking \"Add\" button.</p>\n</li>\n<li>\n<p><code>Web Hook</code> - This field is a checkbox. If you want the plugin to setup a webhook on your GitLab project(s)\nrelated jobs, check this box. The plugin listens to a URL for the concerned GitLab project(s) and when an event\noccurs in the GitLab Server, the server sends an event trigger to the URL where the web hook is setup. If you\nwant continuous integration (or continuous delivery) on your GitLab project then you may want to automatically\nset it up.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Adding a Personal Access Token Credentials (To automatically generate Personal Access Token see\n<a href=\"#creating-personal-access-token-within-jenkins\">next section</a>):</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>User is required to add a <code>GitLab Personal Access Token</code> type credentials entry to securely persist the token\ninside Jenkins.</p>\n</li>\n<li>\n<p>Generate a <code>Personal Access Token</code> on your GitLab Server:</p>\n<div class=\"olist lowerroman\">\n<ol class=\"lowerroman\" type=\"i\">\n<li>\n<p>Select profile dropdown menu from top-right corner</p>\n</li>\n<li>\n<p>Select <code>Settings</code></p>\n</li>\n<li>\n<p>Select <code>Access Token</code> from left column</p>\n</li>\n<li>\n<p>Enter a name | Set Scope to <code>api</code>,<code>read_user</code>, <code>read_repository</code></p>\n</li>\n<li>\n<p>Select <code>Create Personal Access Token</code></p>\n</li>\n<li>\n<p>Copy the token generated</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Return to Jenkins | Select <code>Add</code> in Credentials field | Select <code>Jenkins</code></p>\n</li>\n<li>\n<p>Set <code>Kind</code> to GitLab Personal Access Token</p>\n</li>\n<li>\n<p>Enter <code>Token</code></p>\n</li>\n<li>\n<p>Enter a unique id in <code>ID</code></p>\n</li>\n<li>\n<p>Enter a human readable description</p>\n</li>\n<li>\n<p>Select <code>Add</code></p>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/2019/06/2019-06-29-multibranch-pipeline-support-for-gitlab/gitlab-credentials.png\" alt=\"gitlab-credentials\"></span></p>\n</div>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Testing connection:</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>Select your desired token in the <code>Credentials</code> dropdown</p>\n</li>\n<li>\n<p>Select <code>Test Connection</code></p>\n</li>\n<li>\n<p>It should return something like <code>Credentials verified for user &lt;username&gt;</code></p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Select <code>Apply</code> (at the bottom)</p>\n</li>\n<li>\n<p>GitLab Server is now setup on Jenkins</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"creating-personal-access-token-within-jenkins\"><a class=\"anchor\" href=\"#creating-personal-access-token-within-jenkins\"></a>Creating Personal Access Token within Jenkins</h3>\n<div class=\"paragraph\">\n<p>Alternatively, users can generate a GitLab Personal Access Token within Jenkins itself and automatically add the\nGitLab Personal Access Token credentials to Jenkins server credentials.</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Select <code>Advanced</code> at the bottom of <code>GitLab</code> Section</p>\n</li>\n<li>\n<p>Select <code>Manage Additional GitLab Actions</code></p>\n</li>\n<li>\n<p>Select <code>Convert login and password to token</code></p>\n</li>\n<li>\n<p>Set the <code>GitLab Server URL</code></p>\n</li>\n<li>\n<p>There are 2 options to generate token;</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p><code>From credentials</code> - To select an already persisting Username Password Credentials or add an Username Password\ncredential to persist it.</p>\n</li>\n<li>\n<p><code>From login and password</code> - If this is a one time thing then you can directly enter you credentials to the text boxes\nand the username/password credential is not persisted.</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>After setting your username/password credential, select <code>Create token credentials</code>.</p>\n</li>\n<li>\n<p>The token creator will create a Personal Access Token in your GitLab Server for the given user with the\nrequired scope and also create a credentials for the same inside Jenkins server. You can go back to the GitLab Server\nConfiguration to select the new credentials generated (select \"-none-\" first then new credentials will appear). For\nsecurity reasons this token is not revealed as plain text rather returns an <code>id</code>. It is a 128-bit long UUID-4 string\n(36 characters).</p>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/2019/06/2019-06-29-multibranch-pipeline-support-for-gitlab/gitlab-token-creator.png\" alt=\"gitlab-token-creator\"></span></p>\n</div>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"configuration-as-code\"><a class=\"anchor\" href=\"#configuration-as-code\"></a>Configuration as Code</h3>\n<div class=\"paragraph\">\n<p>No need for messing around in the UI. <code>Jenkins Configuration as Code (JCasC)</code> or simply <code>Configuration as Code</code> Plugin\nallows you to configure Jenkins via a <code>yaml</code> file. If you are a first time user, you can learn more about JCasC\n<a href=\"https://github.com/jenkinsci/configuration-as-code-plugin\">here</a>.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"add-configuration-yaml\"><a class=\"anchor\" href=\"#add-configuration-yaml\"></a>Add configuration YAML:</h4>\n<div class=\"paragraph\">\n<p>There are multiple ways to load JCasC yaml file to configure Jenkins:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>JCasC by default searches for a file with the name <code>jenkins.yaml</code> in <code>$JENKINS_ROOT</code>.</p>\n</li>\n<li>\n<p>The JCasC looks for an environment variable <code>CASC_JENKINS_CONFIG</code> which contains the path\nfor the configuration <code>yaml</code> file.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>A path to a folder containing a set of config files e.g. <code>/var/jenkins_home/casc_configs</code>.</p>\n</li>\n<li>\n<p>A full path to a single file e.g. <code>/var/jenkins_home/casc_configs/jenkins.yaml</code>.</p>\n</li>\n<li>\n<p>A URL pointing to a file served on the web e.g. <code><a href=\"https://&lt;your-domain&gt;/jenkins.yaml\" class=\"bare\">https://&lt;your-domain&gt;/jenkins.yaml</a></code>.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>You can also set the configuration yaml path in the UI. Go to <code>&lt;your-jenkins-domain&gt;/configuration-as-code</code>.\nEnter path or URL to <code>jenkins.yaml</code> and select <code>Apply New Configuration</code>.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>An example of configuring GitLab server via <code>jenkins.yaml</code>:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-yaml\" data-lang=\"yaml\">credentials:\n  system:\n    domainCredentials:\n      - credentials:\n          - gitlabPersonalAccessToken:\n              scope: SYSTEM\n              id: \"i&lt;3GitLab\"\n              token: \"XfsqZvVtAx5YCph5bq3r\" # gitlab personal access token\n\nunclassified:\n  gitLabServers:\n    servers:\n      - credentialsId: \"i&lt;3GitLab\"\n        manageHooks: true\n        name: \"gitlab.com\"\n        serverUrl: \"https://gitlab.com\"</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>For better security, see handling secrets\n<a href=\"https://github.com/jenkinsci/configuration-as-code-plugin#handling-secrets\">section</a> in JCasC\ndocumentation.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"future-scope-of-work\"><a class=\"anchor\" href=\"#future-scope-of-work\"></a>Future Scope of work</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The second phase of GSoC will be utilized to develop GitLab Branch Source. The new feature is a work in progress, but\nthe codebase is unstable and requires lot of bugfixes. Some features like Multibranch Pipeline Jobs are functioning\nproperly. More about it at the end of second phase.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"issue-tracking\"><a class=\"anchor\" href=\"#issue-tracking\"></a>Issue Tracking</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This project uses Jenkins <a href=\"https://issues.jenkins.io/\">JIRA</a> to track issues. You can file issues under\n<code>gitlab-branch-source-plugin</code> component.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"acknowledgements\"><a class=\"anchor\" href=\"#acknowledgements\"></a>Acknowledgements</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This plugin is built and maintained by the Google Summer of Code (GSoC) Team for\n<a href=\"https://jenkins.io/projects/gsoc/2019/gitlab-support-for-multibranch-pipeline/\">Multi-branch Pipeline\nSupport for GitLab</a>. A lot of inspiration was drawn from <code>GitLab Plugin</code>, <code>Gitea Plugin</code> and <code>GitHub Plugin</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Our team consists of: <a href=\"https://www.github.com/baymac\">baymac</a>, <a href=\"https://github.com/LinuxSuRen\">LinuxSuRen</a>,\n<a href=\"https://github.com/markyjackson-taulia\">Marky</a>, <a href=\"https://github.com/jetersen\">Joseph</a>,\n<a href=\"https://github.com/justinharringa\">Justin</a>, <a href=\"https://github.com/jeffpearce\">Jeff</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>With support from: <a href=\"https://github.com/oleg-nenashev\">Oleg</a>, <a href=\"https://github.com/gmessner\">Greg</a>,\n<a href=\"https://github.com/omehegan\">Owen</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Also thanks to entire Jenkins community for contributing with technical expertise and inspiration.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"links\"><a class=\"anchor\" href=\"#links\"></a>Links</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://www.youtube.com/watch?v=ij6ByZqI67o\">Phase 1 demo</a></p>\n</li>\n<li>\n<p><a href=\"https://drive.google.com/open?id=1c3UWwEb5rDmO6YEn5fU3qVbVW-opuUXb\">Presentation slides</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/gitlab-api-plugin\">GitLab API Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/baymac/gitlab-branch-source-plugin\">GitLab Branch Source Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://wiki.jenkins.io/display/JENKINS/GitLab+API+Plugin\">GitLab API Plugin Wiki</a></p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-57445\">Issue Tracker for Phase 1</a></p>\n</li>\n<li>\n<p><a href=\"https://baymac.github.io\">Blog</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","id":"7b06e02e-ca3c-5b58-8850-3e214fd8268e","title":"Multi-branch Pipeline Jobs Support for GitLab SCM","date":"2019-06-29T00:00:00.000Z","slug":"/blog/2019/06/29/phase-1-multibranch-pipeline-support-for-gitlab/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/20305/baymac.jpg","srcSet":"/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/eb017/baymac.jpg 32w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/ed0e7/baymac.jpg 64w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/20305/baymac.jpg 128w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/b3c75/baymac.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/bcdad/baymac.webp 32w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/21187/baymac.webp 64w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/33025/baymac.webp 128w,\n/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/d386c/baymac.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":192}},"publicURL":"/gatsby-jenkins-io/static/f0b1fd16f8bec9a14b57a0b0108486f1/baymac.jpg"},"blog":null,"github":"baymac","html":"<div class=\"paragraph\">\n<p>GSoC 2019 student under Jenkins project. Maintainer of GitLab Branch Source Plugin. Software Developer at Udaan, India.</p>\n</div>","id":"baymac","irc":null,"linkedin":"parichay.barpanda","name":"Parichay Barpanda","slug":"/blog/authors/baymac/","twitter":"baymac04"}]}},"pageContext":{"id":"7b06e02e-ca3c-5b58-8850-3e214fd8268e"}},
    "staticQueryHashes": ["1271460761","3649515864"]}