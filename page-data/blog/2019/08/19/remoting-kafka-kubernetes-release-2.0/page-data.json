{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2019/08/19/remoting-kafka-kubernetes-release-2.0/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>I am Long Nguyen from <a href=\"https://international.fpt.edu.vn/\">FPT University</a>, Vietnam. My project for Google Summer of Code 2019 is <a href=\"/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Remoting over Apache Kafka with Kubernetes features</a>. After a successful <a href=\"/blog/2019/07/11/remoting-kafka-kubernetes-phase-1/\">Phase 1</a>, finally the 2.0 version of the plugin has been released. The 2.0 version provides seamless integration with Kubernetes environment.</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"2-0-version-features\"><a class=\"anchor\" href=\"#2-0-version-features\"></a>2.0 version features</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Start a simple Apache Kafka server in Kubernetes.</p>\n</li>\n<li>\n<p>Dynamically provision Remoting Kafka Agent in Kubernetes.</p>\n</li>\n<li>\n<p>Helm chart to bootstrap the whole system in Kubernetes.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"start-a-simple-apache-kafka-server-in-kubernetes\"><a class=\"anchor\" href=\"#start-a-simple-apache-kafka-server-in-kubernetes\"></a>Start a simple Apache Kafka server in Kubernetes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Use of the plugin requires that users have a configured Apache Zookeeper and Apache Kafka server, which could be intimidating for people who just want to try out the plugin. Now, users can start a simple, single-node Apache Kafka server in Kubernetes environment with just one button click.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/remoting-kafka/kafka-provisioning-kubernetes-ui.png\" alt=\"Apache Kafka provisioning in Kubernetes UI\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>On the Global Configuration page, users can input Kubernetes server information and credentials. When users click <code>Start Kafka on Kubernetes</code> button, Jenkins will create a Kubernetes client from the information and then apply Apache Zookeeper and Apache Kafka YAML specification files from <code>resources</code>. After downloading images and creating containers, it will automatically update Apache Zookeeper and Apache Kafka URLs into respective fields.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"dynamically-provision-remoting-kafka-agent-in-kubernetes\"><a class=\"anchor\" href=\"#dynamically-provision-remoting-kafka-agent-in-kubernetes\"></a>Dynamically provision Remoting Kafka Agent in Kubernetes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>With previous version, users have to manually add/remove nodes so it is hard to scale builds quickly. <a href=\"https://plugins.jenkins.io/kubernetes\">Kubernetes plugin</a> allows us to dynamically provision agents in Kubernetes but it is designed for JNLP agent. With this new version, Remoting Kafka agent can also be provisioned automatically in Kubernetes environment.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/remoting-kafka/cloud-ui.png\" alt=\"Remoting Kafka Cloud UI\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Users can find the new feature in Cloud section in <code>/configure</code>. Here users could input Kubernetes connection parameters and desired Remoting Kafka agent properties including labels. When new build with matching labels gets started and there are no free nodes, Cloud will automatically provision Remoting Kafka agent pod in Kubernetes to run the build.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/remoting-kafka/cloud-nodes.png\" alt=\"Remoting Kafka Agent get provisioned\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"helm-chart\"><a class=\"anchor\" href=\"#helm-chart\"></a>Helm Chart</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Helm chart for Remoting over Apache Kafka plugin is based on <a href=\"https://github.com/helm/charts/tree/master/stable/jenkins\">stable/jenkins</a> chart and <a href=\"https://github.com/helm/charts/tree/master/incubator/kafka\">incubator/kafka</a> chart. You can follow the instruction <a href=\"https://github.com/jenkinsci/remoting-kafka-plugin/blob/master/README.md\">here</a> to install a demo ready-to-use Helm release. Your <code>kubectl get all</code> should look like this:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-bash\" data-lang=\"bash\">NAME                                READY   STATUS    RESTARTS   AGE\npod/demo-jenkins-64dbd87987-bmndf   1/1     Running   0          2m21s\npod/demo-kafka-0                    1/1     Running   0          2m21s\npod/demo-zookeeper-0                1/1     Running   0          2m21s\n\nNAME                              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE\nservice/demo-jenkins              NodePort    10.108.238.56   &lt;none&gt;        8080:30386/TCP               2m21s\nservice/demo-jenkins-agent        ClusterIP   10.98.85.184    &lt;none&gt;        50000/TCP                    2m21s\nservice/demo-kafka                ClusterIP   10.109.231.58   &lt;none&gt;        9092/TCP                     2m21s\nservice/demo-kafka-headless       ClusterIP   None            &lt;none&gt;        9092/TCP                     2m21s\nservice/demo-zookeeper            ClusterIP   10.103.2.231    &lt;none&gt;        2181/TCP                     2m21s\nservice/demo-zookeeper-headless   ClusterIP   None            &lt;none&gt;        2181/TCP,3888/TCP,2888/TCP   2m21s\n\nNAME                           READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/demo-jenkins   1/1     1            1           2m21s\n\nNAME                                      DESIRED   CURRENT   READY   AGE\nreplicaset.apps/demo-jenkins-64dbd87987   1         1         1       2m21s\n\nNAME                              READY   AGE\nstatefulset.apps/demo-kafka       1/1     2m21s\nstatefulset.apps/demo-zookeeper   1/1     2m21s</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"how-to-contribute\"><a class=\"anchor\" href=\"#how-to-contribute\"></a>How to Contribute</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>You are welcome to try out the plugin and integrate it into your current setup. If you find out any bug or if you would like to request new feature, you can create ticket at <a href=\"https://issues.jenkins.io/issues/?jql=project+%3D+JENKINS+AND+component+%3D+remoting-kafka-plugin\">JIRA</a>. If you would like to contribute code directly, you can create pull requests in the GitHub page below.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"links\"><a class=\"anchor\" href=\"#links\"></a>Links</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://youtu.be/tnoObQqGhyM?t=2368\">Phase 2 Demo Video</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.google.com/presentation/d/1BN2lUcI5UweN2pumAu2m4XHIVXQw6ujzeO9Fbage3ys/edit?usp=sharing\">Phase 2 Presentation Slides</a></p>\n</li>\n<li>\n<p><a href=\"https://jenkins.io/blog/2019/07/11/remoting-kafka-kubernetes-phase-1/\">Phase 1 Blog Post</a></p>\n</li>\n<li>\n<p><a href=\"https://youtu.be/MDs0Vr7gnnA?t=2601\">Phase 1 Demo Video</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.google.com/presentation/d/1yIPwwL7P051XaSE2EOJYAtbVsd6YvGvvKp9QcJE4J1Y/edit?usp=sharing\">Phase 1 Presentation Slides</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/remoting-kafka-plugin\">Remoting over Apache Kafka plugin source code</a></p>\n</li>\n<li>\n<p><a href=\"https://jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Project Page</a></p>\n</li>\n<li>\n<p><a href=\"https://gitter.im/jenkinsci/remoting\">Gitter Channel</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","id":"a8a6f50d-13d8-5ff0-b148-cd0ef7696ecf","title":"Remoting over Apache Kafka 2.0: Built-in Kubernetes support","date":"2019-08-19T00:00:00.000Z","slug":"/blog/2019/08/19/remoting-kafka-kubernetes-release-2.0/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg","srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/77b35/longnguyen.jpg 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/d4a57/longnguyen.jpg 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/68974/longnguyen.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/ef6ff/longnguyen.webp 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/8257c/longnguyen.webp 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/6766a/longnguyen.webp 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/22bfc/longnguyen.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}}},"blog":null,"github":"longngn","html":"<div class=\"paragraph\">\n<p>Long is a Software Engineering student at FPT University, Vietnam. He started to contribute for Jenkins from Google Summer of Code 2019 for the project <a href=\"https://jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Remoting over Apache Kafka with Kubernetes features</a></p>\n</div>","id":"longnguyen","irc":null,"linkedin":null,"name":"Long Nguyen","slug":"/blog/author/longnguyen","twitter":null}]}},"pageContext":{"next":"/blog/2019/08/22/devops-world/","previous":"/blog/2019/08/16/folder-auth-plugin/","id":"a8a6f50d-13d8-5ff0-b148-cd0ef7696ecf"}},
    "staticQueryHashes": ["1271460761","3649515864"]}