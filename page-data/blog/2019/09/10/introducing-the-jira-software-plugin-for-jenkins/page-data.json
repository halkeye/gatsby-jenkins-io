{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2019/09/10/introducing-the-jira-software-plugin-for-jenkins/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>According to a <a href=\"https://www.atlassian.com/blog/software-teams/modern-software-development-trends\">recent survey</a> we conducted, software &amp; IT teams on average use 4+ tools to move code from development to customer-facing production. As a result, teams struggle with keeping the status of work updated and understanding the overall health of their delivery pipeline.</p>\n</div>\n<div class=\"paragraph\">\n<p>To solve this problem, I am excited to announce that we built <a href=\"https://plugins.jenkins.io/atlassian-jira-software-cloud\">an official Jenkins plugin for Jira Software Cloud</a>. The plugin automatically associates build and deployment information from Jenkins with relevant Jira issues and exposes key information about your pipeline across Jira issues, boards and via JQL. This means you can use Jira Software to automatically update and track issues through your complete development pipeline, from backlog to release.</p>\n</div>\n<div class=\"paragraph\">\n<p>I hope this plugin adds value to you and your team. If you are interested in contributing or forking this plug-in you can head over to our project on the <a href=\"https://github.com/jenkinsci/atlassian-jira-software-cloud-plugin\">Jenkins GitHub repo to get started</a>.</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"better-collaboration-between-teams\"><a class=\"anchor\" href=\"#better-collaboration-between-teams\"></a>Better collaboration between teams</h2>\n<div class=\"sectionbody\">\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/introducing-the-jira-software-plugin-for-jenkins/dev-tools-ticketview.png\" alt=\"Use Jenkins build information in Jira Software to create a workflow between QA and developers and create a rapid feedback loop for testing at any point in your development process.\" width=\"800\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This new information view is so powerful because historically it was dispersed across multiple tools only accessible to a few members of your team. Now anyone involved in the software delivery process can self-serve this information. For example, product managers, QA, and support teams can view which features have been deployed to customers and which are still waiting in staging environments.</p>\n</div>\n<div class=\"paragraph\">\n<p>With better information sharing between tools in your delivery stack, you can also improve cross-collaboration between teams. Teams such as QA and operations can collaborate in the software teams next sprint. For example, you can use build information in Jira Software to create a workflow between QA and developers and create a rapid feedback loop for testing at any point in your development process.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"use-jiras-querying-language-for-advanced-views\"><a class=\"anchor\" href=\"#use-jiras-querying-language-for-advanced-views\"></a>Use Jira’s Querying Language for advanced views</h2>\n<div class=\"sectionbody\">\n<div class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/post-images/introducing-the-jira-software-plugin-for-jenkins/jql.png\" alt=\"Build powerful views into your development pipeline with support for JQL.\" width=\"800\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>In addition to building better ways to collaborate, these integrations also give your team deeper insight into the development pipeline from within Jira Software. You can now create powerful views into your delivery pipeline <a href=\"https://confluence.atlassian.com/jirasoftwarecloud/advanced-searching-developer-reference-967312910.html\">with JQL queries across multiple connected tools</a>. For example, you can write a custom JQL query to report all Jira issues that have been deployed to production but still have an open PR.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code>deploymentEnvironmentType ~ “production“ AND development[pullrequests].open</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"get-started\"><a class=\"anchor\" href=\"#get-started\"></a>Get started</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><strong>In Jira Software Cloud</strong></p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Create OAuth credentials in Jira for Jenkins</strong></p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Navigate to <strong>Jira home &gt; Jira settings &gt; Apps</strong>.</p>\n</li>\n<li>\n<p>Select <strong>OAuth credentials</strong>.</p>\n</li>\n<li>\n<p>Select <strong>Create credentials</strong>.</p>\n</li>\n<li>\n<p>Enter the following details:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><em>App name</em> - Jenkins</p>\n</li>\n<li>\n<p><em>App logo</em> - A URL to the Jenkins logo, which will be used as an icon in the list of credentials. Eg: <a href=\"https://jenkins.yourcompany.com/logo.png\" class=\"bare\">https://jenkins.yourcompany.com/logo.png</a></p>\n</li>\n<li>\n<p>Server base URL - The URL to your Jenkins server. Eg: <a href=\"https://jenkins.yourcompany.com\" class=\"bare\">https://jenkins.yourcompany.com</a></p>\n</li>\n</ul>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><strong>In Jenkins</strong></p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Install the Jenkins plugin</strong></p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Login to your Jenkins server and navigate to the Plugin Manager.</p>\n</li>\n<li>\n<p>Select the 'Available' tab and search for 'Atlassian Jira Software Cloud' as the plugin name then install it.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The open-source plugin is hosted in the Jenkins GitHub account. <a href=\"https://github.com/jenkinsci/atlassian-jira-software-cloud-plugin\">You can check it out here</a>.</p>\n</li>\n</ul>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><strong>Set up Jenkins credentials</strong></p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>In Jenkins, go to <strong>Manage Jenkins &gt; Configure System</strong> screen and scroll to the Jira Software Cloud integration section.</p>\n</li>\n<li>\n<p>Select <strong>Add Jira Cloud Site &gt; Jira Cloud Site</strong>. The <em>Site name</em>, <em>ClientID</em>, and <em>Secret</em> fields display.</p>\n</li>\n<li>\n<p>Enter the following details:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Site name: The URL for your Jira Cloud site, for example yourcompany.atlassian.net.</p>\n</li>\n<li>\n<p>Client ID: Copy from <strong>OAuth credentials</strong> screen (Client ID column).</p>\n</li>\n<li>\n<p>Secret: Select Add &gt; Jenkins.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>For <em>Kind</em>, select <strong>Secret text</strong>.</p>\n</li>\n<li>\n<p>For <em>Secret</em>, copy from <strong>OAuth credentials</strong> screen (Secret column).</p>\n</li>\n<li>\n<p>For <em>Description</em>, provide a helpful description</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Select Test settings to make sure your credentials are valid for your Jira site.</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"how-to-use-the-plugin\"><a class=\"anchor\" href=\"#how-to-use-the-plugin\"></a>How to use the plugin</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><strong>To start using the integration:</strong></p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Go into a specific pipeline in Jenkins ( Note: Your pipeline must be a 'Multibranch Pipeline' ).</p>\n</li>\n<li>\n<p>From the left-hand menu, select <strong>Pipeline Syntax</strong>.</p>\n</li>\n<li>\n<p>In the Snippet Generator, select <strong>jiraSendDeploymentInfo</strong> or <strong>jiraSendBuildInfo</strong> from the dropdown list of Sample Steps and fill in the relevant details.</p>\n</li>\n<li>\n<p>Select <strong>Generate Pipeline Script</strong> and copy/paste the output into your <em>Jenkinsfile</em> on the relevant Repository you are using. This will be used to notify Jira when you run that pipeline on that repo.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><strong>For sending build information</strong></p>\n</div>\n<div class=\"paragraph\">\n<p>This is an example snippet of a very simple ‘build’ stage set up in a <em>Jenkinsfile</em>. After the pipeline is run, it will post the build information to your Jira Cloud site by looking at the branch name. If there is a Jira issue key (e.g. “TEST-123”) in the branch name, it will send the data over to Jira.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Jenkinsfile example</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">pipeline {\n     agent any\n     stages {\n         stage('Build') {\n             steps {\n                 echo 'Building...'\n             }\n             post {\n                 always {\n                     jiraSendBuildInfo site: 'example.atlassian.net'\n                 }\n             }\n         }\n     }\n }</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>For sending deployment information</strong></p>\n</div>\n<div class=\"paragraph\">\n<p>This is an example snippet of two stages that run on any change to the staging or master branch. Again, we use a post step to send deployment data to Jira and the relevant issues. Here, the <strong>environmentId</strong>, <strong>environmentName</strong>, and <strong>environmentType</strong> need to be set to whatever you want to appear in Jira.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Jenkinsfile example</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">pipeline {\n     agent any\n     stages {\n         stage('Deploy - Staging') {\n             when {\n                 branch 'master'\n             }\n             steps {\n                 echo 'Deploying to Staging from master...'\n             }\n             post {\n                 always {\n                     jiraSendDeploymentInfo site: 'example.atlassian.net', environmentId: 'us-stg-1', environmentName: 'us-stg-1', environmentType: 'staging'\n                 }\n             }\n         }\n         stage('Deploy - Production') {\n            when {\n                branch 'master'\n            }\n            steps {\n                echo 'Deploying to Production from master...'\n            }\n            post {\n                always {\n                    jiraSendDeploymentInfo site: 'example.atlassian.net', environmentId: 'us-prod-1', environmentName: 'us-prod-1', environmentType: 'production'\n                }\n            }\n         }\n     }\n }</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The entire <em>Jenkinsfile</em> may look something like this. This is only meant to represent an example of what the Jira snippets could look like within a stage or step.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>Jenkinsfile example</strong></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-groovy\" data-lang=\"groovy\">pipeline {\n     agent any\n     stages {\n         stage('Build') {\n             steps {\n                 echo 'Building...'\n             }\n             post {\n                 always {\n                     jiraSendBuildInfo site: 'example.atlassian.net'\n                 }\n             }\n         }\n         stage('Deploy - Staging') {\n             when {\n                 branch 'master'\n             }\n             steps {\n                 echo 'Deploying to Staging from master...'\n             }\n             post {\n                 always {\n                     jiraSendDeploymentInfo site: 'example.atlassian.net', environmentId: 'us-stg-1', environmentName: 'us-stg-1', environmentType: 'staging'\n                 }\n             }\n         }\n         stage('Deploy - Production') {\n            when {\n                branch 'master'\n            }\n            steps {\n                echo 'Deploying to Production from master...'\n            }\n            post {\n                always {\n                    jiraSendDeploymentInfo site: 'example.atlassian.net', environmentId: 'us-prod-1', environmentName: 'us-prod-1', environmentType: 'production'\n                }\n            }\n         }\n     }\n }</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"questions-or-feedback\"><a class=\"anchor\" href=\"#questions-or-feedback\"></a>Questions or feedback?</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>If you have any questions, please contact <a href=\"https://support.atlassian.com/contact/\">Atlassian support</a> and they will route it to the correct team to help you.</p>\n</div>\n</div>\n</div>","id":"d5e0f766-e02d-50ec-a790-2201ba4d74b9","title":"Introducing the Jira Software plugin for Jenkins","date":"2019-09-10T00:00:00.000Z","slug":"/blog/2019/09/10/introducing-the-jira-software-plugin-for-jenkins/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"rafalmyslek","html":"","id":"rafalmyslek","irc":null,"linkedin":null,"name":"Rafal Myslek","slug":"/blog/authors/rafalmyslek","twitter":null}]}},"pageContext":{"id":"d5e0f766-e02d-50ec-a790-2201ba4d74b9"}},
    "staticQueryHashes": ["1271460761","3649515864"]}