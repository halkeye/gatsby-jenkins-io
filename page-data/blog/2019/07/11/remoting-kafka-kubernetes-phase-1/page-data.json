{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2019/07/11/remoting-kafka-kubernetes-phase-1/",
    "result": {"data":{"blog":{"html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>I am Long Nguyen from FPT University, Vietnam. My project for Google Summer of Code 2019 is <a href=\"https://jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Remoting over Apache Kafka with Kubernetes features</a>. This is the first time I have contributed for Jenkins and I am very excited to announce the features that have been done in Phase 1.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"project-introduction\"><a class=\"anchor\" href=\"#project-introduction\"></a>Project Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Current version of <a href=\"https://github.com/jenkinsci/remoting-kafka-plugin\">Remoting over Apache Kafka plugin</a> requires users to manually configure the entire system which includes Zookeeper, Kafka and remoting agents. It also doesn&#8217;t support dynamic agent provisioning so scalability is harder to achieve. My project aims to solve two problems:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Out-of-the-box solution to provision Apache Kafka cluster.</p>\n</li>\n<li>\n<p>Dynamic agent provisioning in a Kubernetes cluster.</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"current-state\"><a class=\"anchor\" href=\"#current-state\"></a>Current State</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Kubernetes connector with credentials supported.</p>\n</li>\n<li>\n<p>Apache Kafka provisioning in Kubernetes feature is fully implemented.</p>\n</li>\n<li>\n<p>Helm chart is partially implemented.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"apache-kafka-provisioning-in-kubernetes\"><a class=\"anchor\" href=\"#apache-kafka-provisioning-in-kubernetes\"></a>Apache Kafka provisioning in Kubernetes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This feature is part of 2.0 version so it is not yet released officially. You can try out the feature by using the <a href=\"https://jenkins.io/doc/developer/publishing/releasing-experimental-updates/\">Experimental Update Center</a> to update to <code>2.0.0-alpha</code> version or building directly from master branch:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-bash\" data-lang=\"bash\">git clone https://github.com/jenkinsci/remoting-kafka-plugin.git\ncd remoting-kafka-plugin/plugin\nmvn hpi:run</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>On the Global Configuration page, users can input Kubernetes server information and credentials. Then they can start Apache Kafka with only one button click.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/remoting-kafka/kafka-provisioning-kubernetes-ui.png\" alt=\"Kafka provisioning in Kubernetes UI\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>When users click <code>Start Kafka on Kubernetes</code> button, Jenkins will create a Kubernetes client from the information and then apply Zookeeper and Kafka YAML specification files from <code>resources</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/remoting-kafka/kafka-provisioning-kubernetes-architecture.png\" alt=\"Kafka provisioning in Kubernetes architecture\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"helm-chart\"><a class=\"anchor\" href=\"#helm-chart\"></a>Helm Chart</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Helm chart for Remoting over Apache Kafka plugin is based on <a href=\"https://github.com/helm/charts/tree/master/stable/jenkins\">stable/jenkins</a> chart and <a href=\"https://github.com/helm/charts/tree/master/incubator/kafka\">incubator/kafka</a> chart. As of now, the chart is still a <a href=\"https://github.com/jenkinsci/remoting-kafka-plugin/pull/62\">Work in Progress</a> because it is still waiting for Cloud API implementation in Phase 2. However, you can check out the demo chart with a single standalone Remoting Kafka Agent:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-bash\" data-lang=\"bash\">git clone -b demo-helm-phase-1 https://github.com/longngn/remoting-kafka-plugin.git\ncd remoting-kafka-plugin\nK8S_NODE=&lt;your Kubernetes node IP&gt; ./helm/jenkins-remoting-kafka/do.sh start</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The command <code>do.sh start</code> will do the following steps:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Install the chart (with Jenkins and Kafka).</p>\n</li>\n<li>\n<p>Launch a Kafka computer on Jenkins controller by applying the following JCasC.</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-yaml\" data-lang=\"yaml\">jenkins:\n  nodes:\n    - permanent:\n        name: \"test\"\n        remoteFS: \"/home/jenkins\"\n        launcher:\n          kafka: {}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Launch a single Remoting Kafka Agent pod.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>You can check the chart state by running <code>kubectl</code>, for example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-bash\" data-lang=\"bash\">$ kubectl get all -n demo-helm\nNAME                                    READY   STATUS    RESTARTS   AGE\npod/demo-jenkins-998bcdfd4-tjmjs        2/2     Running   0          6m30s\npod/demo-jenkins-remoting-kafka-agent   1/1     Running   0          4m10s\npod/demo-kafka-0                        1/1     Running   0          6m30s\npod/demo-zookeeper-0                    1/1     Running   0          6m30s\n\nNAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE\nservice/demo-0-external           NodePort    10.106.254.187   &lt;none&gt;        19092:31090/TCP              6m30s\nservice/demo-jenkins              NodePort    10.101.84.33     &lt;none&gt;        8080:31465/TCP               6m31s\nservice/demo-jenkins-agent        ClusterIP   10.97.169.65     &lt;none&gt;        50000/TCP                    6m31s\nservice/demo-kafka                ClusterIP   10.106.248.10    &lt;none&gt;        9092/TCP                     6m30s\nservice/demo-kafka-headless       ClusterIP   None             &lt;none&gt;        9092/TCP                     6m30s\nservice/demo-zookeeper            ClusterIP   10.109.222.63    &lt;none&gt;        2181/TCP                     6m30s\nservice/demo-zookeeper-headless   ClusterIP   None             &lt;none&gt;        2181/TCP,3888/TCP,2888/TCP   6m31s\n\nNAME                           READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/demo-jenkins   1/1     1            1           6m30s\n\nNAME                                     DESIRED   CURRENT   READY   AGE\nreplicaset.apps/demo-jenkins-998bcdfd4   1         1         1       6m30s\n\nNAME                              READY   AGE\nstatefulset.apps/demo-kafka       1/1     6m30s\nstatefulset.apps/demo-zookeeper   1/1     6m30s</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"next-phase-plan\"><a class=\"anchor\" href=\"#next-phase-plan\"></a>Next Phase Plan</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Implement Cloud API to provision Remoting Kafka Agent. (<a href=\"https://issues.jenkins.io/browse/JENKINS-57668\">JENKINS-57668</a>)</p>\n</li>\n<li>\n<p>Integrate Cloud API implementation with Helm chart. (<a href=\"https://issues.jenkins.io/browse/JENKINS-58288\">JENKINS-58288</a>)</p>\n</li>\n<li>\n<p>Unit tests and integration tests.</p>\n</li>\n<li>\n<p>Release version 2.0 and address feedbacks. (<a href=\"https://issues.jenkins.io/browse/JENKINS-58289\">JENKINS-58289</a>)</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"links\"><a class=\"anchor\" href=\"#links\"></a>Links</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://youtu.be/MDs0Vr7gnnA?t=2601\">Phase 1 Demo Video</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.google.com/presentation/d/1yIPwwL7P051XaSE2EOJYAtbVsd6YvGvvKp9QcJE4J1Y/edit?usp=sharing\">Phase 1 Presentation Slides</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/remoting-kafka-plugin\">Remoting over Apache Kafka plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Project Page</a></p>\n</li>\n<li>\n<p><a href=\"https://gitter.im/jenkinsci/remoting\">Gitter Channel</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","id":"0f6a7c3f-b06c-5c30-a7c4-31c396c5fecf","title":"Remoting over Apache Kafka plugin with Kafka launcher in Kubernetes","date":"2019-07-11T00:00:00.000Z","slug":"/blog/2019/07/11/remoting-kafka-kubernetes-phase-1/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg","srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/77b35/longnguyen.jpg 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/d4a57/longnguyen.jpg 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/19e71/longnguyen.jpg 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/68974/longnguyen.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/ef6ff/longnguyen.webp 32w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/8257c/longnguyen.webp 64w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/6766a/longnguyen.webp 128w,\n/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/22bfc/longnguyen.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":128}},"publicURL":"/gatsby-jenkins-io/static/1100ce9c7d4d77539be043dff3d058aa/longnguyen.jpg"},"blog":null,"github":"longngn","html":"<div class=\"paragraph\">\n<p>Long is a Software Engineering student at FPT University, Vietnam. He started to contribute for Jenkins from Google Summer of Code 2019 for the project <a href=\"https://jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/\">Remoting over Apache Kafka with Kubernetes features</a></p>\n</div>","id":"longnguyen","irc":null,"linkedin":null,"name":"Long Nguyen","slug":"/blog/authors/longnguyen","twitter":null}]}},"pageContext":{"id":"0f6a7c3f-b06c-5c30-a7c4-31c396c5fecf"}},
    "staticQueryHashes": ["1271460761","3649515864"]}