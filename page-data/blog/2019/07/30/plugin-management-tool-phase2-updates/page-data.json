{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2019/07/30/plugin-management-tool-phase2-updates/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p>At end of the first <a href=\"https://summerofcode.withgoogle.com/\">GSoC</a> phase, I\n<a href=\"/blog/2019/07/02/plugin-management-tool-alpha-release/\">announced\nthe first alpha release</a> of the CLI tool and library that will help centralize\nplugin management and make plugin tooling easier.</p>\n</div>\n<div class=\"paragraph\">\n<p>Phase 2 has mainly been focused on improving upon the initial CLI and library written\nin Coding Phase 1. In particular, we&#8217;ve been focusing on getting the tool ready to\nincorporate into the Jenkins Docker Image to replace the\n<a href=\"https://github.com/jenkinsci/docker/blob/master/install-plugins.sh\">install-plugins.sh bash script</a>\nto download plugins.  This work included parsing improvements so that blank lines and comments in the\nplugins.txt file are filtered out, allowing update centers and the plugin download\ndirectory to be set via environment variables or CLI Options, creating Windows\ncompatible defaults, and fixing a bug in which dependencies for specific\nplugin versions were not always getting resolved correctly.</p>\n</div>\n<div class=\"paragraph\">\n<p>In parallel to getting the tool ready for Jenkins Docker integration, Phase 2 saw\nthe addition of several new features.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"yaml-input\"><a class=\"anchor\" href=\"#yaml-input\"></a>Yaml Input</h3>\n<div class=\"paragraph\">\n<p>In addition to specifying the plugins they want to download via the <code>--plugins</code>\nCLI option or through a .txt file, users can now use a Jenkins yaml file with a\n<code>plugins</code> root element.</p>\n</div>\n<div class=\"paragraph\">\n<p>Say goodbye to the days of specifying incremental\nplugins like <code>incrementals;org.jenkins-ci.plugins.workflow;2.20-rc530.b4f7f7869384</code> -\n  you can enter the artifactId, groupId, and version to specify an incremental plugin.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/gsoc-plugin-management-tool/yamlexample.png\" alt=\"Yaml Input Example\">\n</div>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/gsoc-plugin-management-tool/yamlcli.png\" alt=\"Yaml CLI Example\">\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"making-the-download-process-more-transparent\"><a class=\"anchor\" href=\"#making-the-download-process-more-transparent\"></a>Making the Download Process More Transparent</h3>\n<div class=\"paragraph\">\n<p>Previously, the plugin download process was not very transparent to users - it was\ndifficult to know the final set of plugins that would be downloaded after pulling in\nall the dependencies.  Instead of determing the set of plugins that will be downloaded\nat the time of download, users now have the option to see the full set of plugins\nand their versions that will be downloaded in advance. With the <code>--list</code> CLI\noption, users can see all currently downloaded and bundled plugins, the set of all\nplugins that will be downloaded, and the effective plugin set - the set of all\nplugins that are already downloaded or will be downloaded.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/gsoc-plugin-management-tool/listplugins.png\" alt=\"List CLI Option Example\">\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"viewing-information-about-plugins\"><a class=\"anchor\" href=\"#viewing-information-about-plugins\"></a>Viewing Information About plugins</h3>\n<div class=\"paragraph\">\n<p>Now that you know which plugins will be downloaded, wouldn&#8217;t it be nice to know\nif these are the latest versions or if any of the versions you want to install have\nsecurity warnings?  You can do that now too.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/gsoc-plugin-management-tool/securitywarnings.png\" alt=\"Security Warning CLI Option Example\">\n</div>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/gsoc-plugin-management-tool/available-updates.png\" alt=\"Security Warning CLI Option Example\">\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"next-steps-and-additional-information\"><a class=\"anchor\" href=\"#next-steps-and-additional-information\"></a>Next Steps and Additional Information</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The updates mentioned in this blog will be released soon so you can try them out.\nThe focus of Phase 3 will be to continue to iterate upon and improve the library\nand CLI. We hope to release a first version and submit a pull request to Jenkins Docker soon.\nThanks to everyone who has already tried it out and given feedback! I will also be\npresenting my work at <a href=\"https://www.cloudbees.com/devops-world/san-francisco\">DevOps World</a>\nin San Francisco in a few weeks.  You can use the code PREVIEW for a discounted registration\n($799 instead of $1,499).</p>\n</div>\n<div class=\"paragraph\">\n<p>Feel free to reach out through\nthe <a href=\"https://gitter.im/jenkinsci/plugin-installation-manager-cli-tool\">Plugin Installation Manager CLI Tool Gitter chat</a> or through\nthe <a href=\"mailto:jenkinsci-dev@googlegroups.com\">Jenkins Developer Mailing list</a>. I would love to get your questions, comments, and feedback!\nWe have meetings Tuesdays and Thursdays at 6PM UTC.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://docs.google.com/presentation/d/1wsM09IGgoA7gSsA9tW5fHlFAhl6B9fXlr-4iEP89SCk/edit?usp=sharing\">Phase 2 Presentation Slides</a></p>\n</li>\n<li>\n<p><a href=\"https://youtu.be/HlENuZZq7zc?t=221\">Phase 2 Recorded Demo</a></p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-58199?jql=project%20%3D%20JENKINS%20AND%20component%20%3D%20plugin-installation-manager-tool\">Jira Issue Search</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/plugin-installation-manager-tool\">Repository</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","id":"9f72bb8f-5b81-55ef-8ffc-f58fb42841f2","title":"Plugin Management Library and CLI Tool Phase 2 GSoC Updates","date":"2019-07-30T00:00:00.000Z","slug":"/blog/2019/07/30/plugin-management-tool-phase2-updates/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#280818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7f211/stopalopa.jpg","srcSet":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/405b9/stopalopa.jpg 32w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7b6be/stopalopa.jpg 64w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7f211/stopalopa.jpg 128w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/ebcfb/stopalopa.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/0ade5/stopalopa.webp 32w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/5b0b1/stopalopa.webp 64w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/96834/stopalopa.webp 128w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/805f6/stopalopa.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":184}}},"blog":null,"github":"stopalopa","html":"<div class=\"paragraph\">\n<p>Natasha is a Master&#8217;s student at Penn State University. She was accepted to Google Summer of Code 2019 for a project on creating <a href=\"https://jenkins.io/projects/gsoc/2019/plugin-installation-manager-tool-cli/\">a plugin management tool</a>.\nIn her spare time she enjoys spending time outdoors, listening to podcasts and cuddling with her cat.</p>\n</div>","id":"stopalopa","irc":null,"linkedin":null,"name":"Natasha Stopa","slug":"/blog/authors/stopalopa","twitter":"stopamine"}]}},"pageContext":{"next":"/blog/2019/08/16/folder-auth-plugin/","previous":"/blog/2019/07/25/azure-artifact-manager/","id":"9f72bb8f-5b81-55ef-8ffc-f58fb42841f2"}},
    "staticQueryHashes": ["1271460761","3649515864"]}