{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2019/07/09/Phase1-Updates-On-Working-Hours-Plugin/",
    "result": {"data":{"blog":{"html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The Working Hour Plugin provides an interface to set up a schedule of allowable build days and times.  Jobs that run outside of configured working hours are held until the next allowable build time.</p>\n</div>\n<div class=\"paragraph\">\n<p>For the first code phase at Google Summer of Code, I&#8217;ve been working on <a href=\"/projects/gsoc/2019/working-hours-improvements/\">Working Hours Project</a>, which needed improvements on usability.</p>\n</div>\n<div class=\"paragraph\">\n<p>Rather than classical Jelly pages, React seems to be more prefered when we want to design a much customized UI with a huge amount of libraries we could use, especially the open source components such as date pickers.</p>\n</div>\n<div class=\"paragraph\">\n<p>But we have to face a challenge of the integration of React and Jenkins, which I&#8217;m currently working on.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"achievements-for-the-first-code-phase\"><a class=\"anchor\" href=\"#achievements-for-the-first-code-phase\"></a>Achievements For The First Code Phase</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>For the first code phase, we are focusing on the UI improvements, we&#8217;ve achieved following major improvements:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>A standalone webapp which could be then integrated.</p>\n</li>\n<li>\n<p>Slider for choosing a time range.</p>\n</li>\n<li>\n<p>More fields when setting a excluded date.</p>\n</li>\n<li>\n<p>Presets for choosing a excluded date.</p>\n</li>\n<li>\n<p>A Jenkins styling UI.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"how-we-integrate-react-into-jenkins\"><a class=\"anchor\" href=\"#how-we-integrate-react-into-jenkins\"></a>How We Integrate React Into Jenkins</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>A solution doc for integration could be found at\n<a href=\"https://drive.google.com/open?id=1JLRCDg9JNBWR0Dfq8w3pTI9mrl6i9JU29pBoH6bO0J8\" class=\"bare\">https://drive.google.com/open?id=1JLRCDg9JNBWR0Dfq8w3pTI9mrl6i9JU29pBoH6bO0J8</a></p>\n</div>\n<div class=\"paragraph\">\n<p>At first, we found BlueOcean is a great example for using React in Jenkins, but yet it&#8217;s not a choice for common development with plugins. So we need to find out another way to integrate.</p>\n</div>\n<div class=\"paragraph\">\n<p>Here are the steps to do the integration:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>A mount point in your jelly file, usually it&#8217;s a element with a unique <code>id</code>.</p>\n</li>\n<li>\n<p>Write your React Application, but need to set the mount point to the id you set above.</p>\n</li>\n<li>\n<p>Copy the output after you build the Project into the plugin&#8217;s webapp dir.</p>\n</li>\n<li>\n<p>Add your files using a script tag in your jelly file.</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">&lt;script type=\"text/javascript\"\n        src=\"${resURL}/plugin/working-hours/js/main.js\"&gt;&lt;/script&gt;</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Once we are using React, the traditional jelly request won&#8217;t be available anymore, another way to process requests will be using stapler. You can define a process function like below.\n[source, java]</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"nowrap\">public HttpResponse doDynamic(StaplerRequest request) {\n        if (config == null) {\n            config = ExtensionList.lookup(WorkingHoursPlugin.class).get(0);\n        }\n        String restOfPath = request.getRestOfPath();\n        String[] pathTokens = restOfPath.split(\"/\");\n        List&lt;String&gt; params = new ArrayList&lt;&gt;();\n        switch (params.get(0)) {\n            case \"list-excluded-dates\":\n                return listExcludedDate(request);\n            case \"set-excluded-dates\":\n                return setExcludedDates(request);\n            case \"list-time-ranges\":\n                return listTimeRanges(request);\n            case \"set-time-ranges\":\n                return setTimeRanges(request);\n        }\n    }</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"run-our-application\"><a class=\"anchor\" href=\"#run-our-application\"></a>Run Our Application</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>If you would like to take a look at our plugin, you can go to the repo\n<a href=\"https://github.com/jenkinsci/working-hours-plugin/tree/dev\">working-hours-plugin</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Just follow the README file, then you could run a copy of your working hours plugin.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"screenshots\"><a class=\"anchor\" href=\"#screenshots\"></a>Screenshots</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The current plugin&#8217;s outlook is a bit simple and the plugin is a bit unconvinient for use.</p>\n</div>\n<div class=\"paragraph\">\n<p>One of the problems is that if we want to input a excluded date, it&#8217;ll be a string in a constant format like 15/9/2019, but the new UI choosed React so we could use a datepicker to improve this.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"current-plugin\"><a class=\"anchor\" href=\"#current-plugin\"></a>Current Plugin</h3>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/working-hours/working-hours-config.png\" alt=\"Screenshot for Current Plugin\"></span></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"new-time-ranges\"><a class=\"anchor\" href=\"#new-time-ranges\"></a>New (Time Ranges)</h3>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/working-hours/working-hours-example-time-range.png\" alt=\"Time Ranges Example\"></span></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"new-exclude-dates\"><a class=\"anchor\" href=\"#new-exclude-dates\"></a>New (Exclude Dates)</h3>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/post-images/working-hours/working-hours-exmaple-excluded-date.png\" alt=\"Excluded Dates Example\"></span></p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"helpful-links\"><a class=\"anchor\" href=\"#helpful-links\"></a>Helpful links</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>If you have any questions or advices, we are glad to hear from you.</p>\n</div>\n<div class=\"paragraph\">\n<p>Several useful links are listed below:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/jenkinsci/working-hours-plugin/tree/dev\">Develop Repo</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/working-hours-plugin\">Main Repo</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.google.com/document/d/1SezLtQejur2ji-KUur3dC3TXK8ivxrttiwHYbTkA8Yk/edit#\">Design Doc</a></p>\n</li>\n<li>\n<p><a href=\"https://drive.google.com/open?id=1JLRCDg9JNBWR0Dfq8w3pTI9mrl6i9JU29pBoH6bO0J8\">Doc for React Integration Solution </a></p>\n</li>\n<li>\n<p><a href=\"https://gitter.im/jenkinsci/working-hours-plugin\">\n    Gitter Chat\n</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.google.com/presentation/d/1Psz6MrYvw81D_7d8pfW04FDoBtexlSVdgrbqp99Wjm0/edit?usp=sharing\">\n    Slides for Phase 1 Demo\n</a></p>\n</li>\n<li>\n<p><a href=\"https://www.youtube.com/watch?v=MDs0Vr7gnnA\">\n    Video Recording for Phase 1\n</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","id":"e038d6ca-3dd1-5904-9bf3-e30e4baa0a9c","title":"GSOC Phase 1 Updates On Working Hours Plugin","date":"2019-07-09T00:00:00.000Z","slug":"/blog/2019/07/09/Phase1-Updates-On-Working-Hours-Plugin/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":null},"blog":null,"github":"ShenJack","html":"<div class=\"paragraph\">\n<p>Shen is a student from Beijing Forestry University. One of the students accepted to GSoC 2019.</p>\n</div>","id":"jackshen","irc":null,"linkedin":null,"name":"Jack Shen","slug":"/blog/author/jackshen","twitter":null}]}},"pageContext":{"next":"/blog/2019/07/11/remoting-kafka-kubernetes-phase-1/","previous":"/blog/2019/07/05/jenkins-pipeline-stage-result-visualization-improvements/","id":"e038d6ca-3dd1-5904-9bf3-e30e4baa0a9c"}},
    "staticQueryHashes": ["1271460761","3649515864"]}