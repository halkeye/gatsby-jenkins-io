{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2019/07/02/plugin-management-tool-alpha-release/",
    "result": {"data":{"blog":{"html":"<div class=\"paragraph\">\n<p><em>\"Everybody is re-inventing the wheel, partially implementing the \"details\" of plugin management (signed metadata, artifacts checksums, plugins detached from core,&#8230;&#8203;).\nIt becomes obvious Jenkins should provide adequate tooling for plugin installation outside a live Jenkins instance.\"</em> jira:JENKINS-53767[]</p>\n</div>\n<div class=\"paragraph\">\n<p>My <a href=\"/projects/gsoc/2019/plugin-installation-manager-tool-cli/\">Google Summer of Code project</a>\ntries to solve this problem by creating a library that will unify plugin management logic across the different implementations\nof Jenkins and providing a CLI tool that will make it easy for users to download plugins and view plugin information before Jenkins even starts.\nI&#8217;m excited to share that we just released an alpha version that you can check out <a href=\"https://github.com/jenkinsci/plugin-installation-manager-tool/releases\">here</a>!</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"gsoc-phase-1-update\"><a class=\"anchor\" href=\"#gsoc-phase-1-update\"></a>GSoC Phase 1 Update</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>While I looked into pulling the <a href=\"https://github.com/jenkinsci/jenkins/blob/master/core/src/main/java/hudson/PluginManager.java\">Plugin Manager</a> out of Jenkins core,\nthis ended up being a challenging first step due to the complexity and number of dependencies.  We instead decided to start by converting the\n<a href=\"https://github.com/jenkinsci/docker/blob/master/install-plugins.sh\">install-plugins.sh bash script</a> in Jenkins Docker to Java.\nThere are several issues with the install-plugins.sh script - namely, that it is a bash script and has limited extensibility.\nFurthermore, it does not retrieve all of the most-up-to-date update center metadata.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"alpha-release-details\"><a class=\"anchor\" href=\"#alpha-release-details\"></a>Alpha Release Details</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Mimicking what was done in the <a href=\"https://github.com/jenkinsci/docker/blob/master/install-plugins.sh\">install-plugins.sh</a> script from the official Jenkins Docker image, the new plugin management library takes in a list of plugins, their versions,\nand/or urls from which to download the plugins, and downloads the requested plugins and their dependencies. The plugins are downloaded from the update center\nto a specified directory, and can then be loaded into Jenkins. Currently, the plugins to be downloaded can be specified via a plugins.txt file and/or the -plugins cli option, but we plan to further expand the input formats that can be accepted.\n<a href=\"https://github.com/jenkinsci/docker#plugin-version-format\">Custom version specifiers</a> for different update centers are also supported.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/gsoc-plugin-management-tool/pluginstxt.png\" alt=\"Example plugins.txt File\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The library will first check if any of the requested plugins are currently either installed in the user-specified download location or user-specified Jenkins war file.\nAlready installed plugins will be ignored or upgraded if a higher version is requested or required as a dependency.  After determining the plugin download URL, the library\nwill download the plugins and resolve and download their dependencies.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/gsoc-plugin-management-tool/downloadexample.png\" alt=\"Example of Downloading Plugins\">\n</div>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/gsoc-plugin-management-tool/downloadedplugins.png\" alt=\"Plugin Download Directory\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This is just the beginning: the plugin manager library and cli tool are very much still a work in progress.\nFor the most up-to-date information on CLI options and how to run the tool, see the <a href=\"https://github.com/jenkinsci/plugin-installation-manager-tool/blob/master/README.md\">repository README.md</a>.\nMore robust input parsing, support for security warnings and available updates, Docker integration, and additional features coming soon!</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"links-and-feedback\"><a class=\"anchor\" href=\"#links-and-feedback\"></a>Links and Feedback</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Feel free to reach out through\nthe <a href=\"https://gitter.im/jenkinsci/plugin-installation-manager-cli-tool\">Plugin Installation Manager CLI Tool Gitter chat</a> or through\nthe <a href=\"mailto:jenkinsci-dev@googlegroups.com\">Jenkins Developer Mailing list</a>. I would love to get your questions, comments, and feedback!\nWe have meetings Tuesdays and Thursdays at 6PM UTC.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://docs.google.com/presentation/d/12Bo8w9SinrG5n82w-Unjx4MNq0mjkHFEOMc3Jf6rTQQ/edit#slide=id.p1\">Phase 1 Presentation Slides</a></p>\n</li>\n<li>\n<p><a href=\"https://youtu.be/MDs0Vr7gnnA?t=196\">Phase 1 Recorded Demo</a></p>\n</li>\n<li>\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-58199?jql=project%20%3D%20JENKINS%20AND%20component%20%3D%20plugin-installation-manager-tool\">Jira Issue Search</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jenkinsci/plugin-installation-manager-tool\">Repository</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","id":"535f2380-6f41-5360-bb77-129bf606e195","title":"Plugin Management Library and CLI Tool Alpha Release","date":"2019-07-02T00:00:00.000Z","slug":"/blog/2019/07/02/plugin-management-tool-alpha-release/","links":{"discourse":""},"authors":[{"avatar":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#280818","images":{"fallback":{"src":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7f211/stopalopa.jpg","srcSet":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/405b9/stopalopa.jpg 32w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7b6be/stopalopa.jpg 64w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/7f211/stopalopa.jpg 128w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/ebcfb/stopalopa.jpg 256w","sizes":"(min-width: 128px) 128px, 100vw"},"sources":[{"srcSet":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/0ade5/stopalopa.webp 32w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/5b0b1/stopalopa.webp 64w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/96834/stopalopa.webp 128w,\n/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/805f6/stopalopa.webp 256w","type":"image/webp","sizes":"(min-width: 128px) 128px, 100vw"}]},"width":128,"height":184}},"publicURL":"/gatsby-jenkins-io/static/55656e58d7dc5462c696501b0b08bd16/stopalopa.jpg"},"blog":null,"github":"stopalopa","html":"<div class=\"paragraph\">\n<p>Natasha is a Master&#8217;s student at Penn State University. She was accepted to Google Summer of Code 2019 for a project on creating <a href=\"https://jenkins.io/projects/gsoc/2019/plugin-installation-manager-tool-cli/\">a plugin management tool</a>.\nIn her spare time she enjoys spending time outdoors, listening to podcasts and cuddling with her cat.</p>\n</div>","id":"stopalopa","irc":null,"linkedin":null,"name":"Natasha Stopa","slug":"/blog/authors/stopalopa/","twitter":"stopamine"}]}},"pageContext":{"id":"535f2380-6f41-5360-bb77-129bf606e195"}},
    "staticQueryHashes": ["1271460761","3649515864"]}