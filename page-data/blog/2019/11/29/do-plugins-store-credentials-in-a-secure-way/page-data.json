{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2019/11/29/do-plugins-store-credentials-in-a-secure-way/",
    "result": {"data":{"blog":{"html":"<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nThis is a speaker blog post for a DevOps World | Jenkins World 2019 talk in Lisbon, Portugal and has been posted in line with NCC Group responsible disclosure policy.\nRelated Jenkins security advisories:\n<a href=\"/security/advisory/2017-11-08/\">2017-11-08</a>,\n<a href=\"/security/advisory/2017-11-16/\">2017-11-16</a>,\n<a href=\"/security/advisory/2018-06-25/\">2018-06-25</a>,\n<a href=\"/security/advisory/2018-07-30/\">2018-07-30</a>,\n<a href=\"/security/advisory/2018-09-25/\">2018-09-25</a>,\n<a href=\"/security/advisory/2019-02-19/\">2019-02-19</a>,\n<a href=\"/security/advisory/2019-03-06/\">2019-03-06</a>,\n<a href=\"/security/advisory/2019-03-25/\">2019-03-25</a>,\n<a href=\"/security/advisory/2019-04-03/\">2019-04-03</a>,\n<a href=\"/security/advisory/2019-04-17/\">2019-04-17</a>,\n<a href=\"/security/advisory/2019-08-07/\">2019-08-07</a>,\n<a href=\"/security/advisory/2019-09-12/\">2019-09-12</a>,\n<a href=\"/security/advisory/2019-10-01/\">2019-10-01</a>,\n<a href=\"/security/advisory/2019-10-16/\">2019-10-16</a>,\n<a href=\"/security/advisory/2019-10-23/\">2019-10-23</a>.\nSome of the vulnerabilities have been announced without a fix, see <a href=\"/blog/2019/04/03/security-advisory/\">Jenkins Security Spring Cleaning 2019</a>.\nThe most of the announced vulnerabilities are fixed at the moment of this blogpost publishing.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Come join us at <a href=\"https://www.cloudbees.com/devops-world/lisbon\">DevOps World | Jenkins World 2019</a> for \"<a href=\"https://sched.co/UVWB\"><strong>The Story, the Findings and the Fixes Behind More than 100 Jenkins Plugins Vulnerabilities</strong></a>\", a talk about the most common vulnerabilities found during research in more than 100 plugins.\nWe&#8217;ll review how to prevent these vulnerabilities during plugin development so that a more secure Jenkins CI and CD environment can be built.</p>\n</div>\n<div class=\"paragraph\">\n<p>When I first began familiarising myself with Jenkins, I found myself almost overwhelmed by the amount of plugins to choose from. Most of these plugins are developed by third party developers or companies and can assist the user in a range of ways. They can extend the core functions, they can offer solutions to repetitive tasks or they can help with using a service. For example, they could help with publishing to an artifact store or spinning up cloud instances. However, before a plugin can use a network based service that requires credentials to connect, those credentials have to be typed in and saved somewhere. This raises the question, are those credentials stored securely? Or not?\nWhen I started looking at different plugins this was one of the first areas I investigated. I found a Jenkins security advisory describing this issue and came to the conclusion that this could be a problem in some plugins, albeit one that could be fixed easily. I found an example of weakly stored credentials in the Publish Over Dropbox Plugin; this plugin used a simple web form with a textbox element to display the token in the plugin’s settings page. This token was stored in plaintext:</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/post-images/2019-11-plugin-creds-secure-store/PluginWebForm.png\" alt=\"PluginWebForm\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The following Jelly code was behind the web form and shows that a password field wasn’t used:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-html\" data-lang=\"html\">&lt;f:entry title=\"${%Token}\" field=\"authorizationCode\"&gt;\n    &lt;f:textbox/&gt;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The related plugin .xml file contained the secret key in plaintext:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-xml\" data-lang=\"xml\">&lt;org.jenkinsci.plugins.publishoverdropbox.impl.DropboxTokenImpl plugin=\"publish-\nover-dropbox@1.2.2\"&gt;\n  &lt;scope&gt;GLOBAL&lt;/scope&gt;\n  &lt;id&gt;woodspeed&lt;/id&gt;\n  &lt;description&gt;&lt;/description&gt;\n  &lt;authorizationCode&gt;lYD2VnNz&lt;/authorizationCode&gt;\n  &lt;accessCode&gt;lYD2VnNz&lt;/accessCode&gt;\n&lt;/org.jenkinsci.plugins.publishoverdropbox.impl.DropboxTokenImpl&gt;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins offers at least two ways to store credentials in an encrypted format:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Using a Secret type offered by Jenkins</p>\n</li>\n<li>\n<p>Third party plugin called Credentials Plugin</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>The first case is the easiest solution, because Jenkins will automatically handle the encryption and decryption.</p>\n</div>\n<div class=\"paragraph\">\n<p>Developers should also use the password field tag instead of the textbox field, as shown in the following Jelly control example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight nowrap\"><code class=\"language-html\" data-lang=\"html\">&lt;f:entry title=\"${%Secret Access Key}\" help=\"...\"&gt;\n  &lt;f:password field=\"secretKey\" /&gt;\n&lt;/f:entry&gt;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If you would like to know what other vulnerabilities I discovered and how to fix them, come and join us for the presentation in Lisbon!\nIn case you are unable to attend the conference, you can read more at <a href=\"https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2019/may/story-of-a-hundred-vulnerable-jenkins-plugins/\">Story of a Hundred Vulnerable Jenkins Plugins</a>.</p>\n</div>","id":"c4402fa6-fa64-5bd5-9fce-956f048b190a","title":"Do Plugins Store Credentials In A Secure Way? - DevOps World | Jenkins World 2019","date":"2019-11-29T00:00:00.000Z","slug":"/blog/2019/11/29/do-plugins-store-credentials-in-a-secure-way/","links":{"discourse":""},"authors":[{"avatar":null,"blog":null,"github":"woodspeed","html":"<div class=\"paragraph\">\n<p>Viktor is a security consultant and the 2019 Jenkins Security MVP.</p>\n</div>","id":"woodspeed","irc":null,"linkedin":null,"name":"Viktor Gazdag","slug":"/blog/author/woodspeed","twitter":"wucpi"}]}},"pageContext":{"next":"/blog/2019/12/02/matrix-building-with-scripted-pipeline/","previous":"/blog/2019/11/25/macos-native-installer-deprecation/","id":"c4402fa6-fa64-5bd5-9fce-956f048b190a"}},
    "staticQueryHashes": ["1271460761","3649515864"]}